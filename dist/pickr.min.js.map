{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/lib/utils.js","webpack:///./src/js/lib/color.js","webpack:///./src/js/lib/hsvacolor.js","webpack:///./src/js/helper/moveable.js","webpack:///./src/js/helper/selectable.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js","webpack:///./src/js/helper/nanopop.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","once","element","event","fn","options","on","helper","apply","this","arguments","removeEventListener","eventListener","off","method","elements","events","length","undefined","HTMLCollection","NodeList","Array","from","isArray","el","ev","_objectSpread","capture","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","base","con","subtree","child","children","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","isNaN","isFinite","mul","deltaY","inc","Number","shiftKey","ctrlKey","newNum","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","Math","max","floor","round","hsvToRgb","h","v","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","_numarize4","_numarize4$","a","splitAt","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","rhsva","toString","concat","toFixed","toHSLA","hsvToHsl","rhsla","toRGBA","rrgba","toCMYK","rgb","hsvToCmyk","rcmyk","toHEXA","padStart","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","trigger","update","wrapperRect","destroy","Selectable","className","onTap","forEach","classList","template","_ref","components","strings","useAsButton","inline","appClass","hidden","palette","preview","hue","opacity","keys","interaction","input","save","clear","int","find","add","contains","Pickr","constructor","pickr_defineProperty","swatchselect","change","init","disabled","comparison","swatches","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","_opt","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","button","_root","requestAnimationFrame","cb","offsetParent","body","setColor","_nanopop","reference","pos","_ref$padding","padding","vBehaviour","start","auto","end","hBehaviour","bottom","_pos$split2","nanopop_slicedToArray","split","_pos$split2$","variant","rb","eb","hDirs","vDirs","ch","innerWidth","innerHeight","Nanopop","app","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","reduce","pv","cv","ci","querySelector","shadowRoot","buildPickr","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","comp","picker","_color","offsetHeight","cssRGBaString","background","currentColor","_recalc","_updateOutput","remove","slider","backgroundColor","selectable","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","updateTimeout","clearTimeout","setTimeout","_eventBindings","_len","args","_key","_eventListener","callBacks","index","indexOf","splice","Color","_swatchColors","hsvaColorObject","removeSwatch","swatchColor","silent","_this$_root","destroyAndRemove","pickr","recalc","_this$components","hueY","opacityY","pickerWrapper","pickerX","pickerY","string","_Color$parseToHSV2","utype","startsWith","click","getColorRepresentation","getColor","getRoot","enable","utils","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Add an eventlistener which will be fired only once.\n *\n * @param element Target element\n * @param event Event name\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const once = (element, event, fn, options) => on(element, event, function helper() {\n    fn.apply(this, arguments);\n    this.removeEventListener(event, helper);\n}, options);\n\n/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    for (const el of elements) {\n        for (const ev of events) {\n            el[method](ev, fn, {capture: false, ...options});\n        }\n    }\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a 'data-key' attribute will be saved in a object (which will be returned)\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, 'data-con');\n        const key = removeAttribute(element, 'data-key');\n\n        // Check and save element\n        if (key) {\n            base[key] = element;\n        }\n\n        // Check all children\n        const subtree = con ? (base[con] = {}) : base;\n        for (let child of element.children) {\n\n            // Check if element should be saved as array\n            const arr = removeAttribute(child, 'data-arr');\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = [])).push(child);\n            } else {\n                resolve(child, subtree);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param negative\n */\nexport function adjustableInputNumbers(el, negative = true) {\n\n    // Check if a char represents a number\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\n\n    function handleScroll(e) {\n        const val = el.value;\n        const off = el.selectionStart;\n        let numStart = off;\n        let num = ''; // Will be the number as string\n\n        // Look back\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\n            num = val[i] + num;\n            numStart--; // Find start of number\n        }\n\n        // Look forward\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\n            num += val[i];\n        }\n\n        // Check if number is valid\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\n\n            const mul = e.deltaY < 0 ? 1 : -1;\n            const inc = ([1, 10, 100])[Number(e.shiftKey || e.ctrlKey * 2)] * mul;\n            let newNum = Number(num) + inc;\n\n            if (!negative && newNum < 0) {\n                newNum = 0;\n            }\n\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\n            const curPos = numStart + String(newNum).length;\n\n            // Update value and set cursor\n            el.value = newStr;\n            el.focus();\n            el.setSelectionRange(curPos, curPos);\n        }\n\n        // Prevent default\n        e.preventDefault();\n\n        // Trigger input event\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n","// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    let i = floor(h);\n\n    let f = h - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    let mod = i % 6;\n    let r = [v, q, p, p, t, v][mod];\n    let g = [t, v, v, q, p, p][mod];\n    let b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        round(v).toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    let l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100, m /= 100, y /= 100, k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100, l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    let ns = (2 * s / (l + s)) * 100;\n    let v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSV(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                let [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break;\n\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\n            }\n            case 'rgba': {\n                let [, , r, g, b, a = 1] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...rgbToHsv(r, g, b), a], type};\n            }\n            case 'hex': {\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\n                let [, hex] = match;\n\n                // Fill up opacity if not declared\n                if (hex.length === 3) {\n                    hex += 'F';\n                } else if (hex.length === 6) {\n                    hex += 'FF';\n                }\n\n                let alpha;\n                if (hex.length === 4) {\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\n                } else if (hex.length === 8) {\n                    [hex, alpha] = splitAt(hex, 6);\n                }\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                alpha = parseInt(alpha, 16) / 255;\n                return {values: [...hexToHsv(hex), alpha], type};\n            }\n            case 'hsla': {\n                let [, , h, s, l, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...hslToHsv(h, s, l), a], type};\n            }\n            case 'hsva': {\n                let [, , h, s, v, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [h, s, v, a], type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n    const {ceil} = Math;\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v];\n            const rhsva = hsva.map(ceil);\n\n            hsva.push(that.a);\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = hsvToHsl(that.h, that.s, that.v);\n            const rhsla = hsla.map(ceil);\n\n            hsla.push(that.a);\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = hsvToRgb(that.h, that.s, that.v);\n            const rrgba = rgba.map(ceil);\n\n            rgba.push(that.a);\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            const rcmyk = cmyk.map(ceil);\n\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            hex.toString = () => {\n\n                // Check if alpha channel make sense, convert it to 255 number space, convert\n                // to hex and pad it with zeros if needet.\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0)\n                    .toString(16)\n                    .toUpperCase(), 2, '0');\n\n                return `#${hex.join('').toUpperCase() + alpha}`;\n            };\n\n            return hex;\n        },\n\n        clone() {\n            return HSVaColor(that.h, that.s, that.v, that.a);\n        }\n    };\n\n    return that;\n}\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lockX: false,\r\n            lockY: false,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {element} = options;\r\n            const b = that.options.wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (!options.lockX) {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (!options.lockY) {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            options.onchange(x, y);\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: wrapperRect.left + x,\r\n                clientY: wrapperRect.top + y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","import * as _ from './lib/utils';\n\nexport default ({components: c, strings: s, useAsButton, inline, appClass}) => {\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n\n    const root = _.createFromTemplate(`\n      <div data-key=\"root\" class=\"pickr\">\n\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\n\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" ${inline ? 'style=\"position: unset\"' : ''}>\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\n            </div>\n\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\n            </div>\n\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\n            </div>\n\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\n            </div>\n          </div>\n\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \n\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\n\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\n\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\n          </div>\n        </div>\n      </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n","// Import styles\nimport '../scss/pickr.scss';\n\n// Import utils\nimport * as _     from './lib/utils';\nimport * as Color from './lib/color';\n\n// Import classes\nimport {HSVaColor} from './lib/hsvacolor';\nimport Moveable    from './helper/moveable';\nimport Selectable  from './helper/selectable';\nimport Nanopop     from './helper/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // Replace element with color picker\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        'swatchselect': [],\n        'change': [],\n        'save': [],\n        'init': []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {\n                interaction: {}\n            },\n            strings: {},\n\n            swatches: null,\n            inline: false,\n\n            default: 'fff',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, inline, components, position} = opt;\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Finalize build\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._nanopop = Nanopop({\n                reference: that._root.button,\n                el: that._root.app,\n                pos: position\n            });\n\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const {parentElement} = opt.el;\n\n            if (parentElement.lastChild === opt.el) {\n                parentElement.appendChild(root.app);\n            } else {\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    if (!comp.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent), \n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    // If the user changes the color, remove the cleared icon\n                    _root.button.classList.remove('clear');\n                }\n            }),\n\n            hue: Moveable({\n                lockX: true,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(x, y) {\n                    if (!comp.hue || !comp.palette) return;\n\n                    // Calculate hue\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lockX: true,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(x, y) {\n                    if (!comp.opacity || !comp.palette) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            _.adjustableInputNumbers(_root.interaction.result, false);\n        }\n\n        if (!options.inline) {\n            let updateTimeout;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(_.on(window, ['scroll', 'resize'], () => {\n                if (this.isOpen()) {\n                    this.hide();\n\n                    if (updateTimeout) {\n                        clearTimeout(updateTimeout);\n                    }\n\n                    updateTimeout = setTimeout(() => this.show(), 250);\n                }\n            }));\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n\n        // No repositioning needed if inline\n        if (!this.options.inline) {\n            this._nanopop.update();\n        }\n    }\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n\n        // remove .pcr-app\n        const app = this._root.app;\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        const pickr = this;\n        Object.keys(pickr).forEach(key => pickr[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Short names\n        const {hue, opacity, palette} = this.components;\n\n        // Calculate y position of hue slider\n        const hueWrapper = hue.options.wrapper;\n        const hueY = hueWrapper.offsetHeight * (h / 360);\n        hue.update(0, hueY);\n\n        // Calculate y position of opacity slider\n        const opacityWrapper = opacity.options.wrapper;\n        const opacityY = opacityWrapper.offsetHeight * a;\n        opacity.update(0, opacityY);\n\n        // Calculate y and x position of color palette\n        const pickerWrapper = palette.options.wrapper;\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\n        palette.update(pickerX, pickerY);\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n        this._recalc = recalc; // Restore old state\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '0.5.1';\nexport default Pickr;\n","/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, pos, padding = 8}) {\n    const vBehaviour = {start: 'sme', auto: 'ams', end: 'ems'};\n    const hBehaviour = {top: 'tb', bottom: 'bt'};\n    const [position, variant = 'middle'] = pos.split('-');\n    let left, top;\n\n    return {\n        update() {\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n\n            const hDirs = {\n                b: rb.bottom + padding,\n                t: rb.top - eb.height - padding\n            };\n\n            const vDirs = {\n                s: rb.left + rb.width - eb.width,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\n                e: rb.left\n            };\n\n            for (const ch of vBehaviour[variant]) {\n                const v = vDirs[ch];\n                if (v > 0 && (v + eb.width) < window.innerWidth) {\n                    left = v;\n                    break;\n                }\n            }\n\n            for (const ch of hBehaviour[position]) {\n                const v = hDirs[ch];\n                if (v > 0 && (v + eb.height) < window.innerHeight) {\n                    top = v;\n                    break;\n                }\n            }\n\n            el.style.left = `${left}px`;\n            el.style.top = `${top}px`;\n        }\n    };\n}\n"],"sourceRoot":""}