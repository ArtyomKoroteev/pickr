{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js","webpack:///./src/js/libs/nanopop.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","_objectSpread","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","child","children","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","length","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","numarize","array","test","undefined","type","exec","values","a","splitAt","substring","alpha","HSVaColor","ceil","that","toHSVA","rhsva","toString","concat","toFixed","toHSLA","hsvToHsl","rhsla","toRGBA","rrgba","toCMYK","rgb","hsvToCmyk","rcmyk","toHEXA","padStart","hsvToHex","toUpperCase","join","clone","clamp","Moveable","opt","assign","lock","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","update","destroy","Selectable","className","onTap","forEach","classList","template","components","strings","useAsButton","inline","appClass","hidden","palette","preview","hue","opacity","keys","interaction","input","save","clear","int","find","add","contains","Pickr","constructor","pickr_defineProperty","this","swatchselect","change","init","disabled","comparison","swatches","sliders","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","getInfo","pos","cached","variant","split","isVertical","rb","eb","so","total","scrollTop","getScrollOffset","positions","variants","apply","bevs","vars","styleprop","vertical","adder","win","ch","v1Ok","v2Ok","margin","Nanopop","_root","button","app","requestAnimationFrame","cb","offsetParent","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","reduce","pv","cv","ci","querySelector","shadowRoot","buildPickr","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","comp","sh","opposite","picker","_color","cssRGBaString","background","currentColor","_recalc","_updateOutput","remove","slider","backgroundColor","selectable","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","toLowerCase","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","event","args","_eventListener","callBacks","indexOf","splice","Color","_swatchColors","hsvaColorObject","removeSwatch","swatchColor","silent","destroyAndRemove","pickr","recalc","string","utype","startsWith","click","getColor","getRoot","enable","utils","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a 'data-key' attribute will be saved in a object (which will be returned)\r\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, 'data-con');\r\n        const key = removeAttribute(element, 'data-key');\r\n\r\n        // Check and save element\r\n        if (key) {\r\n            base[key] = element;\r\n        }\r\n\r\n        // Check all children\r\n        const subtree = con ? (base[con] = {}) : base;\r\n        for (let child of Array.from(element.children)) {\r\n\r\n            // Check if element should be saved as array\r\n            const arr = removeAttribute(child, 'data-arr');\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = [])).push(child);\r\n            } else {\r\n                resolve(child, subtree);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n","// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let i = floor(h);\r\n\r\n    let f = h - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    let mod = i % 6;\r\n    let r = [v, q, p, p, t, v][mod];\r\n    let g = [t, v, v, q, p, p][mod];\r\n    let b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    let l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100, m /= 100, y /= 100, k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100, l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    let ns = (2 * s / (l + s)) * 100;\r\n    let v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSV(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\r\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                let [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break;\r\n\r\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\r\n            }\r\n            case 'rgba': {\r\n                let [, , r, g, b, a = 1] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], type};\r\n            }\r\n            case 'hex': {\r\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\r\n                let [, hex] = match;\r\n\r\n                // Fill up opacity if not declared\r\n                if (hex.length === 3) {\r\n                    hex += 'F';\r\n                } else if (hex.length === 6) {\r\n                    hex += 'FF';\r\n                }\r\n\r\n                let alpha;\r\n                if (hex.length === 4) {\r\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\r\n                } else if (hex.length === 8) {\r\n                    [hex, alpha] = splitAt(hex, 6);\r\n                }\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                alpha = parseInt(alpha, 16) / 255;\r\n                return {values: [...hexToHsv(hex), alpha], type};\r\n            }\r\n            case 'hsla': {\r\n                let [, , h, s, l, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], type};\r\n            }\r\n            case 'hsva': {\r\n                let [, , h, s, v, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [h, s, v, a], type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const {ceil} = Math;\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v];\r\n            const rhsva = hsva.map(ceil);\r\n\r\n            hsva.push(that.a);\r\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = hsvToHsl(that.h, that.s, that.v);\r\n            const rhsla = hsla.map(ceil);\r\n\r\n            hsla.push(that.a);\r\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = hsvToRgb(that.h, that.s, that.v);\r\n            const rrgba = rgba.map(ceil);\r\n\r\n            rgba.push(that.a);\r\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            const rcmyk = cmyk.map(ceil);\r\n\r\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            hex.toString = () => {\r\n\r\n                // Check if alpha channel make sense, convert it to 255 number space, convert\r\n                // to hex and pad it with zeros if needet.\r\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                    .toString(16)\r\n                    .toUpperCase().padStart(2, '0');\r\n\r\n                return `#${hex.join('').toUpperCase() + alpha}`;\r\n            };\r\n\r\n            return hex;\r\n        },\r\n\r\n        clone() {\r\n            return HSVaColor(that.h, that.s, that.v, that.a);\r\n        }\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nconst clamp = v => Math.max(Math.min(v, 1), 0);\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lock: null,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options: {lock}, cache} = that;\r\n            const {element, wrapper} = options;\r\n            const b = wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (lock !== 'h') {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (lock !== 'v') {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            const cx = clamp(x / wrapper.offsetWidth);\r\n            const cy = clamp(y / wrapper.offsetHeight);\r\n\r\n            switch (lock) {\r\n                case 'v':\r\n                    return options.onchange(cx);\r\n                case 'h':\r\n                    return options.onchange(cy);\r\n                default:\r\n                    return options.onchange(cx, cy);\r\n            }\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: left + width * x,\r\n                clientY: top + height * y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div data-key=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \r\n\r\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n","// Import utils\r\nimport * as _     from './utils/utils';\r\nimport * as Color from './utils/color';\r\n\r\n// Import classes\r\nimport {HSVaColor} from './utils/hsvacolor';\r\nimport Moveable    from './libs/moveable';\r\nimport Selectable  from './libs/selectable';\r\nimport Nanopop     from './libs/nanopop';\r\nimport buildPickr  from './template';\r\n\r\nclass Pickr {\r\n\r\n    // Will be used to prevent specific actions during initilization\r\n    _initializingActive = true;\r\n\r\n    // Replace element with color picker\r\n    _recalc = true;\r\n\r\n    // Current and last color for comparison\r\n    _color = HSVaColor();\r\n    _lastColor = HSVaColor();\r\n    _swatchColors = [];\r\n\r\n    // Evenlistener name: [callbacks]\r\n    _eventListener = {\r\n        'swatchselect': [],\r\n        'change': [],\r\n        'save': [],\r\n        'init': []\r\n    };\r\n\r\n    constructor(opt) {\r\n\r\n        // Assign default values\r\n        this.options = opt = Object.assign({\r\n            appClass: null,\r\n            useAsButton: false,\r\n            disabled: false,\r\n            comparison: true,\r\n\r\n            components: {\r\n                interaction: {}\r\n            },\r\n\r\n            strings: {},\r\n            swatches: null,\r\n            inline: false,\r\n            sliders: 'v',\r\n\r\n            default: '#42445A',\r\n            defaultRepresentation: null,\r\n            position: 'bottom-middle',\r\n            adjustableNumbers: true,\r\n            showAlways: false,\r\n\r\n            closeWithKey: 'Escape'\r\n        }, opt);\r\n\r\n        const {swatches, inline, components} = opt;\r\n\r\n        // Check interaction section\r\n        if (!components.interaction) {\r\n            components.interaction = {};\r\n        }\r\n\r\n        // Overwrite palette if preview, opacity or hue are true\r\n        const {preview, opacity, hue, palette} = components;\r\n        components.palette = palette || preview || opacity || hue;\r\n\r\n        // Per default enabled if inline\r\n        if (inline) {\r\n            opt.showAlways = true;\r\n        }\r\n\r\n        // Initialize picker\r\n        this._preBuild();\r\n        this._buildComponents();\r\n        this._bindEvents();\r\n\r\n        // Finalize build\r\n        this._finalBuild();\r\n\r\n        // Append pre-defined swatch colors\r\n        if (swatches && swatches.length) {\r\n            swatches.forEach(color => this.addSwatch(color));\r\n        }\r\n\r\n        // Initialize positioning engine\r\n        this._nanopop = Nanopop({\r\n            reference: this._root.button,\r\n            el: this._root.app\r\n        });\r\n\r\n        // Initilization is finish, pickr is visible and ready for usage\r\n        const {button} = this._root;\r\n        const that = this;\r\n        requestAnimationFrame((function cb() {\r\n\r\n            // offsetParent of body is always 0. So check if it is the body\r\n            if (button.offsetParent === null && button !== document.body) {\r\n                return requestAnimationFrame(cb);\r\n            }\r\n\r\n            // Apply default color\r\n            that.setColor(opt.default);\r\n            that._rePositioningPicker();\r\n\r\n            // Initialize color representation\r\n            if (opt.defaultRepresentation) {\r\n                that._representation = opt.defaultRepresentation;\r\n                that.setColorRepresentation(that._representation);\r\n            }\r\n\r\n            // Show pickr if locked\r\n            if (opt.showAlways) {\r\n                that.show();\r\n            }\r\n\r\n            // Initialization is done - pickr is usable, fire init event\r\n            that._initializingActive = false;\r\n            that._emit('init');\r\n        }));\r\n    }\r\n\r\n    // Does only the absolutly basic thing to initialize the components\r\n    _preBuild() {\r\n        const opt = this.options;\r\n\r\n        // Check if element is selector\r\n        if (typeof opt.el === 'string') {\r\n\r\n            // Resolve possible shadow dom access\r\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\r\n                pv = pv.querySelector(cv);\r\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\r\n            }, document);\r\n        }\r\n\r\n        // Create element and append it to body to\r\n        // prevent initialization errors\r\n        this._root = buildPickr(opt);\r\n\r\n        // Check if a custom button is used\r\n        if (opt.useAsButton) {\r\n            this._root.button = opt.el; // Replace button with customized button\r\n        }\r\n\r\n        document.body.appendChild(this._root.root);\r\n    }\r\n\r\n    _finalBuild() {\r\n        const opt = this.options;\r\n        const root = this._root;\r\n\r\n        // Remove from body\r\n        document.body.removeChild(root.root);\r\n\r\n        if (opt.inline) {\r\n            const {parentElement} = opt.el;\r\n\r\n            if (parentElement.lastChild === opt.el) {\r\n                parentElement.appendChild(root.app);\r\n            } else {\r\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\r\n            }\r\n        } else {\r\n            document.body.appendChild(root.app);\r\n        }\r\n\r\n        // Don't replace the the element if a custom button is used\r\n        if (!opt.useAsButton) {\r\n\r\n            // Replace element with actual color-picker\r\n            opt.el.parentNode.replaceChild(root.root, opt.el);\r\n        }\r\n\r\n        // Call disable to also add the disabled class\r\n        if (opt.disabled) {\r\n            this.disable();\r\n        }\r\n\r\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\r\n        if (!opt.comparison) {\r\n            root.button.style.transition = 'none';\r\n            if (!opt.useAsButton) {\r\n                root.preview.lastColor.style.transition = 'none';\r\n            }\r\n        }\r\n\r\n        this.hide();\r\n    }\r\n\r\n    _buildComponents() {\r\n\r\n        // Instance reference\r\n        const inst = this;\r\n        const comp = this.options.components;\r\n        const [so, sh] = (() => {\r\n            const {sliders} = inst.options;\r\n            let so = 'v', sh = 'v';\r\n\r\n            if (sliders.match(/^[vh]+$/g)) {\r\n                if (sliders.length > 1) {\r\n                    [so, sh] = sliders;\r\n                } else {\r\n                    so = sh = sliders;\r\n                }\r\n            }\r\n\r\n            const opposite = {v: 'h', h: 'v'};\r\n            return [opposite[so], opposite[sh]];\r\n        })();\r\n\r\n        const components = {\r\n\r\n            palette: Moveable({\r\n                element: inst._root.palette.picker,\r\n                wrapper: inst._root.palette.palette,\r\n\r\n                onchange(x, y) {\r\n                    if (!comp.palette) return;\r\n                    const {_color, _root, options} = inst;\r\n\r\n                    // Calculate saturation based on the position\r\n                    _color.s = x * 100;\r\n\r\n                    // Calculate the value\r\n                    _color.v = 100 - y * 100;\r\n\r\n                    // Prevent falling under zero\r\n                    _color.v < 0 ? _color.v = 0 : 0;\r\n\r\n                    // Set picker and gradient color\r\n                    const cssRGBaString = _color.toRGBA().toString();\r\n                    this.element.style.background = cssRGBaString;\r\n                    this.wrapper.style.background = `\r\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\r\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\r\n                    `;\r\n\r\n                    // Check if color is locked\r\n                    if (!options.comparison) {\r\n                        _root.button.style.color = cssRGBaString;\r\n\r\n                        if (!options.useAsButton) {\r\n                            _root.preview.lastColor.style.color = cssRGBaString;\r\n                        }\r\n                    }\r\n\r\n                    // Change current color\r\n                    _root.preview.currentColor.style.color = cssRGBaString;\r\n\r\n                    // Update the input field only if the user is currently not typing\r\n                    if (inst._recalc) {\r\n                        inst._updateOutput();\r\n                    }\r\n\r\n                    if (!inst.options.comparison) {\r\n\r\n                        // If the user changes the color, remove the cleared icon\r\n                        _root.button.classList.remove('clear');\r\n                    }\r\n                }\r\n            }),\r\n\r\n            hue: Moveable({\r\n                lock: sh,\r\n                element: inst._root.hue.picker,\r\n                wrapper: inst._root.hue.slider,\r\n\r\n                onchange(v) {\r\n                    if (!comp.hue || !comp.palette) return;\r\n\r\n                    // Calculate hue\r\n                    inst._color.h = v * 360;\r\n\r\n                    // Update color\r\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            opacity: Moveable({\r\n                lock: so,\r\n                element: inst._root.opacity.picker,\r\n                wrapper: inst._root.opacity.slider,\r\n\r\n                onchange(v) {\r\n                    if (!comp.opacity || !comp.palette) return;\r\n\r\n                    // Calculate opacity\r\n                    inst._color.a = Math.round(v * 1e2) / 100;\r\n\r\n                    // Update color\r\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\r\n                    inst.components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            selectable: Selectable({\r\n                elements: inst._root.interaction.options,\r\n                className: 'active',\r\n                onchange(e) {\r\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\r\n                    inst._updateOutput();\r\n                }\r\n            })\r\n        };\r\n\r\n        this.components = components;\r\n    }\r\n\r\n    _bindEvents() {\r\n        const {_root, options} = this;\r\n\r\n        const eventBindings = [\r\n\r\n            // Clear color\r\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\r\n\r\n            // Select last color on click\r\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\r\n\r\n            // Save color\r\n            _.on(_root.interaction.save, 'click', () => {\r\n                !this.applyColor() && !options.showAlways && this.hide();\r\n            }),\r\n\r\n            // Detect user input and disable auto-recalculation\r\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\r\n                this._recalc = false;\r\n\r\n                // Fire listener if initialization is finish and changed color was valid\r\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\r\n                    this._emit('change', this._color);\r\n                }\r\n\r\n                e.stopImmediatePropagation();\r\n            }),\r\n\r\n            // Cancel input detection on color change\r\n            _.on([\r\n                _root.palette.palette,\r\n                _root.palette.picker,\r\n                _root.hue.slider,\r\n                _root.hue.picker,\r\n                _root.opacity.slider,\r\n                _root.opacity.picker\r\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\r\n        ];\r\n\r\n        // Provide hiding / showing abilities only if showAlways is false\r\n        if (!options.showAlways) {\r\n            const ck = options.closeWithKey;\r\n\r\n            eventBindings.push(\r\n                // Save and hide / show picker\r\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\r\n\r\n                // Close with escape key\r\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\r\n\r\n                // Cancel selecting if the user taps behind the color picker\r\n                _.on(document, ['touchstart', 'mousedown'], e => {\r\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\r\n                        this.hide();\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Make input adjustable if enabled\r\n        if (options.adjustableNumbers) {\r\n            const ranges = {\r\n                rgba: [255, 255, 255, 1],\r\n                hsva: [360, 100, 100, 1],\r\n                hsla: [360, 100, 100, 1],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\r\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\r\n\r\n                if (range) {\r\n                    const max = range[index];\r\n\r\n                    // Calculate next reasonable number\r\n                    const nv = o + (max >= 100 ? step * 1000 : step);\r\n\r\n                    // Apply range of zero up to max, fix floating-point issues\r\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\r\n                } else {\r\n                    return o;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!options.inline) {\r\n            let timeout = null;\r\n            const that = this;\r\n\r\n            // Re-calc position on window resize, scroll and wheel\r\n            eventBindings.push(\r\n                _.on(window, ['scroll', 'resize'], () => {\r\n                    if (that.isOpen()) {\r\n                        if (timeout === null) {\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n\r\n                            // Update position on every frame\r\n                            requestAnimationFrame(function rs() {\r\n                                that._rePositioningPicker();\r\n                                (timeout !== null) && requestAnimationFrame(rs);\r\n                            });\r\n                        } else {\r\n                            clearTimeout(timeout);\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n                        }\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        // Save bindings\r\n        this._eventBindings = eventBindings;\r\n    }\r\n\r\n    _rePositioningPicker() {\r\n        const {options} = this;\r\n\r\n        // No repositioning needed if inline\r\n        if (!options.inline) {\r\n            this._nanopop.update(options.position);\r\n        }\r\n    }\r\n\r\n    _updateOutput() {\r\n\r\n        // Check if component is present\r\n        if (this._root.interaction.type()) {\r\n\r\n            // Construct function name and call if present\r\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\r\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\r\n        }\r\n\r\n        // Fire listener if initialization is finish\r\n        if (!this._initializingActive) {\r\n            this._emit('change', this._color);\r\n        }\r\n    }\r\n\r\n    _clearColor() {\r\n        const {_root, options} = this;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!options.useAsButton) {\r\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\r\n        }\r\n\r\n        _root.button.classList.add('clear');\r\n\r\n        if (!options.showAlways) {\r\n            this.hide();\r\n        }\r\n\r\n        if (!this._initializingActive) {\r\n\r\n            // Fire listener\r\n            this._emit('save', null);\r\n        }\r\n    }\r\n\r\n    _emit(event, ...args) {\r\n        this._eventListener[event].forEach(cb => cb(...args, this));\r\n    }\r\n\r\n    on(event, cb) {\r\n\r\n        // Validate\r\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\r\n            this._eventListener[event].push(cb);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    off(event, cb) {\r\n        const callBacks = this._eventListener[event];\r\n\r\n        if (callBacks) {\r\n            const index = callBacks.indexOf(cb);\r\n\r\n            if (~index) {\r\n                callBacks.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Appends a color to the swatch palette\r\n     * @param color\r\n     * @returns {boolean}\r\n     */\r\n    addSwatch(color) {\r\n        const {values} = Color.parseToHSV(color);\r\n\r\n        if (values) {\r\n            const {_swatchColors, _root} = this;\r\n            const hsvaColorObject = HSVaColor(...values);\r\n\r\n            // Create new swatch HTMLElement\r\n            const element = _.createElementFromString(\r\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\r\n            );\r\n\r\n            // Append element and save swatch data\r\n            _root.swatches.appendChild(element);\r\n            _swatchColors.push({element, hsvaColorObject});\r\n\r\n            // Bind event\r\n            this._eventBindings.push(\r\n                _.on(element, 'click', () => {\r\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\r\n                    this._emit('swatchselect', hsvaColorObject);\r\n                })\r\n            );\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes a swatch color by it's index\r\n     * @param index\r\n     * @returns {boolean}\r\n     */\r\n    removeSwatch(index) {\r\n\r\n        // Validate index\r\n        if (typeof index === 'number') {\r\n            const swatchColor = this._swatchColors[index];\r\n\r\n            // Check swatch data\r\n            if (swatchColor) {\r\n                const {element} = swatchColor;\r\n\r\n                // Remove HTML child and swatch data\r\n                this._root.swatches.removeChild(element);\r\n                this._swatchColors.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    applyColor(silent = false) {\r\n        const {preview, button} = this._root;\r\n\r\n        // Change preview and current color\r\n        const cssRGBaString = this._color.toRGBA().toString();\r\n        preview.lastColor.style.color = cssRGBaString;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!this.options.useAsButton) {\r\n            button.style.color = cssRGBaString;\r\n        }\r\n\r\n        // User changed the color so remove the clear clas\r\n        button.classList.remove('clear');\r\n\r\n        // Save last color\r\n        this._lastColor = this._color.clone();\r\n\r\n        // Fire listener\r\n        if (!this._initializingActive && !silent) {\r\n            this._emit('save', this._color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys\r\n     */\r\n    destroy() {\r\n        this._eventBindings.forEach(args => _.off(...args));\r\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys and removes\r\n     * the pickr element.\r\n     */\r\n    destroyAndRemove() {\r\n        this.destroy();\r\n\r\n        // Remove element\r\n        const root = this._root.root;\r\n        root.parentElement.removeChild(root);\r\n\r\n        // remove .pcr-app\r\n        const app = this._root.app;\r\n        app.parentElement.removeChild(app);\r\n\r\n        // There are references to various DOM elements stored in the pickr instance\r\n        // This cleans all of them to avoid detached DOMs\r\n        const pickr = this;\r\n        Object.keys(pickr).forEach(key => pickr[key] = null);\r\n    }\r\n\r\n    /**\r\n     * Hides the color-picker ui.\r\n     */\r\n    hide() {\r\n        this._root.app.classList.remove('visible');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Shows the color-picker ui.\r\n     */\r\n    show() {\r\n        if (this.options.disabled) return;\r\n        this._root.app.classList.add('visible');\r\n        this._rePositioningPicker();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {boolean} If the color picker is currently open\r\n     */\r\n    isOpen() {\r\n        return this._root.app.classList.contains('visible');\r\n    }\r\n\r\n    /**\r\n     * Set a specific color.\r\n     * @param h Hue\r\n     * @param s Saturation\r\n     * @param v Value\r\n     * @param a Alpha channel (0 - 1)\r\n     * @param silent If the button should not change the color\r\n     * @return boolean if the color has been accepted\r\n     */\r\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\r\n\r\n        // Deactivate color calculation\r\n        const recalc = this._recalc; // Save state\r\n        this._recalc = false;\r\n\r\n        // Validate input\r\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\r\n            return false;\r\n        }\r\n\r\n        // Override current color and re-active color calculation\r\n        this._color = HSVaColor(h, s, v, a);\r\n\r\n        // Update slider and palette\r\n        const {hue, opacity, palette} = this.components;\r\n        hue.update(0, (h / 360));\r\n        opacity.update(0, a);\r\n        palette.update(s / 100, 1 - (v / 100));\r\n\r\n        // Restore old state\r\n        this._recalc = recalc;\r\n\r\n        // Update output if recalculation is enabled\r\n        if (this._recalc) {\r\n            this._updateOutput();\r\n        }\r\n\r\n        // Check if call is silent\r\n        if (!silent) {\r\n            this.applyColor();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to parse a string which represents a color.\r\n     * Examples: #fff\r\n     *           rgb 10 10 200\r\n     *           hsva 10 20 5 0.5\r\n     * @param string\r\n     * @param silent\r\n     */\r\n    setColor(string, silent = false) {\r\n\r\n        // Check if null\r\n        if (string === null) {\r\n            this._clearColor();\r\n            return true;\r\n        }\r\n\r\n        const {values, type} = Color.parseToHSV(string);\r\n\r\n        // Check if color is ok\r\n        if (values) {\r\n\r\n            // Change selected color format\r\n            const utype = type.toUpperCase();\r\n            const {options} = this._root.interaction;\r\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\r\n\r\n            // Auto select only if not hidden\r\n            if (target && !target.hidden) {\r\n                for (const el of options) {\r\n                    el.classList[el === target ? 'add' : 'remove']('active');\r\n                }\r\n            }\r\n\r\n            return this.setHSVA(...values, silent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the color _representation.\r\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\r\n     * @param type\r\n     * @returns {boolean} if the selected type was valid.\r\n     */\r\n    setColorRepresentation(type) {\r\n\r\n        // Force uppercase to allow a case-sensitiv comparison\r\n        type = type.toUpperCase();\r\n\r\n        // Find button with given type and trigger click event\r\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\r\n    }\r\n\r\n    /**\r\n     * Returns the current color representaion. See setColorRepresentation\r\n     * @returns {*}\r\n     */\r\n    getColorRepresentation() {\r\n        return this._representation;\r\n    }\r\n\r\n    /**\r\n     * @returns HSVaColor Current HSVaColor object.\r\n     */\r\n    getColor() {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * @returns The root HTMLElement with all his components.\r\n     */\r\n    getRoot() {\r\n        return this._root;\r\n    }\r\n\r\n    /**\r\n     * Disable pickr\r\n     */\r\n    disable() {\r\n        this.hide();\r\n        this.options.disabled = true;\r\n        this._root.button.classList.add('disabled');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enable pickr\r\n     */\r\n    enable() {\r\n        this.options.disabled = false;\r\n        this._root.button.classList.remove('disabled');\r\n        return this;\r\n    }\r\n}\r\n\r\n// Expose pickr utils\r\nPickr.utils = _;\r\n\r\n// Create instance via method\r\nPickr.create = options => new Pickr(options);\r\n\r\n// Assign version and export\r\nPickr.version = '0.6.5';\r\nexport default Pickr;\r\n","/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, padding = 8}) {\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\n    const hBehaviour = {top: 'tb', right: 'rl', bottom: 'bt', left: 'lr'};\n\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\n        if (cached) return cached;\n        const [position, variant = 'middle'] = pos.split('-');\n        const isVertical = (position === 'top' || position === 'bottom');\n\n        return cache[pos] = {\n            position,\n            variant,\n            isVertical\n        };\n    })();\n\n    const getScrollOffset = (el, total = 0) => {\n        while (el = el.parentElement) total += el.scrollTop;\n        return total;\n    };\n\n    return {\n        update(pos) {\n            const {position, variant, isVertical} = getInfo(pos);\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n            const so = getScrollOffset(el);\n\n            const positions = isVertical ? {\n                t: rb.top - eb.height - padding,\n                b: rb.bottom + padding + so\n            } : {\n                r: rb.right + padding,\n                l: rb.left - eb.width - padding\n            };\n\n            const variants = isVertical ? {\n                s: rb.left + rb.width - eb.width,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\n                e: rb.left\n            } : {\n                s: rb.bottom - eb.height,\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\n                e: rb.bottom - rb.height\n            };\n\n\n            function apply(bevs, vars, styleprop) {\n                const vertical = styleprop === 'top';\n                const adder = vertical ? eb.height : eb.width;\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\n\n                for (const ch of bevs) {\n                    const v = vars[ch];\n                    if (v > 0 && (v + adder) < win) {\n                        el.style[styleprop] = `${v}px`;\n                        return true;\n                    }\n                }\n\n                return false;\n            }\n\n            const v1Ok = apply(vBehaviour[variant], variants, isVertical ? 'left' : 'top');\n            const v2Ok = apply(hBehaviour[position], positions, isVertical ? 'top' : 'left');\n            if (!v1Ok || !v2Ok) {\n                Object.assign(el.style, {\n                    top: `${padding}px`,\n                    left: 0,\n                    right: 0,\n                    margin: 'auto'\n                });\n            } else {\n                el.style.margin = 'inherit';\n            }\n        }\n    };\n}\n"],"sourceRoot":""}