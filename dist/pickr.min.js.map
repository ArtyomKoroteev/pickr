{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/lib/utils.js","webpack:///./src/js/lib/color.js","webpack:///./src/js/lib/hsvacolor.js","webpack:///./src/js/helper/moveable.js","webpack:///./src/js/helper/selectable.js","webpack:///./src/js/pickr.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","arguments","length","undefined","HTMLCollection","NodeList","Array","from","isArray","forEach","el","ev","_objectSpread","capture","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","children","subtree","child","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","isNaN","isFinite","mul","deltaY","inc","ctrlKey","newNum","Number","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","padStart","string","maxLength","fillString","repeat","min","Math","max","floor","round","hsvToRgb","h","v","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","_numarize4","_numarize4$","a","splitAt","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","rhsva","toString","concat","toFixed","toHSLA","Color","rhsla","toRGBA","rrgba","toCMYK","rgb","rcmyk","toHEX","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","trigger","update","wrapperRect","destroy","Selectable","className","onTap","classList","Pickr","constructor","this","_this$_root","_root","app","button","_window","innerWidth","innerHeight","scrollY","bb","ab","abs","bottom","pos","middle","right","wantedLeft","position","useAsButton","disabled","comparison","components","interaction","strings","swatches","default","defaultRepresentation","adjustableNumbers","showAlways","closeWithKey","_initializingActive","_recalc","_color","_lastColor","_swatchColors","_eventListener","swatchselect","change","save","init","_preBuild","_buildComponents","_bindEvents","_representation","setColorRepresentation","_finalBuild","_rePositioningPicker","color","addSwatch","requestAnimationFrame","cb","offsetParent","body","setColor","show","_emit","isOpen","querySelector","hidden","preview","hue","opacity","keys","input","clear","int","find","add","contains","appendChild","removeChild","replaceChild","disable","transition","lastColor","hide","inst","comp","palette","picker","offsetHeight","cssRGBaString","background","currentColor","_updateOutput","remove","slider","backgroundColor","selectable","eventBindings","_clearColor","setHSVA","applyColor","result","stopImmediatePropagation","ck","code","some","_eventBindings","event","_len","args","_key","callBacks","index","indexOf","splice","hsvaColorObject","removeSwatch","swatchColor","silent","_this$_root2","destroyAndRemove","recalc","_this$components","hueY","opacityY","pickerWrapper","pickerX","pickerY","_Color$parseToHSV2","utype","click","getColorRepresentation","getColor","getRoot","enable","utils","once","helper","apply","removeEventListener","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Add an eventlistener which will be fired only once.\n *\n * @param element Target element\n * @param event Event name\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const once = (element, event, fn, options) => on(element, event, function helper() {\n    fn.apply(this, arguments);\n    this.removeEventListener(event, helper);\n}, options);\n\n/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    elements.forEach(el =>\n        events.forEach(ev =>\n            el[method](ev, fn, {capture: false, ...options})\n        )\n    );\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a 'data-key' attribute will be saved in a object (which will be returned)\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, 'data-con');\n        const key = removeAttribute(element, 'data-key');\n\n        // Check and save element\n        if (key) {\n            base[key] = element;\n        }\n\n        // Check all children\n        const children = Array.from(element.children);\n        const subtree = con ? (base[con] = {}) : base;\n        for (let child of children) {\n\n            // Check if element should be saved as array\n            const arr = removeAttribute(child, 'data-arr');\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = [])).push(child);\n            } else {\n                resolve(child, subtree);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param negative\n */\nexport function adjustableInputNumbers(el, negative = true) {\n\n    // Check if a char represents a number\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\n\n    function handleScroll(e) {\n        const val = el.value;\n        const off = el.selectionStart;\n        let numStart = off;\n        let num = ''; // Will be the number as string\n\n        // Look back\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\n            num = val[i] + num;\n            numStart--; // Find start of number\n        }\n\n        // Look forward\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\n            num += val[i];\n        }\n\n        // Check if number is valid\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\n\n            const mul = e.deltaY < 0 ? 1 : -1;\n            const inc = e.ctrlKey ? mul * 5 : mul;\n            let newNum = Number(num) + inc;\n\n            if (!negative && newNum < 0) {\n                newNum = 0;\n            }\n\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\n            const curPos = numStart + String(newNum).length;\n\n            // Update value and set cursor\n            el.value = newStr;\n            el.focus();\n            el.setSelectionRange(curPos, curPos);\n        }\n\n        // Prevent default\n        e.preventDefault();\n\n        // Trigger input event\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n\n/**\n * Cross browser padStart implementation\n * @param string\n * @param maxLength\n * @param fillString\n * @returns {string}\n */\nexport function padStart(string, maxLength, fillString = ' ') {\n    maxLength = maxLength - string.length;\n\n    if (maxLength <= 0 || !fillString.length) {\n        return String(string);\n    } else {\n\n        if (maxLength > fillString.length) {\n            fillString += fillString.repeat(maxLength / fillString.length);\n        }\n\n        return fillString.slice(0, maxLength) + String(string);\n    }\n}\n","import {padStart} from '../lib/utils';\n\n// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    let i = floor(h);\n\n    let f = h - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    let mod = i % 6;\n    let r = [v, q, p, p, t, v][mod];\n    let g = [t, v, v, q, p, p][mod];\n    let b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        padStart(round(v).toString(16), 2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    let l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100, m /= 100, y /= 100, k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100, l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    let ns = (2 * s / (l + s)) * 100;\n    let v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSV(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                let [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break;\n\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\n            }\n            case 'rgba': {\n                let [, , r, g, b, a = 1] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...rgbToHsv(r, g, b), a], type};\n            }\n            case 'hex': {\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\n                let [, hex] = match;\n\n                // Fill up opacity if not declared\n                if (hex.length === 3) {\n                    hex += 'F';\n                } else if (hex.length === 6) {\n                    hex += 'FF';\n                }\n\n                let alpha;\n                if (hex.length === 4) {\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\n                } else if (hex.length === 8) {\n                    [hex, alpha] = splitAt(hex, 6);\n                }\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                alpha = parseInt(alpha, 16) / 255;\n                return {values: [...hexToHsv(hex), alpha], type};\n            }\n            case 'hsla': {\n                let [, , h, s, l, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...hslToHsv(h, s, l), a], type};\n            }\n            case 'hsva': {\n                let [, , h, s, v, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [h, s, v, a], type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {padStart} from '../lib/utils';\r\nimport * as Color from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n\r\n    const ceil = Math.ceil;\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v];\r\n            const rhsva = hsva.map(ceil);\r\n\r\n            hsva.push(that.a);\r\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = Color.hsvToHsl(that.h, that.s, that.v);\r\n            const rhsla = hsla.map(ceil);\r\n\r\n            hsla.push(that.a);\r\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = Color.hsvToRgb(that.h, that.s, that.v);\r\n            const rrgba = rgba.map(ceil);\r\n\r\n            rgba.push(that.a);\r\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = Color.hsvToCmyk(that.h, that.s, that.v);\r\n            const rcmyk = cmyk.map(ceil);\r\n\r\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\r\n            return cmyk;\r\n        },\r\n\r\n        toHEX() {\r\n            const hex = Color.hsvToHex(...[that.h, that.s, that.v]);\r\n\r\n            hex.toString = () => {\r\n\r\n                // Check if alpha channel make sense, convert it to 255 number space, convert\r\n                // to hex and pad it with zeros if needet.\r\n                const alpha = that.a >= 1 ? '' : padStart(Number((that.a * 255).toFixed(0))\r\n                    .toString(16)\r\n                    .toUpperCase(), 2, '0');\r\n\r\n                return `#${hex.join('').toUpperCase() + alpha}`;\r\n            };\r\n\r\n            return hex;\r\n        },\r\n\r\n        clone() {\r\n            return HSVaColor(that.h, that.s, that.v, that.a);\r\n        }\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lockX: false,\r\n            lockY: false,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {element} = options;\r\n            const b = that.options.wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (!options.lockX) {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (!options.lockY) {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            options.onchange(x, y);\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: wrapperRect.left + x,\r\n                clientY: wrapperRect.top + y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","// Import styles\nimport '../scss/pickr.scss';\n\n// Import utils\nimport * as _     from './lib/utils';\nimport * as Color from './lib/color';\n\n// Import classes\nimport {HSVaColor} from './lib/hsvacolor';\nimport Moveable    from './helper/moveable';\nimport Selectable  from './helper/selectable';\n\nclass Pickr {\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = Object.assign({\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {interaction: {}},\n            strings: {},\n\n            swatches: null,\n\n            default: 'fff',\n            defaultRepresentation: 'HEX',\n            position: 'middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        // Check interaction section\n        if (!this.options.components.interaction) {\n            this.options.components.interaction = {};\n        }\n\n        // Will be used to prevent specific actions during initilization\n        this._initializingActive = true;\n\n        // Replace element with color picker\n        this._recalc = true;\n\n        // Current and last color for comparison\n        this._color = HSVaColor();\n        this._lastColor = HSVaColor();\n        this._swatchColors = [];\n\n        // Evenlistener name: [callbacks]\n        this._eventListener = {\n            'swatchselect': [],\n            'change': [],\n            'save': [],\n            'init': []\n        };\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Initialize color _epresentation\n        this._representation = this.options.defaultRepresentation;\n        this.setColorRepresentation(this._representation);\n\n        // Finalize build\n        this._finalBuild();\n        this._rePositioningPicker();\n\n        // Append pre-defined swatch colors\n        const {swatches} = this.options;\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb.bind(this));\n            }\n\n            // Apply default color\n            this.setColor(this.options.default);\n\n            // Show pickr if locked\n            opt.showAlways && this.show();\n\n            // Initialization is done - pickr is usable, fire init event\n            this._initializingActive = false;\n            this._emit('init');\n\n            // Re-calc position on window resize\n            _.on(window, ['scroll', 'wheel', 'resize'], () => {\n                if (this.isOpen()) {\n                    this._rePositioningPicker();\n                }\n            });\n        }).bind(this));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n            opt.el = document.querySelector(opt.el);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = create(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n        document.body.appendChild(root.app);\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentElement.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent), \n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    // If the user changes the color, remove the cleared icon\n                    _root.button.classList.remove('clear');\n                }\n            }),\n\n            hue: Moveable({\n                lockX: true,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(x, y) {\n                    if (!comp.hue) return;\n\n                    // Calculate hue\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lockX: true,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(x, y) {\n                    if (!comp.opacity) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true),\n\n            // Repositioning on resize\n            _.on(window, 'resize', () => this._rePositioningPicker)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            _.adjustableInputNumbers(_root.interaction.result, false);\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker = (() => {\n        const padding = 8;\n        let left, top;\n\n        return () => {\n            const {app, button} = this._root;\n\n            const {innerWidth, innerHeight, scrollY} = window;\n            const bb = button.getBoundingClientRect();\n            const ab = app.getBoundingClientRect();\n\n            // Check if picker is cuttet of from the top & bottom\n            if (Math.abs(scrollY - bb.bottom) + ab.height + padding < innerHeight) {\n                top = bb.top - ab.height - padding;\n            } else {\n                top = bb.bottom + padding;\n            }\n\n            // Positioning picker on the x-axis\n            const pos = {\n                left: bb.left + bb.width - ab.width,\n                middle: (-ab.width / 2) + (bb.left + bb.width / 2),\n                right: bb.left\n            };\n\n            const wantedLeft = pos[this.options.position];\n            if (left + wantedLeft > innerWidth) {\n                left = pos['left'];\n            } else if (wantedLeft < 0) {\n                left = pos['right'];\n            } else {\n                left = wantedLeft;\n            }\n\n            Object.assign(app.style, {\n                left: `${left}px`,\n                top: `${top}px`\n            });\n        };\n    })();\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Short names\n        const {hue, opacity, palette} = this.components;\n\n        // Calculate y position of hue slider\n        const hueWrapper = hue.options.wrapper;\n        const hueY = hueWrapper.offsetHeight * (h / 360);\n        hue.update(0, hueY);\n\n        // Calculate y position of opacity slider\n        const opacityWrapper = opacity.options.wrapper;\n        const opacityY = opacityWrapper.offsetHeight * a;\n        opacity.update(0, opacityY);\n\n        // Calculate y and x position of color palette\n        const pickerWrapper = palette.options.wrapper;\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\n        palette.update(pickerX, pickerY);\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n        this._recalc = recalc; // Restore old state\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (!target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGBA, HSVA, HSLA and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type') === type && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\nfunction create(options) {\n    const {components, strings, useAsButton} = options;\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n\n    const root = _.createFromTemplate(`\n        <div data-key=\"root\" class=\"pickr\">\n        \n            ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\n\n            <div data-key=\"app\" class=\"pcr-app\">\n                <div class=\"pcr-selection\">\n                    <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(components.preview)}>\n                        <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\n                        <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\n                    </div>\n\n                    <div data-con=\"palette\" class=\"pcr-color-palette\">\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"palette\" class=\"pcr-palette\"></div>\n                    </div>\n\n                    <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(components.hue)}>\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\n                    </div>\n\n                    <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(components.opacity)}>\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\n                    </div>\n                </div>\n\n                <div class=\"swatches\" data-key=\"swatches\"></div> \n\n                <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(components.interaction).length)}>\n                    <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(components.interaction.input)}>\n\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEX\" value=\"HEX\" type=\"button\" ${hidden(components.interaction.hex)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBa\" type=\"button\" ${hidden(components.interaction.rgba)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLa\" type=\"button\" ${hidden(components.interaction.hsla)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVa\" type=\"button\" ${hidden(components.interaction.hsva)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(components.interaction.cmyk)}>\n\n                    <input data-key=\"save\" class=\"pcr-save\" value=\"${strings.save || 'Save'}\" type=\"button\" ${hidden(components.interaction.save)}>\n                    <input data-key=\"clear\" class=\"pcr-clear\" value=\"${strings.clear || 'Clear'}\" type=\"button\" ${hidden(components.interaction.clear)}>\n                </div>\n            </div>\n        </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n\n// Static methods\nPickr.utils = {\n    once: _.once,\n    on: _.on,\n    off: _.off,\n    eventPath: _.eventPath,\n    createElementFromString: _.createElementFromString,\n    adjustableInputNumbers: _.adjustableInputNumbers,\n    removeAttribute: _.removeAttribute,\n    createFromTemplate: _.createFromTemplate\n};\n\n// Create instance via method\nPickr.create = (options) => new Pickr(options);\n\n// Export\nPickr.version = '0.4.7';\nexport default Pickr;\n"],"sourceRoot":""}