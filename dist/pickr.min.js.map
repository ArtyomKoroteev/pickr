{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/lib/utils.js","webpack:///./src/js/lib/color.js","webpack:///./src/js/lib/hsvacolor.js","webpack:///./src/js/helper/moveable.js","webpack:///./src/js/helper/selectable.js","webpack:///./src/js/pickr.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","arguments","length","undefined","HTMLCollection","NodeList","Array","from","isArray","forEach","el","ev","_objectSpread","capture","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","children","subtree","child","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","isNaN","isFinite","mul","deltaY","inc","ctrlKey","newNum","Number","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","padStart","string","maxLength","fillString","repeat","min","Math","max","floor","round","hsvToRgb","h","v","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","_numarize4","_numarize4$","a","splitAt","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","rhsva","toString","concat","toFixed","toHSLA","Color","rhsla","toRGBA","rrgba","toCMYK","rgb","rcmyk","toHEX","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","trigger","update","wrapperRect","destroy","passive","Selectable","className","onTap","classList","Pickr","constructor","this","useAsButton","disabled","comparison","components","interaction","strings","swatches","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","_initializingActive","_recalc","_color","_lastColor","_swatchColors","_eventListener","swatchselect","change","save","init","_preBuild","_buildComponents","_bindEvents","_representation","setColorRepresentation","_finalBuild","_rePositioningPicker","color","addSwatch","button","_root","requestAnimationFrame","cb","offsetParent","body","setColor","show","_emit","querySelector","hidden","preview","hue","opacity","keys","input","clear","int","find","add","contains","appendChild","removeChild","app","replaceChild","disable","transition","lastColor","hide","isOpen","inst","comp","palette","picker","offsetHeight","cssRGBaString","background","currentColor","_updateOutput","remove","slider","backgroundColor","selectable","eventBindings","_clearColor","setHSVA","applyColor","result","stopImmediatePropagation","ck","code","some","_eventBindings","as","_window","innerWidth","innerHeight","scrollY","bb","ab","abs","bottom","pos","middle","right","wantedLeft","currentLeft","getComputedStyle","event","_len","args","_key","callBacks","index","indexOf","splice","hsvaColorObject","removeSwatch","swatchColor","silent","_this$_root","destroyAndRemove","recalc","_this$components","hueY","opacityY","pickerWrapper","pickerX","pickerY","_Color$parseToHSV2","utype","click","getColorRepresentation","getColor","getRoot","enable","utils","once","helper","apply","removeEventListener","version"],"mappings":";CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,MAAAD,IAEAD,EAAA,MAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,wLCzEO,MAaMC,EAAKC,EAAcT,KAAK,KAAM,oBAU9BU,EAAMD,EAAcT,KAAK,KAAM,uBAE5C,SAASS,EAAcE,EAAQC,EAAUC,EAAQC,GAAkB,IAAdC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAmB3D,OAhBIJ,aAAoBO,gBAAkBP,aAAoBQ,SAC1DR,EAAWS,MAAMC,KAAKV,GACdS,MAAME,QAAQX,KACtBA,EAAW,CAACA,IAGXS,MAAME,QAAQV,KACfA,EAAS,CAACA,IAGdD,EAASY,QAAQC,GACbZ,EAAOW,QAAQE,GACXD,EAAGd,GAAQe,EAAIZ,oUAAfa,CAAA,CAAoBC,SAAS,GAAUb,MAIxCM,MAAMjB,UAAUyB,MAAMlD,KAAKqC,UAAW,GAQ1C,SAASc,EAAwBC,GACpC,MAAMC,EAAMC,SAASC,cAAc,OAEnC,OADAF,EAAIG,UAAYJ,EAAKK,OACdJ,EAAIK,kBASR,SAASC,EAAgBb,EAAI1C,GAChC,MAAMU,EAAQgC,EAAGc,aAAaxD,GAE9B,OADA0C,EAAGa,gBAAgBvD,GACZU,EAiBJ,SAAS+C,EAAmBC,GAiC/B,OA9BA,SAASC,EAAQC,GAAoB,IAAXC,EAAW5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAG7B,MAAM6B,EAAMP,EAAgBK,EAAS,YAC/B5C,EAAMuC,EAAgBK,EAAS,YAGjC5C,IACA6C,EAAK7C,GAAO4C,GAIhB,MAAMG,EAAWzB,MAAMC,KAAKqB,EAAQG,UAC9BC,EAAUF,EAAOD,EAAKC,GAAO,GAAMD,EACzC,IAAK,IAAII,KAASF,EAAU,CAGxB,MAAMG,EAAMX,EAAgBU,EAAO,YAC/BC,GAGCF,EAAQE,KAASF,EAAQE,GAAO,KAAKC,KAAKF,GAE3CN,EAAQM,EAAOD,GAIvB,OAAOH,EAGJF,CAAQZ,EAAwBW,IAQpC,SAASU,EAAUC,GACtB,IAAIC,EAAOD,EAAIC,MAASD,EAAIE,cAAgBF,EAAIE,eAChD,GAAID,EAAM,OAAOA,EAEjB,IAAI5B,EAAK2B,EAAIG,OAAOC,cAEpB,IADAH,EAAO,CAACD,EAAIG,OAAQ9B,GACbA,EAAKA,EAAG+B,eAAeH,EAAKH,KAAKzB,GAGxC,OADA4B,EAAKH,KAAKjB,SAAU7D,QACbiF,EAQJ,SAASI,EAAuBhC,GAAqB,IAAjBiC,IAAiB1C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAGxD,MAAM2C,EAAY9E,GAAMA,GAAK,KAAOA,GAAK,KAAc,MAANA,GAAmB,MAANA,EAE9D,SAAS+E,EAAaC,GAClB,MAAMC,EAAMrC,EAAGhC,MACTiB,EAAMe,EAAGsC,eACf,IAAIC,EAAWtD,EACXuD,EAAM,GAGV,IAAK,IAAIzF,EAAIkC,EAAM,EAAGlC,EAAI,GAAKmF,EAAUG,EAAItF,IAAKA,IAC9CyF,EAAMH,EAAItF,GAAKyF,EACfD,IAIJ,IAAK,IAAIxF,EAAIkC,EAAKT,EAAI6D,EAAI7C,OAAQzC,EAAIyB,GAAK0D,EAAUG,EAAItF,IAAKA,IAC1DyF,GAAOH,EAAItF,GAIf,GAAIyF,EAAIhD,OAAS,IAAMiD,MAAMD,IAAQE,SAASF,GAAM,CAEhD,MAAMG,EAAMP,EAAEQ,OAAS,EAAI,GAAK,EAC1BC,EAAMT,EAAEU,QAAgB,EAANH,EAAUA,EAClC,IAAII,EAASC,OAAOR,GAAOK,GAEtBZ,GAAYc,EAAS,IACtBA,EAAS,GAGb,MAAME,EAASZ,EAAIa,OAAO,EAAGX,GAAYQ,EAASV,EAAIc,UAAUZ,EAAWC,EAAIhD,OAAQ6C,EAAI7C,QACrF4D,EAASb,EAAWc,OAAON,GAAQvD,OAGzCQ,EAAGhC,MAAQiF,EACXjD,EAAGsD,QACHtD,EAAGuD,kBAAkBH,EAAQA,GAIjChB,EAAEoB,iBAGFxD,EAAGyD,cAAc,IAAIC,MAAM,UAI/B3E,EAAGiB,EAAI,QAAS,IAAMjB,EAAGpC,OAAQ,QAASwF,IAC1CpD,EAAGiB,EAAI,OAAQ,IAAMf,EAAItC,OAAQ,QAASwF,IAUvC,SAASwB,EAASC,EAAQC,GAA6B,IAAlBC,EAAkBvE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAL,IAGrD,OAFAsE,GAAwBD,EAAOpE,SAEd,IAAMsE,EAAWtE,OACvB6D,OAAOO,IAGVC,EAAYC,EAAWtE,SACvBsE,GAAcA,EAAWC,OAAOF,EAAYC,EAAWtE,SAGpDsE,EAAW1D,MAAM,EAAGyD,GAAaR,OAAOO,4ZC5NhDI,EAA0BC,KAA1BD,IAAKE,EAAqBD,KAArBC,IAAKC,EAAgBF,KAAhBE,MAAOC,EAASH,KAATG,MAoBjB,SAASC,EAASC,EAAGxF,EAAGyF,GAE3BzF,GAAK,IACLyF,GAAK,IAEL,IAAIxH,EAAIoH,EAJRG,EAAKA,EAAI,IAAO,GAMZE,EAAIF,EAAIvH,EACR8B,EAAI0F,GAAK,EAAIzF,GACb2F,EAAIF,GAAK,EAAIC,EAAI1F,GACjBb,EAAIsG,GAAK,GAAK,EAAIC,GAAK1F,GAEvB4F,EAAM3H,EAAI,EAKd,MAAO,CACC,IALA,CAACwH,EAAGE,EAAG5F,EAAGA,EAAGZ,EAAGsG,GAAGG,GAMnB,IALA,CAACzG,EAAGsG,EAAGA,EAAGE,EAAG5F,EAAGA,GAAG6F,GAMnB,IALA,CAAC7F,EAAGA,EAAGZ,EAAGsG,EAAGA,EAAGE,GAAGC,IAuF/B,SAASC,EAAS9G,EAAG+G,EAAGC,GAGpB,IAAIP,EAAGxF,EAAGyF,EACV,MAAMO,EAASd,EAHfnG,GAAK,IAAK+G,GAAK,IAAKC,GAAK,KAInBE,EAASb,EAAIrG,EAAG+G,EAAGC,GACnBG,EAAQD,EAASD,EAGvB,GAAc,IAAVE,EACAV,EAAIxF,EAAI,MACL,CACHA,EAAIkG,EAAQD,EACZ,IAAIE,IAAQF,EAASlH,GAAK,EAAMmH,EAAQ,GAAMA,EAC1CE,IAAQH,EAASH,GAAK,EAAMI,EAAQ,GAAMA,EAC1CG,IAAQJ,EAASF,GAAK,EAAMG,EAAQ,GAAMA,EAE1CnH,IAAMkH,EACNT,EAAIa,EAAKD,EACFN,IAAMG,EACbT,EAAK,EAAI,EAAKW,EAAKE,EACZN,IAAME,IACbT,EAAK,EAAI,EAAKY,EAAKD,GAGnBX,EAAI,EACJA,GAAK,EACEA,EAAI,IACXA,GAAK,GAIb,MAAO,CACC,IAAJA,EACI,IAAJxF,EACI,KA3BRyF,EAAIQ,IAuCR,SAASK,EAAUhI,EAAGD,EAAGkI,EAAGC,GAOxB,OANUnI,GAAK,IAAKkI,GAAK,IAMlB,IAAIV,EAJ+B,KAA/B,EAAIX,EAAI,GAFnB5G,GAAK,MAEsB,GAFGkI,GAAK,MAECA,IACM,KAA/B,EAAItB,EAAI,EAAG7G,GAAK,EAAImI,GAAKA,IACM,KAA/B,EAAItB,EAAI,EAAGqB,GAAK,EAAIC,GAAKA,MAYxC,SAASC,EAASjB,EAAGxF,EAAG9B,GAMpB,OALA8B,GAAK,IAKE,CAACwF,EAFE,GAFVxF,IADU9B,GAAK,KACN,GAAMA,EAAI,EAAIA,IAEJA,EAAI8B,GAAM,IACX,KAAT9B,EAAI8B,IASjB,SAAS0G,EAASC,GACd,OAAOd,KAAYc,EAAIC,MAAM,SAASC,IAAIpB,GAAKqB,SAASrB,EAAG,MASxD,SAASsB,EAAW7E,GAGvBA,EAAMA,EAAI0E,MAAM,eA9MpB,SAA0BpI,GACtB,MAAMwI,EAAMtF,SAASC,cAAc,UAAUsF,WAAW,MAExD,OADAD,EAAIE,UAAY1I,EACTwI,EAAIE,UA2MsBC,CAAiBjF,GAAOA,EAGzD,MAAMkF,EAAQ,CACVC,KAAM,iDACNC,KAAM,6DACNC,KAAM,6DACNC,KAAM,6DACNb,IAAK,4DASHc,EAAWC,GAASA,EAAMb,IAAIpB,GAAK,oBAAoBkC,KAAKlC,GAAKvB,OAAOuB,QAAK9E,GAEnF,IAAIiG,EACJ,IAAK,MAAMgB,KAAQR,EAGf,GAAMR,EAAQQ,EAAMQ,GAAMC,KAAK3F,GAI/B,OAAQ0F,GACJ,IAAK,OAAQ,KAAAE,EAAAC,EACYN,EAASb,GADrB,GACFtI,EADEwJ,EAAA,GACCzJ,EADDyJ,EAAA,GACIvB,EADJuB,EAAA,GACOtB,EADPsB,EAAA,GAGT,GAAIxJ,EAAI,KAAOD,EAAI,KAAOkI,EAAI,KAAOC,EAAI,IACrC,MAEJ,MAAO,CAACwB,OAAQ,IAAI1B,EAAUhI,EAAGD,EAAGkI,EAAGC,GAAI,GAAIoB,QAEnD,IAAK,OAAQ,KAAAK,EAAAF,EACkBN,EAASb,GAD3B,GACA7H,EADAkJ,EAAA,GACGnC,EADHmC,EAAA,GACMlC,EADNkC,EAAA,GAAAC,EAAAD,EAAA,GACSE,OADT,IAAAD,EACa,EADbA,EAGT,GAAInJ,EAAI,KAAO+G,EAAI,KAAOC,EAAI,KAAOoC,EAAI,GAAKA,EAAI,EAC9C,MAEJ,MAAO,CAACH,OAAQ,IAAInC,EAAS9G,EAAG+G,EAAGC,GAAIoC,GAAIP,QAE/C,IAAK,MAAO,CACR,MAAMQ,EAAU,CAACpI,EAAG/B,IAAM,CAAC+B,EAAEqE,UAAU,EAAGpG,GAAI+B,EAAEqE,UAAUpG,EAAG+B,EAAEU,SADvD,IAWJ2H,EATG1B,EAFCoB,EAEMnB,EAFN,MAYR,GAPmB,IAAfD,EAAIjG,OACJiG,GAAO,IACe,IAAfA,EAAIjG,SACXiG,GAAO,MAIQ,IAAfA,EAAIjG,OAAc,KAAA4H,EAAAP,EACHK,EAAQzB,EAAK,GAAGE,IAAIpB,GAAKA,EAAIA,GAD1B,GACjBkB,EADiB2B,EAAA,GACZD,EADYC,EAAA,QAEf,GAAmB,IAAf3B,EAAIjG,OAAc,KAAA6H,EAAAR,EACVK,EAAQzB,EAAK,GADH,GACxBA,EADwB4B,EAAA,GACnBF,EADmBE,EAAA,GAM7B,OADAF,EAAQvB,SAASuB,EAAO,IAAM,IACvB,CAACL,OAAQ,IAAItB,EAASC,GAAM0B,GAAQT,QAE/C,IAAK,OAAQ,KAAAY,EAAAT,EACkBN,EAASb,GAD3B,GACApB,EADAgD,EAAA,GACGxI,EADHwI,EAAA,GACMtK,EADNsK,EAAA,GAAAC,EAAAD,EAAA,GACSL,OADT,IAAAM,EACa,EADbA,EAGT,GAAIjD,EAAI,KAAOxF,EAAI,KAAO9B,EAAI,KAAOiK,EAAI,GAAKA,EAAI,EAC9C,MAEJ,MAAO,CAACH,OAAQ,IAAIvB,EAASjB,EAAGxF,EAAG9B,GAAIiK,GAAIP,QAE/C,IAAK,OAAQ,KAAAc,EAAAX,EACkBN,EAASb,GAD3B,GACApB,EADAkD,EAAA,GACG1I,EADH0I,EAAA,GACMjD,EADNiD,EAAA,GAAAC,EAAAD,EAAA,GACSP,OADT,IAAAQ,EACa,EADbA,EAGT,GAAInD,EAAI,KAAOxF,EAAI,KAAOyF,EAAI,KAAO0C,EAAI,GAAKA,EAAI,EAC9C,MAEJ,MAAO,CAACH,OAAQ,CAACxC,EAAGxF,EAAGyF,EAAG0C,GAAIP,SAK1C,MAAO,CAACI,OAAQ,KAAMJ,KAAM,MCtSzB,SAASgB,IAAsC,IAA5BpD,EAA4B/E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB,EAAGT,EAAqBS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,EAAGgF,EAAchF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,EAAG0H,EAAO1H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAE/C,MAAMoI,EAAO1D,KAAK0D,KACZC,EAAO,CACTtD,IAAGxF,IAAGyF,IAAG0C,IAETY,SACI,MAAMvB,EAAO,CAACsB,EAAKtD,EAAGsD,EAAK9I,EAAG8I,EAAKrD,GAC7BuD,EAAQxB,EAAKX,IAAIgC,GAIvB,OAFArB,EAAK7E,KAAKmG,EAAKX,GACfX,EAAKyB,SAAW,aAAAC,OAAcF,EAAM,GAApB,MAAAE,OAA2BF,EAAM,GAAjC,OAAAE,OAAyCF,EAAM,GAA/C,OAAAE,OAAuDJ,EAAKX,EAAEgB,QAAQ,GAAtE,MACT3B,GAGX4B,SACI,MAAM7B,EDyEX,SAAkB/B,EAAGxF,EAAGyF,GAG3B,IAAIvH,GAAK,GAFT8B,GAAK,OAAKyF,GAAK,KAEO,EAYtB,OAVU,IAANvH,IAEI8B,EADM,IAAN9B,EACI,EACGA,EAAI,GACP8B,EAAIyF,GAAS,EAAJvH,GAET8B,EAAIyF,GAAK,EAAQ,EAAJvH,IAIlB,CACHsH,EACI,IAAJxF,EACI,IAAJ9B,GC3FiBmL,CAAeP,EAAKtD,EAAGsD,EAAK9I,EAAG8I,EAAKrD,GAC3C6D,EAAQ/B,EAAKV,IAAIgC,GAIvB,OAFAtB,EAAK5E,KAAKmG,EAAKX,GACfZ,EAAK0B,SAAW,aAAAC,OAAcI,EAAM,GAApB,MAAAJ,OAA2BI,EAAM,GAAjC,OAAAJ,OAAyCI,EAAM,GAA/C,OAAAJ,OAAuDJ,EAAKX,EAAEgB,QAAQ,GAAtE,MACT5B,GAGXgC,SACI,MAAMjC,EAAO+B,EAAeP,EAAKtD,EAAGsD,EAAK9I,EAAG8I,EAAKrD,GAC3C+D,EAAQlC,EAAKT,IAAIgC,GAIvB,OAFAvB,EAAK3E,KAAKmG,EAAKX,GACfb,EAAK2B,SAAW,aAAAC,OAAcM,EAAM,GAApB,MAAAN,OAA2BM,EAAM,GAAjC,MAAAN,OAAwCM,EAAM,GAA9C,MAAAN,OAAqDJ,EAAKX,EAAEgB,QAAQ,GAApE,MACT7B,GAGXmC,SACI,MAAMpC,ED0BX,SAAmB7B,EAAGxF,EAAGyF,GAC5B,MAAMiE,EAAMnE,EAASC,EAAGxF,EAAGyF,GACrB1G,EAAI2K,EAAI,GAAK,IACb5D,EAAI4D,EAAI,GAAK,IACb3D,EAAI2D,EAAI,GAAK,IAEnB,IAAIlD,EAAGlI,EAAGD,EAAGkI,EAQb,MAAO,CACC,KALRjI,EAAU,KAFVkI,EAAItB,EAAI,EAAInG,EAAG,EAAI+G,EAAG,EAAIC,IAEZ,GAAK,EAAIhH,EAAIyH,IAAM,EAAIA,IAM7B,KALRnI,EAAU,IAANmI,EAAU,GAAK,EAAIV,EAAIU,IAAM,EAAIA,IAM7B,KALRD,EAAU,IAANC,EAAU,GAAK,EAAIT,EAAIS,IAAM,EAAIA,IAM7B,IAAJA,GC5CiB6C,CAAgBP,EAAKtD,EAAGsD,EAAK9I,EAAG8I,EAAKrD,GAC5CkE,EAAQtC,EAAKR,IAAIgC,GAGvB,OADAxB,EAAK4B,SAAW,aAAAC,OAAcS,EAAM,GAApB,OAAAT,OAA4BS,EAAM,GAAlC,OAAAT,OAA0CS,EAAM,GAAhD,OAAAT,OAAwDS,EAAM,GAA9D,OACTtC,GAGXuC,QACI,MAAMjD,GDKOnB,ECLkBsD,EAAKtD,EDKpBxF,ECLuB8I,EAAK9I,EDKzByF,ECL4BqD,EAAKrD,EDMrDF,EAASC,EAAGxF,EAAGyF,GAAGoB,IAAIpB,GACzBZ,EAASS,EAAMG,GAAGwD,SAAS,IAAK,EAAG,OAFpC,IAAkBzD,EAAGxF,EAAGyF,ECQnB,OAXAkB,EAAIsC,SAAW,MAIX,MAAMZ,EAAQS,EAAKX,GAAK,EAAI,GAAKtD,EAASX,QAAiB,IAAT4E,EAAKX,GAASgB,QAAQ,IACnEF,SAAS,IACTY,cAAe,EAAG,KAEvB,UAAAX,OAAWvC,EAAImD,KAAK,IAAID,cAAgBxB,KAGrC1B,GAGXoD,MAAK,IACMnB,EAAUE,EAAKtD,EAAGsD,EAAK9I,EAAG8I,EAAKrD,EAAGqD,EAAKX,IAItD,OAAOW,ECpEI,SAASkB,EAASC,GAE7B,MAAMnB,EAAO,CAGTtI,QAAS7B,OAAOuL,OAAO,CACnBC,OAAO,EACPC,OAAO,EACPC,SAAU,IAAM,GACjBJ,GAEHK,UAAUzH,GACN0H,EAAK7I,SAAU,CAAC,UAAW,WAAY,eAAgBoH,EAAK0B,UAC5DD,EAAK7I,SAAU,CAAC,YAAa,aAAcoH,EAAK2B,UAGhD5H,EAAI6B,iBAGJoE,EAAK2B,SAAS5H,IAGlB4H,SAAS5H,GAAK,MACHrC,EAAkBsI,EAAlBtI,QAASkK,EAAS5B,EAAT4B,MACTtI,EAAW5B,EAAX4B,QACD2D,EAAI+C,EAAKtI,QAAQmK,QAAQC,wBAE/B,IAAIC,EAAI,EAAGtE,EAAI,EACf,GAAI1D,EAAK,CACL,MAAMiI,EAAQjI,GAAOA,EAAIkI,SAAWlI,EAAIkI,QAAQ,GAChDF,EAAIhI,GAAOiI,GAASjI,GAAKmI,QAAU,EACnCzE,EAAI1D,GAAOiI,GAASjI,GAAKoI,QAAU,EAG/BJ,EAAI9E,EAAEmF,KAAML,EAAI9E,EAAEmF,KACbL,EAAI9E,EAAEmF,KAAOnF,EAAEoF,QAAON,EAAI9E,EAAEmF,KAAOnF,EAAEoF,OAC1C5E,EAAIR,EAAEqF,IAAK7E,EAAIR,EAAEqF,IACZ7E,EAAIR,EAAEqF,IAAMrF,EAAEsF,SAAQ9E,EAAIR,EAAEqF,IAAMrF,EAAEsF,QAG7CR,GAAK9E,EAAEmF,KACP3E,GAAKR,EAAEqF,SACAV,IACPG,EAAIH,EAAMG,EAAI9E,EAAEoF,MAChB5E,EAAImE,EAAMnE,EAAIR,EAAEsF,QAGf7K,EAAQ2J,QACT/H,EAAQkJ,MAAMJ,KAAd,QAAAhC,OAA6B2B,EAAI9E,EAAEoF,MAAQ,IAA3C,QAAAjC,OAAqD9G,EAAQmJ,YAAc,EAA3E,QAGC/K,EAAQ4J,QACThI,EAAQkJ,MAAMF,IAAd,QAAAlC,OAA4B3C,EAAIR,EAAEsF,OAAS,IAA3C,QAAAnC,OAAqD9G,EAAQmJ,YAAc,EAA3E,QAGJzC,EAAK4B,MAAQ,CAACG,EAAGA,EAAI9E,EAAEoF,MAAO5E,EAAGA,EAAIR,EAAEsF,QACvC7K,EAAQ6J,SAASQ,EAAGtE,IAGxBiE,WACID,EAAM7I,SAAU,CAAC,UAAW,WAAY,eAAgBoH,EAAK0B,UAC7DD,EAAM7I,SAAU,CAAC,YAAa,aAAcoH,EAAK2B,WAGrDe,UACI1C,EAAK2B,YAGTgB,SAAqB,IAAdZ,EAAcpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,EAAG8F,EAAO9F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACd,MAAMiL,EAAc5C,EAAKtI,QAAQmK,QAAQC,wBACzC9B,EAAK2B,SAAS,CACVO,QAASU,EAAYR,KAAOL,EAC5BI,QAASS,EAAYN,IAAM7E,KAInCoF,UAAU,MACCnL,EAAsBsI,EAAtBtI,QAAS8J,EAAaxB,EAAbwB,UAChBC,EAAM,CAAC/J,EAAQmK,QAASnK,EAAQ4B,SAAU,YAAakI,GACvDC,EAAM,CAAC/J,EAAQmK,QAASnK,EAAQ4B,SAAU,aAAckI,EAAW,CAC/DsB,SAAS,MAMdpL,EAAsBsI,EAAtBtI,QAAS8J,EAAaxB,EAAbwB,UAMhB,OALAC,EAAK,CAAC/J,EAAQmK,QAASnK,EAAQ4B,SAAU,YAAakI,GACtDC,EAAK,CAAC/J,EAAQmK,QAASnK,EAAQ4B,SAAU,aAAckI,EAAW,CAC9DsB,SAAS,IAGN9C,EC5FI,SAAS+C,IAAqB,IAAV5B,EAAUxJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACrCwJ,EAAMtL,OAAOuL,OAAO,CAChBG,SAAU,IAAM,EAChByB,UAAW,GACXzL,SAAU,IACX4J,GAEH,MAAM8B,EAAQxB,EAAKN,EAAI5J,SAAU,QAASwC,IACtCoH,EAAI5J,SAASY,QAAQqC,GACjBA,EAAE0I,UAAUnJ,EAAIG,SAAWM,EAAI,MAAQ,UAAU2G,EAAI6B,YAGzD7B,EAAII,SAASxH,KAGjB,MAAO,CACH8I,QAAS,IAAMpB,KAASwB,ICNhC,MAAME,EAEFC,YAAYjC,GAGRkC,KAAK3L,QAAU7B,OAAOuL,OAAO,CACzBkC,aAAa,EACbC,UAAU,EACVC,YAAY,EAEZC,WAAY,CAACC,YAAa,IAC1BC,QAAS,GAETC,SAAU,KAEVC,QAAS,MACTC,sBAAuB,MACvBC,SAAU,SACVC,mBAAmB,EACnBC,YAAY,EAEZC,aAAc,UACf/C,GAGEkC,KAAK3L,QAAQ+L,WAAWC,cACzBL,KAAK3L,QAAQ+L,WAAWC,YAAc,IAI1CL,KAAKc,qBAAsB,EAG3Bd,KAAKe,SAAU,EAGff,KAAKgB,OAASvE,IACduD,KAAKiB,WAAaxE,IAClBuD,KAAKkB,cAAgB,GAGrBlB,KAAKmB,eAAiB,CAClBC,aAAgB,GAChBC,OAAU,GACVC,KAAQ,GACRC,KAAQ,IAIZvB,KAAKwB,YACLxB,KAAKyB,mBACLzB,KAAK0B,cAGL1B,KAAK2B,gBAAkB3B,KAAK3L,QAAQoM,sBACpCT,KAAK4B,uBAAuB5B,KAAK2B,iBAGjC3B,KAAK6B,cACL7B,KAAK8B,uBAzDQ,MA4DNvB,EAAYP,KAAK3L,QAAjBkM,SACHA,GAAYA,EAAShM,QACrBgM,EAASzL,QAAQiN,GAAS/B,KAAKgC,UAAUD,IA9DhC,MAkENE,EAAUjC,KAAKkC,MAAfD,OACPE,sBAAuB,SAASC,IAG5B,GAA4B,OAAxBH,EAAOI,cAAyBJ,IAAW1M,SAAS+M,KACpD,OAAOH,sBAAsBC,EAAG9O,KAAK0M,OAIzCA,KAAKuC,SAASvC,KAAK3L,QAAQmM,SAG3B1C,EAAI8C,YAAcZ,KAAKwC,OAGvBxC,KAAKc,qBAAsB,EAC3Bd,KAAKyC,MAAM,QAGXrE,EAAK1M,OAAQ,SAAU,IAAMsO,KAAK8B,yBACnCxO,KAAK0M,OAIZwB,YACI,MAAM1D,EAAMkC,KAAK3L,QAGK,iBAAXyJ,EAAI/I,KACX+I,EAAI/I,GAAKQ,SAASmN,cAAc5E,EAAI/I,KAKxCiL,KAAKkC,MAwlBb,SAAgB7N,GAAS,MACd+L,EAAoC/L,EAApC+L,WAAYE,EAAwBjM,EAAxBiM,QAASL,EAAe5L,EAAf4L,YACtB0C,EAASxM,GAAOA,EAAM,GAAK,8BAE3B/E,EAAOgN,EAAA,wEAAArB,OAGHkD,EAAc,GAAK,uEAHhB,6KAAAlD,OAOuD4F,EAAOvC,EAAWwC,SAPzE,+hBAAA7F,OAiBmD4F,EAAOvC,EAAWyC,KAjBrE,uQAAA9F,OAsBuD4F,EAAOvC,EAAW0C,SAtBzE,sWAAA/F,OA8BqD4F,EAAOnQ,OAAOuQ,KAAK3C,EAAWC,aAAa9L,QA9BhG,sGAAAwI,OA+BgF4F,EAAOvC,EAAWC,YAAY2C,OA/B9G,kHAAAjG,OAiC0F4F,EAAOvC,EAAWC,YAAY7F,KAjCxH,kHAAAuC,OAkC4F4F,EAAOvC,EAAWC,YAAYlF,MAlC1H,kHAAA4B,OAmC4F4F,EAAOvC,EAAWC,YAAYjF,MAnC1H,kHAAA2B,OAoC4F4F,EAAOvC,EAAWC,YAAYhF,MApC1H,kHAAA0B,OAqC4F4F,EAAOvC,EAAWC,YAAYnF,MArC1H,4EAAA6B,OAuCoDuD,EAAQgB,MAAQ,OAvCpE,oBAAAvE,OAuC6F4F,EAAOvC,EAAWC,YAAYiB,MAvC3H,4EAAAvE,OAwCsDuD,EAAQ2C,OAAS,QAxCvE,oBAAAlG,OAwCiG4F,EAAOvC,EAAWC,YAAY4C,OAxC/H,wEA8CPC,EAAM9R,EAAKiP,YAOjB,OAJA6C,EAAI7O,QAAQ8O,KAAK5Q,IAAMA,EAAEoQ,SAAWpQ,EAAEsN,UAAUuD,IAAI,WAGpDF,EAAIzH,KAAO,KAAMyH,EAAI7O,QAAQ8O,KAAKhM,GAAKA,EAAE0I,UAAUwD,SAAS,YACrDjS,EAjpBUgC,CAAO0K,GAGhBA,EAAImC,cACJD,KAAKkC,MAAMD,OAASnE,EAAI/I,IAG5BQ,SAAS+M,KAAKgB,YAAYtD,KAAKkC,MAAM9Q,MAGzCyQ,cACI,MAAM/D,EAAMkC,KAAK3L,QACXjD,EAAO4O,KAAKkC,MAGlB3M,SAAS+M,KAAKiB,YAAYnS,EAAKA,MAC/BmE,SAAS+M,KAAKgB,YAAYlS,EAAKoS,KAG1B1F,EAAImC,aAGLnC,EAAI/I,GAAG+B,cAAc2M,aAAarS,EAAKA,KAAM0M,EAAI/I,IAIjD+I,EAAIoC,UACJF,KAAK0D,UAIJ5F,EAAIqC,aACL/O,EAAK6Q,OAAO9C,MAAMwE,WAAa,OAC1B7F,EAAImC,cACL7O,EAAKwR,QAAQgB,UAAUzE,MAAMwE,WAAa,SAIlD3D,KAAK6D,OAGLzF,EAAK1M,OAAQ,CAAC,SAAU,SAAU,KAC1BsO,KAAK8D,UACL3B,sBAAsB,IAAMnC,KAAK8B,0BAK7CL,mBAGI,MAAMsC,EAAO/D,KACPgE,EAAOhE,KAAK3L,QAAQ+L,WAEpBA,EAAa,CAEf6D,QAASpG,EAAS,CACd5H,QAAS8N,EAAK7B,MAAM+B,QAAQC,OAC5B1F,QAASuF,EAAK7B,MAAM+B,QAAQA,QAE5B/F,SAASQ,EAAGtE,GAAG,MACJ4G,EAA0B+C,EAA1B/C,OAAQkB,EAAkB6B,EAAlB7B,MAAO7N,EAAW0P,EAAX1P,QAGtB2M,EAAOnN,EAAK6K,EAAIsB,KAAKxB,QAAQY,YAAe,IAG5C4B,EAAO1H,EAAI,IAAOc,EAAI4F,KAAKxB,QAAQ2F,aAAgB,IAGnDnD,EAAO1H,EAAI,IAAI0H,EAAO1H,EAAI,GAG1B,MAAM8K,EAAgBpD,EAAO5D,SAASN,WACtCkD,KAAK/J,QAAQkJ,MAAMkF,WAAaD,EAChCpE,KAAKxB,QAAQW,MAAMkF,WAAnB,mEAAAtH,OAC4CiE,EAAOhF,EADnD,6EAAAe,OAEoCiE,EAAO3H,EAF3C,iBAAA0D,OAE4DiE,EAAOhF,EAFnE,2BAAAe,OAE8FiE,EAAOhF,EAFrG,4BAMK3H,EAAQ8L,aACT+B,EAAMD,OAAO9C,MAAM4C,MAAQqC,EAEtB/P,EAAQ4L,cACTiC,EAAMU,QAAQgB,UAAUzE,MAAM4C,MAAQqC,IAK9ClC,EAAMU,QAAQ0B,aAAanF,MAAM4C,MAAQqC,EAGrCL,EAAKhD,SACLgD,EAAKQ,gBAITrC,EAAMD,OAAOpC,UAAU2E,OAAO,YAItC3B,IAAKhF,EAAS,CACVG,OAAO,EACP/H,QAAS8N,EAAK7B,MAAMW,IAAIqB,OACxB1F,QAASuF,EAAK7B,MAAMW,IAAI4B,OAExBvG,SAASQ,EAAGtE,GACH4J,EAAKnB,MAGVkB,EAAK/C,OAAO3H,EAAKe,EAAI4F,KAAKxB,QAAQ2F,aAAgB,IAGlDnE,KAAK/J,QAAQkJ,MAAMuF,gBAAnB,OAAA3H,OAA4CgH,EAAK/C,OAAO3H,EAAxD,gBACA+G,EAAW6D,QAAQ5E,cAI3ByD,QAASjF,EAAS,CACdG,OAAO,EACP/H,QAAS8N,EAAK7B,MAAMY,QAAQoB,OAC5B1F,QAASuF,EAAK7B,MAAMY,QAAQ2B,OAE5BvG,SAASQ,EAAGtE,GACH4J,EAAKlB,UAGViB,EAAK/C,OAAOhF,EAAIhD,KAAKG,MAAQiB,EAAI4F,KAAKxB,QAAQ2F,aAAiB,KAAO,IAGtEnE,KAAK/J,QAAQkJ,MAAMkF,WAAnB,iBAAAtH,OAAiDgH,EAAK/C,OAAOhF,EAA7D,KACA+H,EAAK3D,WAAW6D,QAAQ5E,cAIhCsF,WAAYjF,EAAW,CACnBxL,SAAU6P,EAAK7B,MAAM7B,YAAYhM,QACjCsL,UAAW,SACXzB,SAAS/G,GACL4M,EAAKpC,gBAAkBxK,EAAEN,OAAOhB,aAAa,aAAa6H,cAC1DqG,EAAKQ,oBAKjBvE,KAAKI,WAAaA,EAGtBsB,cAAc,MACHQ,EAAkBlC,KAAlBkC,MAAO7N,EAAW2L,KAAX3L,QAERuQ,EAAgB,CAGlBxG,EAAK8D,EAAM7B,YAAY4C,MAAO,QAAS,IAAMjD,KAAK6E,eAGlDzG,EAAK8D,EAAMU,QAAQgB,UAAW,QAAS,IAAM5D,KAAK8E,WAAW9E,KAAKiB,WAAWrE,WAG7EwB,EAAK8D,EAAM7B,YAAYiB,KAAM,QAAS,MACjCtB,KAAK+E,eAAiB1Q,EAAQuM,YAAcZ,KAAK6D,SAItDzF,EAAK8D,EAAM7B,YAAY2E,OAAQ,CAAC,QAAS,SAAU7N,IAC/C6I,KAAKe,SAAU,EAGXf,KAAKuC,SAASpL,EAAEN,OAAO9D,OAAO,KAAUiN,KAAKc,qBAC7Cd,KAAKyC,MAAM,SAAUzC,KAAKgB,QAG9B7J,EAAE8N,6BAIN7G,EAAK,CACD8D,EAAM+B,QAAQA,QACd/B,EAAM+B,QAAQC,OACdhC,EAAMW,IAAI4B,OACVvC,EAAMW,IAAIqB,OACVhC,EAAMY,QAAQ2B,OACdvC,EAAMY,QAAQoB,QACf,CAAC,YAAa,cAAe,IAAMlE,KAAKe,SAAU,GAGrD3C,EAAK1M,OAAQ,SAAU,IAAMsO,KAAK8B,uBAItC,IAAKzN,EAAQuM,WAAY,CACrB,MAAMsE,EAAK7Q,EAAQwM,aAEnB+D,EAAcpO,KAEV4H,EAAK8D,EAAMD,OAAQ,QAAS,IAAMjC,KAAK8D,SAAW9D,KAAK6D,OAAS7D,KAAKwC,QAGrEpE,EAAK7I,SAAU,QAAS4B,GAAK6I,KAAK8D,WAAa3M,EAAE9D,MAAQ6R,GAAM/N,EAAEgO,OAASD,IAAOlF,KAAK6D,QAGtFzF,EAAK7I,SAAU,CAAC,aAAc,aAAc4B,IACpC6I,KAAK8D,WAAa1F,EAAYjH,GAAGiO,KAAKrQ,GAAMA,IAAOmN,EAAMsB,KAAOzO,IAAOmN,EAAMD,SAC7EjC,KAAK6D,QAEV,CAAC3O,SAAS,KAKjBb,EAAQsM,mBACRvC,EAAyB8D,EAAM7B,YAAY2E,QAAQ,GAIvDhF,KAAKqF,eAAiBT,EAG1B9C,uBACI,MACOI,EAASlC,KAATkC,MACAsB,EAAOtB,EAAPsB,IACD8B,EAAK9B,EAAIrE,MAJIoG,EAMwB7T,OAApC8T,EANYD,EAMZC,WAAYC,EANAF,EAMAE,YAAaC,EANbH,EAMaG,QAC1BC,EAAKzD,EAAMD,OAAOxD,wBAClBmH,EAAKpC,EAAI/E,wBAGXzF,KAAK6M,IAAIH,EAAUC,EAAGG,QAAUF,EAAG1G,OAVvB,EAU0CuG,EACtDH,EAAGrG,IAAH,GAAAlC,OAAY4I,EAAG1G,IAAM2G,EAAG1G,OAXZ,EAWZ,MAEAoG,EAAGrG,IAAH,GAAAlC,OAAY4I,EAAGG,OAbH,EAaZ,MAIJ,MAAMC,EAAM,CACRhH,KAAM4G,EAAG5G,KAAO4G,EAAG3G,MAAQ4G,EAAG5G,MAC9BgH,QAAUJ,EAAG5G,MAAQ,GAAM2G,EAAG5G,KAAO4G,EAAG3G,MAAQ,GAChDiH,MAAON,EAAG5G,MAGRmH,EAAaH,EAAI/F,KAAK3L,QAAQqM,UAC9ByF,EAAcxL,SAASyL,iBAAiB5C,GAAKzE,KAAM,IAGrDuG,EAAGvG,KAAH,GAAAhC,OADAoJ,EAAcD,EAAaV,EACdO,EAAG,KACTG,EAAa,EACPH,EAAG,MAEHG,EAJb,MAQR3B,gBAGI,GAAIvE,KAAKkC,MAAM7B,YAAY5E,OAAQ,CAG/B,MAAMxH,EAAM,KAAA8I,OAAQiD,KAAKkC,MAAM7B,YAAY5E,OAAO5F,aAAa,cAC/DmK,KAAKkC,MAAM7B,YAAY2E,OAAOjS,MAAuC,mBAAxBiN,KAAKgB,OAAO/M,GAAyB+L,KAAKgB,OAAO/M,KAAU6I,WAAa,GAIpHkD,KAAKc,qBACNd,KAAKyC,MAAM,SAAUzC,KAAKgB,QAIlC6D,cAAc,MACH3C,EAAkBlC,KAAlBkC,MAAO7N,EAAW2L,KAAX3L,QAGTA,EAAQ4L,cACTiC,EAAMD,OAAO9C,MAAM4C,MAAQ,uBAG/BG,EAAMD,OAAOpC,UAAUuD,IAAI,SAEtB/O,EAAQuM,YACTZ,KAAK6D,OAGJ7D,KAAKc,qBAGNd,KAAKyC,MAAM,OAAQ,MAI3BA,MAAM4D,GAAgB,QAAAC,EAAAhS,UAAAC,OAANgS,EAAM,IAAA5R,MAAA2R,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,EAAA,GAAAlS,UAAAkS,GAClBxG,KAAKmB,eAAekF,GAAOvR,QAAQsN,GAAMA,KAAMmE,EAAMvG,OAGzDlM,GAAGuS,EAAOjE,GAON,MAJkB,mBAAPA,GAAsC,iBAAViE,GAAsBA,KAASrG,KAAKmB,gBACvEnB,KAAKmB,eAAekF,GAAO7P,KAAK4L,GAG7BpC,KAGXhM,IAAIqS,EAAOjE,GACP,MAAMqE,EAAYzG,KAAKmB,eAAekF,GAEtC,GAAII,EAAW,CACX,MAAMC,EAAQD,EAAUE,QAAQvE,IAE3BsE,GACDD,EAAUG,OAAOF,EAAO,GAIhC,OAAO1G,KAQXgC,UAAUD,GAAO,MACNlG,EAAUqB,EAAiB6E,GAA3BlG,OAEP,GAAIA,EAAQ,OACDqF,EAAwBlB,KAAxBkB,cAAegB,EAASlC,KAATkC,MAChB2E,EAAkBpK,KAAaZ,GAG/B5F,EAAUmI,EAAA,uCAAArB,OAC2B8J,EAAgBzJ,SAD3C,gBAgBhB,OAXA8E,EAAM3B,SAAS+C,YAAYrN,GAC3BiL,EAAc1K,KAAK,CAACP,UAAS4Q,oBAG7B7G,KAAKqF,eAAe7O,KAChB4H,EAAKnI,EAAS,QAAS,KACnB+J,KAAK8E,WAAW+B,EAAgBjK,UAAU,GAC1CoD,KAAKyC,MAAM,eAAgBoE,OAI5B,EAGX,OAAO,EAQXC,aAAaJ,GAGT,GAAqB,iBAAVA,EAAoB,CAC3B,MAAMK,EAAc/G,KAAKkB,cAAcwF,GAGvC,GAAIK,EAAa,OACN9Q,EAAW8Q,EAAX9Q,QAKP,OAFA+J,KAAKkC,MAAM3B,SAASgD,YAAYtN,GAChC+J,KAAKkB,cAAc0F,OAAOF,EAAO,IAC1B,GAIf,OAAO,EAGX3B,aAA2B,IAAhBiC,EAAgB1S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAA2S,EACGjH,KAAKkC,MAAxBU,EADgBqE,EAChBrE,QAASX,EADOgF,EACPhF,OAGVmC,EAAgBpE,KAAKgB,OAAO5D,SAASN,WAC3C8F,EAAQgB,UAAUzE,MAAM4C,MAAQqC,EAG3BpE,KAAK3L,QAAQ4L,cACdgC,EAAO9C,MAAM4C,MAAQqC,GAIzBnC,EAAOpC,UAAU2E,OAAO,SAGxBxE,KAAKiB,WAAajB,KAAKgB,OAAOpD,QAGzBoC,KAAKc,qBAAwBkG,GAC9BhH,KAAKyC,MAAM,OAAQzC,KAAKgB,QAOhCxB,UACIQ,KAAKqF,eAAevQ,QAAQyR,GAAQnI,KAASmI,IAC7C/T,OAAOuQ,KAAK/C,KAAKI,YAAYtL,QAAQzB,GAAO2M,KAAKI,WAAW/M,GAAKmM,WAOrE0H,mBACIlH,KAAKR,UAGL,MAAMpO,EAAO4O,KAAKkC,MAAM9Q,KACxBA,EAAK0F,cAAcyM,YAAYnS,GAMnCyS,OAEI,OADA7D,KAAKkC,MAAMsB,IAAI3D,UAAU2E,OAAO,WACzBxE,KAMXwC,OACI,IAAIxC,KAAK3L,QAAQ6L,SAGjB,OAFAF,KAAKkC,MAAMsB,IAAI3D,UAAUuD,IAAI,WAC7BpD,KAAK8B,uBACE9B,KAMX8D,SACI,OAAO9D,KAAKkC,MAAMsB,IAAI3D,UAAUwD,SAAS,WAY7CyB,UAAsD,IAA9CzL,EAA8C/E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1C,IAAKT,EAAqCS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjC,EAAGgF,EAA8BhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1B,EAAG0H,EAAuB1H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,EAAG0S,EAAgB1S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGlD,MAAM6S,EAASnH,KAAKe,QAIpB,GAHAf,KAAKe,SAAU,EAGX1H,EAAI,GAAKA,EAAI,KAAOxF,EAAI,GAAKA,EAAI,KAAOyF,EAAI,GAAKA,EAAI,KAAO0C,EAAI,GAAKA,EAAI,EACzE,OAAO,EARuC,MAAAoL,EAYlBpH,KAAKI,WAA9ByC,EAZ2CuE,EAY3CvE,IAAKC,EAZsCsE,EAYtCtE,QAASmB,EAZ6BmD,EAY7BnD,QAIfoD,EADaxE,EAAIxO,QAAQmK,QACP2F,cAAgB9K,EAAI,KAC5CwJ,EAAIvD,OAAO,EAAG+H,GAGd,MACMC,EADiBxE,EAAQzO,QAAQmK,QACP2F,aAAenI,EAC/C8G,EAAQxD,OAAO,EAAGgI,GAGlB,MAAMC,EAAgBtD,EAAQ5P,QAAQmK,QAChCgJ,EAAUD,EAAcnI,aAAevL,EAAI,KAC3C4T,EAAUF,EAAcpD,cAAgB,EAAK7K,EAAI,KAiBvD,OAhBA2K,EAAQ3E,OAAOkI,EAASC,GAGxBzH,KAAKgB,OAASvE,EAAUpD,EAAGxF,EAAGyF,EAAG0C,GACjCgE,KAAKe,QAAUoG,EAGXnH,KAAKe,SACLf,KAAKuE,gBAIJyC,GACDhH,KAAK+E,cAGF,EAWXxC,SAAS5J,GAAwB,IAAhBqO,EAAgB1S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAG7B,GAAe,OAAXqE,EAEA,OADAqH,KAAK6E,eACE,EALkB,MAAA6C,EAQNxK,EAAiBvE,GAAjCkD,EARsB6L,EAQtB7L,OAAQJ,EARciM,EAQdjM,KAGf,GAAII,EAAQ,CAGR,MAAM8L,EAAQlM,EAAKiC,cACZrJ,EAAW2L,KAAKkC,MAAM7B,YAAtBhM,QACDwC,EAASxC,EAAQ8O,KAAKpO,GAAMA,EAAGc,aAAa,eAAiB8R,GAGnE,IAAK9Q,EAAO8L,OACR,IAAK,MAAM5N,KAAMV,EACbU,EAAG8K,UAAU9K,IAAO8B,EAAS,MAAQ,UAAU,UAIvD,OAAOmJ,KAAK8E,WAAWjJ,EAAQmL,IAUvCpF,uBAAuBnG,GAMnB,OAHAA,EAAOA,EAAKiC,gBAGHsC,KAAKkC,MAAM7B,YAAYhM,QAAQ8O,KAAK7J,GAAKA,EAAEzD,aAAa,eAAiB4F,IAASnC,EAAEsO,SAOjGC,yBACI,OAAO7H,KAAK2B,gBAMhBmG,WACI,OAAO9H,KAAKgB,OAMhB+G,UACI,OAAO/H,KAAKkC,MAMhBwB,UAII,OAHA1D,KAAK6D,OACL7D,KAAK3L,QAAQ6L,UAAW,EACxBF,KAAKkC,MAAMD,OAAOpC,UAAUuD,IAAI,YACzBpD,KAMXgI,SAGI,OAFAhI,KAAK3L,QAAQ6L,UAAW,EACxBF,KAAKkC,MAAMD,OAAOpC,UAAU2E,OAAO,YAC5BxE,MAiEfF,EAAMmI,MAAQ,CACVC,KL/vBgB,CAACjS,EAASoQ,EAAOjS,EAAIC,IAAYP,EAAGmC,EAASoQ,EAAO,SAAS8B,IAC7E/T,EAAGgU,MAAMpI,KAAM1L,WACf0L,KAAKqI,oBAAoBhC,EAAO8B,IACjC9T,GK6vBCP,GAAIsK,EACJpK,IAAKoK,EACL3H,UAAW2H,EACXhJ,wBAAyBgJ,EACzBrH,uBAAwBqH,EACxBxI,gBAAiBwI,EACjBtI,mBAAoBsI,GAIxB0B,EAAM1M,OAAUiB,IAAY,IAAIyL,EAAMzL,IAGtCyL,EAAMwI,QAAU,QACDxI","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\r\n * Add an eventlistener which will be fired only once.\r\n *\r\n * @param element Target element\r\n * @param event Event name\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const once = (element, event, fn, options) => on(element, event, function helper() {\r\n    fn.apply(this, arguments);\r\n    this.removeEventListener(event, helper);\r\n}, options);\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    elements.forEach(el =>\r\n        events.forEach(ev =>\r\n            el[method](ev, fn, {capture: false, ...options})\r\n        )\r\n    );\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a 'data-key' attribute will be saved in a object (which will be returned)\r\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, 'data-con');\r\n        const key = removeAttribute(element, 'data-key');\r\n\r\n        // Check and save element\r\n        if (key) {\r\n            base[key] = element;\r\n        }\r\n\r\n        // Check all children\r\n        const children = Array.from(element.children);\r\n        const subtree = con ? (base[con] = {}) : base;\r\n        for (let child of children) {\r\n\r\n            // Check if element should be saved as array\r\n            const arr = removeAttribute(child, 'data-arr');\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = [])).push(child);\r\n            } else {\r\n                resolve(child, subtree);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param negative\r\n */\r\nexport function adjustableInputNumbers(el, negative = true) {\r\n\r\n    // Check if a char represents a number\r\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\r\n\r\n    function handleScroll(e) {\r\n        const val = el.value;\r\n        const off = el.selectionStart;\r\n        let numStart = off;\r\n        let num = ''; // Will be the number as string\r\n\r\n        // Look back\r\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\r\n            num = val[i] + num;\r\n            numStart--; // Find start of number\r\n        }\r\n\r\n        // Look forward\r\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\r\n            num += val[i];\r\n        }\r\n\r\n        // Check if number is valid\r\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\r\n\r\n            const mul = e.deltaY < 0 ? 1 : -1;\r\n            const inc = e.ctrlKey ? mul * 5 : mul;\r\n            let newNum = Number(num) + inc;\r\n\r\n            if (!negative && newNum < 0) {\r\n                newNum = 0;\r\n            }\r\n\r\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\r\n            const curPos = numStart + String(newNum).length;\r\n\r\n            // Update value and set cursor\r\n            el.value = newStr;\r\n            el.focus();\r\n            el.setSelectionRange(curPos, curPos);\r\n        }\r\n\r\n        // Prevent default\r\n        e.preventDefault();\r\n\r\n        // Trigger input event\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n\r\n/**\r\n * Cross browser padStart implementation\r\n * @param string\r\n * @param maxLength\r\n * @param fillString\r\n * @returns {string}\r\n */\r\nexport function padStart(string, maxLength, fillString = ' ') {\r\n    maxLength = maxLength - string.length;\r\n\r\n    if (maxLength <= 0 || !fillString.length) {\r\n        return String(string);\r\n    } else {\r\n\r\n        if (maxLength > fillString.length) {\r\n            fillString += fillString.repeat(maxLength / fillString.length);\r\n        }\r\n\r\n        return fillString.slice(0, maxLength) + String(string);\r\n    }\r\n}\r\n","import {padStart} from '../lib/utils';\n\n// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    let i = floor(h);\n\n    let f = h - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    let mod = i % 6;\n    let r = [v, q, p, p, t, v][mod];\n    let g = [t, v, v, q, p, p][mod];\n    let b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        padStart(round(v).toString(16), 2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    let l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100, m /= 100, y /= 100, k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100, l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    let ns = (2 * s / (l + s)) * 100;\n    let v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSV(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                let [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break;\n\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\n            }\n            case 'rgba': {\n                let [, , r, g, b, a = 1] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...rgbToHsv(r, g, b), a], type};\n            }\n            case 'hex': {\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\n                let [, hex] = match;\n\n                // Fill up opacity if not declared\n                if (hex.length === 3) {\n                    hex += 'F';\n                } else if (hex.length === 6) {\n                    hex += 'FF';\n                }\n\n                let alpha;\n                if (hex.length === 4) {\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\n                } else if (hex.length === 8) {\n                    [hex, alpha] = splitAt(hex, 6);\n                }\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                alpha = parseInt(alpha, 16) / 255;\n                return {values: [...hexToHsv(hex), alpha], type};\n            }\n            case 'hsla': {\n                let [, , h, s, l, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...hslToHsv(h, s, l), a], type};\n            }\n            case 'hsva': {\n                let [, , h, s, v, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [h, s, v, a], type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {padStart} from '../lib/utils';\r\nimport * as Color from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n\r\n    const ceil = Math.ceil;\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v];\r\n            const rhsva = hsva.map(ceil);\r\n\r\n            hsva.push(that.a);\r\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = Color.hsvToHsl(that.h, that.s, that.v);\r\n            const rhsla = hsla.map(ceil);\r\n\r\n            hsla.push(that.a);\r\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = Color.hsvToRgb(that.h, that.s, that.v);\r\n            const rrgba = rgba.map(ceil);\r\n\r\n            rgba.push(that.a);\r\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = Color.hsvToCmyk(that.h, that.s, that.v);\r\n            const rcmyk = cmyk.map(ceil);\r\n\r\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\r\n            return cmyk;\r\n        },\r\n\r\n        toHEX() {\r\n            const hex = Color.hsvToHex(...[that.h, that.s, that.v]);\r\n\r\n            hex.toString = () => {\r\n\r\n                // Check if alpha channel make sense, convert it to 255 number space, convert\r\n                // to hex and pad it with zeros if needet.\r\n                const alpha = that.a >= 1 ? '' : padStart(Number((that.a * 255).toFixed(0))\r\n                    .toString(16)\r\n                    .toUpperCase(), 2, '0');\r\n\r\n                return `#${hex.join('').toUpperCase() + alpha}`;\r\n            };\r\n\r\n            return hex;\r\n        },\r\n\r\n        clone() {\r\n            return HSVaColor(that.h, that.s, that.v, that.a);\r\n        }\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lockX: false,\r\n            lockY: false,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {element} = options;\r\n            const b = that.options.wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (!options.lockX) {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (!options.lockY) {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            options.onchange(x, y);\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: wrapperRect.left + x,\r\n                clientY: wrapperRect.top + y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","// Import styles\nimport '../scss/pickr.scss';\n\n// Import utils\nimport * as _     from './lib/utils';\nimport * as Color from './lib/color';\n\n// Import classes\nimport {HSVaColor} from './lib/hsvacolor';\nimport Moveable    from './helper/moveable';\nimport Selectable  from './helper/selectable';\n\nclass Pickr {\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = Object.assign({\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {interaction: {}},\n            strings: {},\n\n            swatches: null,\n\n            default: 'fff',\n            defaultRepresentation: 'HEX',\n            position: 'middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        // Check interaction section\n        if (!this.options.components.interaction) {\n            this.options.components.interaction = {};\n        }\n\n        // Will be used to prevent specific actions during initilization\n        this._initializingActive = true;\n\n        // Replace element with color picker\n        this._recalc = true;\n\n        // Current and last color for comparison\n        this._color = HSVaColor();\n        this._lastColor = HSVaColor();\n        this._swatchColors = [];\n\n        // Evenlistener name: [callbacks]\n        this._eventListener = {\n            'swatchselect': [],\n            'change': [],\n            'save': [],\n            'init': []\n        };\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Initialize color _epresentation\n        this._representation = this.options.defaultRepresentation;\n        this.setColorRepresentation(this._representation);\n\n        // Finalize build\n        this._finalBuild();\n        this._rePositioningPicker();\n\n        // Append pre-defined swatch colors\n        const {swatches} = this.options;\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb.bind(this));\n            }\n\n            // Apply default color\n            this.setColor(this.options.default);\n\n            // Show pickr if locked\n            opt.showAlways && this.show();\n\n            // Initialization is done - pickr is usable, fire init event\n            this._initializingActive = false;\n            this._emit('init');\n\n            // Re-calc position on window resize\n            _.on(window, 'resize', () => this._rePositioningPicker());\n        }).bind(this));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n            opt.el = document.querySelector(opt.el);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = create(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n        document.body.appendChild(root.app);\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentElement.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n\n        // Update position on scroll\n        _.on(window, ['scroll', 'wheel'], () => {\n            if (this.isOpen()) {\n                requestAnimationFrame(() => this._rePositioningPicker());\n            }\n        });\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent), \n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    // If the user changes the color, remove the cleared icon\n                    _root.button.classList.remove('clear');\n                }\n            }),\n\n            hue: Moveable({\n                lockX: true,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(x, y) {\n                    if (!comp.hue) return;\n\n                    // Calculate hue\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lockX: true,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(x, y) {\n                    if (!comp.opacity) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true),\n\n            // Repositioning on resize\n            _.on(window, 'resize', () => this._rePositioningPicker)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            _.adjustableInputNumbers(_root.interaction.result, false);\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const padding = 8;\n        const {_root} = this;\n        const {app} = _root;\n        const as = app.style;\n\n        const {innerWidth, innerHeight, scrollY} = window;\n        const bb = _root.button.getBoundingClientRect();\n        const ab = app.getBoundingClientRect();\n\n        // Check if picker is cuttet of from the top & bottom\n        if (Math.abs(scrollY - bb.bottom) + ab.height + padding < innerHeight) {\n            as.top = `${bb.top - ab.height - padding}px`;\n        } else {\n            as.top = `${bb.bottom + padding}px`;\n        }\n\n        // Positioning picker on the x-axis\n        const pos = {\n            left: bb.left + bb.width - ab.width,\n            middle: (-ab.width / 2) + (bb.left + bb.width / 2),\n            right: bb.left\n        };\n\n        const wantedLeft = pos[this.options.position];\n        const currentLeft = parseInt(getComputedStyle(app).left, 10);\n\n        if (currentLeft + wantedLeft > innerWidth) {\n            as.left = `${pos['left']}px`;\n        } else if (wantedLeft < 0 ) {\n            as.left = `${pos['right']}px`;\n        } else {\n            as.left = `${wantedLeft}px`;\n        }\n    }\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Short names\n        const {hue, opacity, palette} = this.components;\n\n        // Calculate y position of hue slider\n        const hueWrapper = hue.options.wrapper;\n        const hueY = hueWrapper.offsetHeight * (h / 360);\n        hue.update(0, hueY);\n\n        // Calculate y position of opacity slider\n        const opacityWrapper = opacity.options.wrapper;\n        const opacityY = opacityWrapper.offsetHeight * a;\n        opacity.update(0, opacityY);\n\n        // Calculate y and x position of color palette\n        const pickerWrapper = palette.options.wrapper;\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\n        palette.update(pickerX, pickerY);\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n        this._recalc = recalc; // Restore old state\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (!target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGBA, HSVA, HSLA and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type') === type && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\nfunction create(options) {\n    const {components, strings, useAsButton} = options;\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n\n    const root = _.createFromTemplate(`\n        <div data-key=\"root\" class=\"pickr\">\n        \n            ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\n\n            <div data-key=\"app\" class=\"pcr-app\">\n                <div class=\"pcr-selection\">\n                    <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(components.preview)}>\n                        <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\n                        <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\n                    </div>\n\n                    <div data-con=\"palette\" class=\"pcr-color-palette\">\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"palette\" class=\"pcr-palette\"></div>\n                    </div>\n\n                    <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(components.hue)}>\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\n                    </div>\n\n                    <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(components.opacity)}>\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\n                    </div>\n                </div>\n\n                <div class=\"swatches\" data-key=\"swatches\"></div> \n\n                <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(components.interaction).length)}>\n                    <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(components.interaction.input)}>\n\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEX\" value=\"HEX\" type=\"button\" ${hidden(components.interaction.hex)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBa\" type=\"button\" ${hidden(components.interaction.rgba)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLa\" type=\"button\" ${hidden(components.interaction.hsla)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVa\" type=\"button\" ${hidden(components.interaction.hsva)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(components.interaction.cmyk)}>\n\n                    <input data-key=\"save\" class=\"pcr-save\" value=\"${strings.save || 'Save'}\" type=\"button\" ${hidden(components.interaction.save)}>\n                    <input data-key=\"clear\" class=\"pcr-clear\" value=\"${strings.clear || 'Clear'}\" type=\"button\" ${hidden(components.interaction.clear)}>\n                </div>\n            </div>\n        </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n\n// Static methods\nPickr.utils = {\n    once: _.once,\n    on: _.on,\n    off: _.off,\n    eventPath: _.eventPath,\n    createElementFromString: _.createElementFromString,\n    adjustableInputNumbers: _.adjustableInputNumbers,\n    removeAttribute: _.removeAttribute,\n    createFromTemplate: _.createFromTemplate\n};\n\n// Create instance via method\nPickr.create = (options) => new Pickr(options);\n\n// Export\nPickr.version = '0.4.7';\nexport default Pickr;\n"],"sourceRoot":""}