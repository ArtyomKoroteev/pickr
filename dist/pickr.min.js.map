{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/lib/utils.js","webpack:///./src/js/lib/color.js","webpack:///./src/js/lib/hsvacolor.js","webpack:///./src/js/helper/moveable.js","webpack:///./src/js/helper/selectable.js","webpack:///./src/js/pickr.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","once","element","event","fn","options","on","helper","apply","this","arguments","removeEventListener","eventListener","off","method","elements","events","length","undefined","HTMLCollection","NodeList","Array","from","isArray","forEach","el","ev","_objectSpread","capture","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","base","con","children","subtree","_i","child","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","isNaN","isFinite","mul","deltaY","inc","ctrlKey","newNum","Number","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","min","Math","max","hsvToRgb","h","v","floor","f","q","mod","hsvToHex","map","round","toString","padStart","hsvToCmyk","k","rgb","g","b","hsvToHsl","rgbToHsv","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","_toConsumableArray","hslToHsv","hexToHsv","hex","match","parseInt","parseToHSV","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","concat","_numarize4","_numarize4$","a","splitAt","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","hsv","rhsv","toFixed","toHSLA","hsl","Color","rhsl","toRGBA","rrgb","toCMYK","rcmyk","toHEX","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","wrapperRect","wrapper","getBoundingClientRect","cache","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","trigger","update","destroy","passive","Selectable","className","_ontap","classList","Pickr","_this","_classCallCheck","useAsButton","disabled","comparison","components","interaction","strings","swatches","default","defaultRepresentation","position","adjustableNumbers","showAlways","parent","closeWithKey","onChange","onSave","onSwatchSelect","_initializingActive","_recalc","_color","_lastColor","_preBuild","_buildComponents","_bindEvents","_representation","setColorRepresentation","_finalBuild","_rePositioningPicker","requestAnimationFrame","setColor","hidden","int","querySelector","_root","preview","hue","opacity","keys","input","save","clear","find","add","contains","button","body","appendChild","removeChild","app","replaceChild","disable","transition","lastColor","hide","inst","comp","palette","picker","cssRGBaString","background","currentColor","_updateOutput","remove","slider","backgroundColor","selectable","_this2","eventBindings","_clearColor","setHSVA","pickr_toConsumableArray","_saveColor","result","stopImmediatePropagation","_ref","color","ck","isOpen","show","code","some","_eventBindings","relative","marginLeft","marginTop","bb","ab","as","bottom","innerHeight","pos","middle","right","cl","getComputedStyle","newLeft","leftClip","rightClip","innerWidth","_this3","_this$_root","_this4","args","silent","recalc","_this$components","hueY","opacityY","pickerWrapper","pickerX","pickerY","string","_Color$parseToHSV","utype","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","click","utils","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\r\n * Add an eventlistener which will be fired only once.\r\n *\r\n * @param element Target element\r\n * @param event Event name\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const once = (element, event, fn, options) => on(element, event, function helper() {\r\n    fn.apply(this, arguments);\r\n    this.removeEventListener(event, helper);\r\n}, options);\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    elements.forEach(el =>\r\n        events.forEach(ev =>\r\n            el[method](ev, fn, {capture: false, ...options})\r\n        )\r\n    );\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a 'data-key' attribute will be saved in a object (which will be returned)\r\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, 'data-con');\r\n        const key = removeAttribute(element, 'data-key');\r\n\r\n        // Check and save element\r\n        if (key) {\r\n            base[key] = element;\r\n        }\r\n\r\n        // Check all children\r\n        const children = Array.from(element.children);\r\n        const subtree = con ? (base[con] = {}) : base;\r\n        for (let child of children) {\r\n\r\n            // Check if element should be saved as array\r\n            const arr = removeAttribute(child, 'data-arr');\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = [])).push(child);\r\n            } else {\r\n                resolve(child, subtree);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param negative\r\n */\r\nexport function adjustableInputNumbers(el, negative = true) {\r\n\r\n    // Check if a char represents a number\r\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\r\n\r\n    function handleScroll(e) {\r\n        const val = el.value;\r\n        const off = el.selectionStart;\r\n        let numStart = off;\r\n        let num = ''; // Will be the number as string\r\n\r\n        // Look back\r\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\r\n            num = val[i] + num;\r\n            numStart--; // Find start of number\r\n        }\r\n\r\n        // Look forward\r\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\r\n            num += val[i];\r\n        }\r\n\r\n        // Check if number is valid\r\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\r\n\r\n            const mul = e.deltaY < 0 ? 1 : -1;\r\n            const inc = e.ctrlKey ? mul * 5 : mul;\r\n            let newNum = Number(num) + inc;\r\n\r\n            if (!negative && newNum < 0) {\r\n                newNum = 0;\r\n            }\r\n\r\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\r\n            const curPos = numStart + String(newNum).length;\r\n\r\n            // Update value and set cursor\r\n            el.value = newStr;\r\n            el.focus();\r\n            el.setSelectionRange(curPos, curPos);\r\n        }\r\n\r\n        // Prevent default\r\n        e.preventDefault();\r\n\r\n        // Trigger input event\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}","// Shorthands\r\nconst min = Math.min,\r\n    max = Math.max;\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let i = Math.floor(h);\r\n\r\n    let f = h - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    let mod = i % 6;\r\n    let r = [v, q, p, p, t, v][mod];\r\n    let g = [t, v, v, q, p, p][mod];\r\n    let b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v => Math.round(v).toString(16).padStart(2, '0'));\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    let l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100, m /= 100, y /= 100, k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100, l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    let ns = (2 * s / (l + s)) * 100;\r\n    let v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSV(str) {\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\r\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    for (let type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                let [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break;\r\n\r\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\r\n            }\r\n            case 'rgba': {\r\n                let [, , r, g, b, a = 1] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], type};\r\n            }\r\n            case 'hex': {\r\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\r\n                let [, hex] = match;\r\n\r\n                // Fill up opacity if not declared\r\n                if (hex.length === 3) {\r\n                    hex += 'F';\r\n                } else if (hex.length === 6) {\r\n                    hex += 'FF';\r\n                }\r\n\r\n                let alpha;\r\n                if (hex.length === 4) {\r\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\r\n                } else if (hex.length === 8) {\r\n                    [hex, alpha] = splitAt(hex, 6);\r\n                }\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                alpha = parseInt(alpha, 16) / 255;\r\n                return {values: [...hexToHsv(hex), alpha], type};\r\n            }\r\n            case 'hsla': {\r\n                let [, , h, s, l, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], type};\r\n            }\r\n            case 'hsva': {\r\n                let [, , h, s, v, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [h, s, v, a], type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}","import * as Color from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n\r\n    const ceil = Math.ceil;\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsv = [that.h, that.s, that.v];\r\n            const rhsv = hsv.map(ceil);\r\n\r\n            hsv.toString = () => `hsva(${rhsv[0]}, ${rhsv[1]}%, ${rhsv[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsv;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsl = Color.hsvToHsl(that.h, that.s, that.v);\r\n            const rhsl = hsl.map(ceil);\r\n\r\n            hsl.toString = () => `hsla(${rhsl[0]}, ${rhsl[1]}%, ${rhsl[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsl;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgb = Color.hsvToRgb(that.h, that.s, that.v);\r\n            const rrgb = rgb.map(ceil);\r\n\r\n            rgb.toString = () => `rgba(${rrgb[0]}, ${rrgb[1]}, ${rrgb[2]}, ${that.a.toFixed(1)})`;\r\n            return rgb;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = Color.hsvToCmyk(that.h, that.s, that.v);\r\n            const rcmyk = cmyk.map(ceil);\r\n\r\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\r\n            return cmyk;\r\n        },\r\n\r\n        toHEX() {\r\n            const hex = Color.hsvToHex(...[that.h, that.s, that.v]);\r\n\r\n            hex.toString = () => {\r\n\r\n                // Check if alpha channel make sense, convert it to 255 number space, convert\r\n                // to hex and pad it with zeros if needet.\r\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                    .toString(16)\r\n                    .toUpperCase()\r\n                    .padStart(2, '0');\r\n\r\n                return `#${hex.join('').toUpperCase() + alpha}`;\r\n            };\r\n\r\n            return hex;\r\n        },\r\n\r\n        clone() {\r\n            return HSVaColor(that.h, that.s, that.v, that.a);\r\n        }\r\n    };\r\n\r\n    return that;\r\n}","import * as _ from './../lib/utils';\r\n\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lockX: false,\r\n            lockY: false,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n            that.wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {element} = options;\r\n            const b = that.wrapperRect;\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x;\r\n                y = cache.y;\r\n            }\r\n\r\n            if (!options.lockX)\r\n                element.style.left = (x - element.offsetWidth / 2) + 'px';\r\n\r\n            if (!options.lockY)\r\n                element.style.top = (y - element.offsetHeight / 2) + 'px';\r\n\r\n            that.cache = {x, y};\r\n            options.onchange(x, y);\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that.wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            that.wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: that.wrapperRect.left + x,\r\n                clientY: that.wrapperRect.top + y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Instance var\r\n    that.wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}","import * as _ from './../lib/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            onchange: () => 0,\r\n            className: '',\r\n            elements: []\r\n        }, opt),\r\n\r\n        _ontap(evt) {\r\n            const opt = that.options;\r\n            opt.elements.forEach(e =>\r\n                e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n            );\r\n\r\n            opt.onchange(evt);\r\n        },\r\n\r\n        destroy() {\r\n            _.off(that.options.elements, 'click', this._ontap);\r\n        }\r\n    };\r\n\r\n    _.on(that.options.elements, 'click', that._ontap);\r\n    return that;\r\n}","// Import styles\r\nimport '../scss/pickr.scss';\r\n\r\n// Import utils\r\nimport * as _     from './lib/utils';\r\nimport * as Color from './lib/color';\r\n\r\n// Import classes\r\nimport {HSVaColor} from './lib/hsvacolor';\r\nimport Moveable    from './helper/moveable';\r\nimport Selectable  from './helper/selectable';\r\n\r\nclass Pickr {\r\n\r\n    constructor(opt) {\r\n\r\n        // Assign default values\r\n        this.options = Object.assign({\r\n            useAsButton: false,\r\n            disabled: false,\r\n            comparison: true,\r\n\r\n            components: {interaction: {}},\r\n            strings: {},\r\n\r\n            swatches: null,\r\n\r\n            default: 'fff',\r\n            defaultRepresentation: 'HEX',\r\n            position: 'middle',\r\n            adjustableNumbers: true,\r\n            showAlways: false,\r\n            parent: undefined,\r\n\r\n            closeWithKey: 'Escape',\r\n            onChange: () => 0,\r\n            onSave: () => 0,\r\n            onSwatchSelect: () => 0\r\n        }, opt);\r\n\r\n        // Check interaction section\r\n        if (!this.options.components.interaction) {\r\n            this.options.components.interaction = {};\r\n        }\r\n\r\n        // Will be used to prevent specific actions during initilization\r\n        this._initializingActive = true;\r\n\r\n        // Replace element with color picker\r\n        this._recalc = true;\r\n\r\n        // Current and last color for comparison\r\n        this._color = new HSVaColor();\r\n        this._lastColor = new HSVaColor();\r\n\r\n        // Initialize picker\r\n        this._preBuild();\r\n        this._buildComponents();\r\n        this._bindEvents();\r\n\r\n        // Initialize color _epresentation\r\n        this._representation = this.options.defaultRepresentation;\r\n        this.setColorRepresentation(this._representation);\r\n\r\n        // Finalize build\r\n        this._finalBuild();\r\n        this._rePositioningPicker();\r\n\r\n        // Initialize color after first repaint\r\n        requestAnimationFrame(() => {\r\n            this.setColor(this.options.default);\r\n\r\n            // Initilization is finish, pickr is visible and ready to use\r\n            this._initializingActive = false;\r\n        });\r\n    }\r\n\r\n    // Does only the absolutly basic thing to initialize the components\r\n    _preBuild() {\r\n        const opt = this.options;\r\n\r\n        // Check if element is selector\r\n        if (typeof opt.el === 'string') {\r\n            opt.el = document.querySelector(opt.el);\r\n        }\r\n\r\n        // Create element and append it to body to\r\n        // prevent initialization errors\r\n        this._root = create(opt);\r\n\r\n        // Check if a custom button is used\r\n        if (opt.useAsButton) {\r\n\r\n            // Check if the user has an alternative location defined, used body as fallback\r\n            if (!opt.parent) {\r\n                opt.parent = 'body';\r\n            }\r\n\r\n            this._root.button = opt.el; // Replace button with customized button\r\n        }\r\n\r\n        document.body.appendChild(this._root.root);\r\n    }\r\n\r\n    _finalBuild() {\r\n        const opt = this.options;\r\n        const root = this._root;\r\n\r\n        // Remove from body\r\n        document.body.removeChild(root.root);\r\n\r\n        // Check parent option\r\n        if (opt.parent) {\r\n\r\n            // Check if element is selector\r\n            if (typeof opt.parent === 'string') {\r\n                opt.parent = document.querySelector(opt.parent);\r\n            }\r\n\r\n            opt.parent.appendChild(root.app);\r\n        }\r\n\r\n        // Don't replace the the element if a custom button is used\r\n        if (!opt.useAsButton) {\r\n\r\n            // Replace element with actual color-picker\r\n            opt.el.parentElement.replaceChild(root.root, opt.el);\r\n        }\r\n\r\n        // Call disable to also add the disabled class\r\n        if (opt.disabled) {\r\n            this.disable();\r\n        }\r\n\r\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\r\n        if (!opt.comparison) {\r\n            root.button.style.transition = 'none';\r\n            if (!opt.useAsButton) {\r\n                root.preview.lastColor.style.transition = 'none';\r\n            }\r\n        }\r\n\r\n        // Check showAlways option\r\n        opt.showAlways ? root.app.classList.add('visible') : this.hide();\r\n    }\r\n\r\n    _buildComponents() {\r\n\r\n        // Instance reference\r\n        const inst = this;\r\n        const comp = this.options.components;\r\n\r\n        const components = {\r\n\r\n            palette: Moveable({\r\n                element: inst._root.palette.picker,\r\n                wrapper: inst._root.palette.palette,\r\n\r\n                onchange(x, y) {\r\n                    const {_color, _root, options} = inst;\r\n\r\n                    // Calculate saturation based on the position\r\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\r\n\r\n                    // Calculate the value\r\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\r\n\r\n                    // Prevent falling under zero\r\n                    _color.v < 0 ? _color.v = 0 : 0;\r\n\r\n                    // Set picker and gradient color\r\n                    const cssRGBaString = _color.toRGBA().toString();\r\n                    this.element.style.background = cssRGBaString;\r\n                    this.wrapper.style.background = `\r\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent), \r\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\r\n                    `;\r\n\r\n                    // Check if color is locked\r\n                    if (!options.comparison) {\r\n                        _root.button.style.background = cssRGBaString;\r\n\r\n                        if (!options.useAsButton) {\r\n                            _root.preview.lastColor.style.background = cssRGBaString;\r\n                        }\r\n                    }\r\n\r\n                    // Change current color\r\n                    _root.preview.currentColor.style.background = cssRGBaString;\r\n\r\n                    // Update the input field only if the user is currently not typing\r\n                    if (inst._recalc) {\r\n                        inst._updateOutput();\r\n                    }\r\n\r\n                    // If the user changes the color, remove the cleared icon\r\n                    _root.button.classList.remove('clear');\r\n                }\r\n            }),\r\n\r\n            hue: Moveable({\r\n                lockX: true,\r\n                element: inst._root.hue.picker,\r\n                wrapper: inst._root.hue.slider,\r\n\r\n                onchange(x, y) {\r\n                    if (!comp.hue) return;\r\n\r\n                    // Calculate hue\r\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\r\n\r\n                    // Update color\r\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            opacity: Moveable({\r\n                lockX: true,\r\n                element: inst._root.opacity.picker,\r\n                wrapper: inst._root.opacity.slider,\r\n\r\n                onchange(x, y) {\r\n                    if (!comp.opacity) return;\r\n\r\n                    // Calculate opacity\r\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\r\n\r\n                    // Update color\r\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\r\n                    inst.components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            selectable: Selectable({\r\n                elements: inst._root.interaction.options,\r\n                className: 'active',\r\n                onchange(e) {\r\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\r\n                    inst._updateOutput();\r\n                }\r\n            })\r\n        };\r\n\r\n        this.components = components;\r\n    }\r\n\r\n    _bindEvents() {\r\n        const {_root, options} = this;\r\n\r\n        const eventBindings = [\r\n\r\n            // Clear color\r\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\r\n\r\n            // Select last color on click\r\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\r\n\r\n            // Save color\r\n            _.on(_root.interaction.save, 'click', () => {\r\n                !this._saveColor() && !options.showAlways && this.hide();\r\n            }),\r\n\r\n            // Detect user input and disable auto-recalculation\r\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\r\n                this._recalc = false;\r\n\r\n                // Fire listener if initialization is finish and changed color was valid\r\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\r\n                    this.options.onChange(this._color, this);\r\n                }\r\n\r\n                e.stopImmediatePropagation();\r\n            }),\r\n\r\n            // Cancel input detection on color change\r\n            _.on([\r\n                _root.palette.palette,\r\n                _root.palette.picker,\r\n                _root.hue.slider,\r\n                _root.hue.picker,\r\n                _root.opacity.slider,\r\n                _root.opacity.picker\r\n            ], ['mousedown', 'touchstart'], () => this._recalc = true),\r\n\r\n            // Repositioning on resize\r\n            _.on(window, 'resize', () => this._rePositioningPicker)\r\n        ];\r\n\r\n        // Color swatches\r\n        if (_root.swatches) {\r\n            eventBindings.push(\r\n                _.on(_root.swatches, 'click', ({target}) => {\r\n                    const color = target.getAttribute('data-color');\r\n                    color && this.setColor(color, true);\r\n\r\n                    // Fire event\r\n                    options.onSwatchSelect(color, this);\r\n                })\r\n            );\r\n        }\r\n\r\n        // Provide hiding / showing abilities only if showAlways is false\r\n        if (!options.showAlways) {\r\n            const ck = options.closeWithKey;\r\n\r\n            eventBindings.push(\r\n                // Save and hide / show picker\r\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\r\n\r\n                // Close with escape key\r\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\r\n\r\n                // Cancel selecting if the user taps behind the color picker\r\n                _.on(document, ['touchstart', 'mousedown'], e => {\r\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\r\n                        this.hide();\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Make input adjustable if enabled\r\n        if (options.adjustableNumbers) {\r\n            _.adjustableInputNumbers(_root.interaction.result, false);\r\n        }\r\n\r\n        // Save bindings\r\n        this._eventBindings = eventBindings;\r\n    }\r\n\r\n    _rePositioningPicker() {\r\n        const root = this._root;\r\n        const app = this._root.app;\r\n\r\n        // Check if user has defined a parent\r\n        if (this.options.parent) {\r\n            const relative = root.button.getBoundingClientRect();\r\n            app.style.position = 'fixed';\r\n            app.style.marginLeft = `${relative.left}px`;\r\n            app.style.marginTop = `${relative.top}px`;\r\n        }\r\n\r\n        const bb = root.button.getBoundingClientRect();\r\n        const ab = app.getBoundingClientRect();\r\n        const as = app.style;\r\n\r\n        // Check if picker is cuttet of from the top & bottom\r\n        if (ab.bottom > window.innerHeight) {\r\n            as.top = `${-(ab.height) - 5}px`;\r\n        } else if (bb.bottom + ab.height < window.innerHeight) {\r\n            as.top = `${bb.height + 5}px`;\r\n        }\r\n\r\n        // Positioning picker on the x-axis\r\n        const pos = {\r\n            left: -(ab.width) + bb.width,\r\n            middle: -(ab.width / 2) + bb.width / 2,\r\n            right: 0\r\n        };\r\n\r\n        const cl = parseInt(getComputedStyle(app).left, 10);\r\n        let newLeft = pos[this.options.position];\r\n        const leftClip = (ab.left - cl) + newLeft;\r\n        const rightClip = (ab.left - cl) + newLeft + ab.width;\r\n\r\n        /**\r\n         * First check if position is left or right but\r\n         * pickr-app cannot set to left AND right because it would\r\n         * be clipped by the browser width. If so, wrap it and position\r\n         * pickr below button via the pos[middle] value.\r\n         * The current selected posiotion should'nt be the middle.di\r\n         */\r\n        if (this.options.position !== 'middle' && (\r\n            (leftClip < 0 && -leftClip < ab.width / 2) ||\r\n            (rightClip > window.innerWidth && rightClip - window.innerWidth < ab.width / 2))) {\r\n            newLeft = pos['middle'];\r\n\r\n            /**\r\n             * Even if set to middle pickr is getting clipped, so\r\n             * set it to left / right.\r\n             */\r\n        } else if (leftClip < 0) {\r\n            newLeft = pos['right'];\r\n        } else if (rightClip > window.innerWidth) {\r\n            newLeft = pos['left'];\r\n        }\r\n\r\n        as.left = `${newLeft}px`;\r\n    }\r\n\r\n    _updateOutput() {\r\n\r\n        // Check if component is present\r\n        if (this._root.interaction.type()) {\r\n\r\n            this._root.interaction.result.value = (() => {\r\n\r\n                // Construct function name and call if present\r\n                const method = 'to' + this._root.interaction.type().getAttribute('data-type');\r\n                return typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\r\n            })();\r\n        }\r\n\r\n        // Fire listener if initialization is finish\r\n        if (!this._initializingActive) {\r\n            this.options.onChange(this._color, this);\r\n        }\r\n    }\r\n\r\n    _saveColor() {\r\n        const {preview, button} = this._root;\r\n\r\n        // Change preview and current color\r\n        const cssRGBaString = this._color.toRGBA().toString();\r\n        preview.lastColor.style.background = cssRGBaString;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!this.options.useAsButton) {\r\n            button.style.background = cssRGBaString;\r\n        }\r\n\r\n        // User changed the color so remove the clear clas\r\n        button.classList.remove('clear');\r\n\r\n        // Save last color\r\n        this._lastColor = this._color.clone();\r\n\r\n        // Fire listener\r\n        if (!this._initializingActive) {\r\n            this.options.onSave(this._color, this);\r\n        }\r\n    }\r\n\r\n    _clearColor() {\r\n        const {_root, options} = this;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!options.useAsButton) {\r\n            _root.button.style.background = 'rgba(255, 255, 255, 0.4)';\r\n        }\r\n\r\n        _root.button.classList.add('clear');\r\n\r\n        if (!options.showAlways) {\r\n            this.hide();\r\n        }\r\n\r\n        // Fire listener\r\n        options.onSave(null, this);\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys\r\n     */\r\n    destroy() {\r\n        this._eventBindings.forEach(args => _.off(...args));\r\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys and removes\r\n     * the pickr element.\r\n     */\r\n    destroyAndRemove() {\r\n        this.destroy();\r\n\r\n        // Remove element\r\n        const root = this._root.root;\r\n        root.parentElement.removeChild(root);\r\n    }\r\n\r\n    /**\r\n     * Hides the color-picker ui.\r\n     */\r\n    hide() {\r\n        this._root.app.classList.remove('visible');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Shows the color-picker ui.\r\n     */\r\n    show() {\r\n        if (this.options.disabled) return;\r\n        this._root.app.classList.add('visible');\r\n        this._rePositioningPicker();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {boolean} If the color picker is currently open\r\n     */\r\n    isOpen() {\r\n        return this._root.app.classList.contains('visible');\r\n    }\r\n\r\n    /**\r\n     * Set a specific color.\r\n     * @param h Hue\r\n     * @param s Saturation\r\n     * @param v Value\r\n     * @param a Alpha channel (0 - 1)\r\n     * @param silent If the button should not change the color\r\n     * @return true if the color has been accepted\r\n     */\r\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\r\n\r\n        // Deactivate color calculation\r\n        const recalc = this._recalc; // Save state\r\n        this._recalc = false;\r\n\r\n        // Validate input\r\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\r\n            return false;\r\n        }\r\n\r\n        // Short names\r\n        const {hue, opacity, palette} = this.components;\r\n\r\n        // Calculate y position of hue slider\r\n        const hueWrapper = hue.options.wrapper;\r\n        const hueY = hueWrapper.offsetHeight * (h / 360);\r\n        hue.update(0, hueY);\r\n\r\n        // Calculate y position of opacity slider\r\n        const opacityWrapper = opacity.options.wrapper;\r\n        const opacityY = opacityWrapper.offsetHeight * a;\r\n        opacity.update(0, opacityY);\r\n\r\n        // Calculate y and x position of color palette\r\n        const pickerWrapper = palette.options.wrapper;\r\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\r\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\r\n        palette.update(pickerX, pickerY);\r\n\r\n        // Override current color and re-active color calculation\r\n        this._color = new HSVaColor(h, s, v, a);\r\n        this._recalc = recalc; // Restore old state\r\n\r\n        // Update output if recalculation is enabled\r\n        if (this._recalc) {\r\n            this._updateOutput();\r\n        }\r\n\r\n        // Check if call is silent\r\n        if (!silent) {\r\n            this._saveColor();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to parse a string which represents a color.\r\n     * Examples: #fff\r\n     *           rgb 10 10 200\r\n     *           hsva 10 20 5 0.5\r\n     * @param string\r\n     * @param silent\r\n     */\r\n    setColor(string, silent = false) {\r\n\r\n        // Check if null\r\n        if (string === null) {\r\n            this._clearColor();\r\n            return true;\r\n        }\r\n\r\n        const {values, type} = Color.parseToHSV(string);\r\n\r\n        // Check if color is ok\r\n        if (values) {\r\n\r\n            // Change selected color format\r\n            const utype = type.toUpperCase();\r\n            const {options} = this._root.interaction;\r\n            const target = options.find(el => el.getAttribute('data-type') === utype);\r\n\r\n            // Auto select only if not hidden\r\n            if (!target.hidden) {\r\n                for (const el of options) {\r\n                    el.classList[el === target ? 'add' : 'remove']('active');\r\n                }\r\n            }\r\n\r\n            return this.setHSVA(...values, silent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the color _representation.\r\n     * Allowed values are HEX, RGBA, HSVA, HSLA and CMYK\r\n     * @param type\r\n     * @returns {boolean} if the selected type was valid.\r\n     */\r\n    setColorRepresentation(type) {\r\n\r\n        // Force uppercase to allow a case-sensitiv comparison\r\n        type = type.toUpperCase();\r\n\r\n        // Find button with given type and trigger click event\r\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type') === type && !v.click());\r\n    }\r\n\r\n    /**\r\n     * Returns the current color representaion. See setColorRepresentation\r\n     * @returns {*}\r\n     */\r\n    getColorRepresentation() {\r\n        return this._representation;\r\n    }\r\n\r\n    /**\r\n     * @returns HSVaColor Current HSVaColor object.\r\n     */\r\n    getColor() {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * @returns The root HTMLElement with all his components.\r\n     */\r\n    getRoot() {\r\n        return this._root;\r\n    }\r\n\r\n    /**\r\n     * Disable pickr\r\n     */\r\n    disable() {\r\n        this.hide();\r\n        this.options.disabled = true;\r\n        this._root.button.classList.add('disabled');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enable pickr\r\n     */\r\n    enable() {\r\n        this.options.disabled = false;\r\n        this._root.button.classList.remove('disabled');\r\n        return this;\r\n    }\r\n}\r\n\r\nfunction create(options) {\r\n    const {components, strings, useAsButton, swatches} = options;\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n        <div data-key=\"root\" class=\"pickr\">\r\n        \r\n            ${useAsButton ? '' : '<div data-key=\"button\" class=\"pcr-button\"></div>'}\r\n\r\n            <div data-key=\"app\" class=\"pcr-app\">\r\n                <div class=\"pcr-selection\">\r\n                    <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(components.preview)}>\r\n                        <div data-key=\"lastColor\" class=\"pcr-last-color\"></div>\r\n                        <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\r\n                    </div>\r\n\r\n                    <div data-con=\"palette\" class=\"pcr-color-palette\">\r\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n                        <div data-key=\"palette\" class=\"pcr-palette\"></div>\r\n                    </div>\r\n\r\n                    <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(components.hue)}>\r\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n                        <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n                    </div>\r\n\r\n                    <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(components.opacity)}>\r\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n                        <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n                    </div>\r\n                </div>\r\n                \r\n                ${swatches && swatches.length ? `\r\n                <div class=\"swatches\">\r\n                   ${swatches.map(v =>\r\n        `<div data-arr=\"swatches\" data-color=\"${v}\" style=\"background: ${v}\"></div>`\r\n    ).join('')}\r\n                </div> \r\n                ` : ''}\r\n\r\n                <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(components.interaction).length)}>\r\n                    <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(components.interaction.input)}>\r\n\r\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEX\" value=\"HEX\" type=\"button\" ${hidden(components.interaction.hex)}>\r\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBa\" type=\"button\" ${hidden(components.interaction.rgba)}>\r\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLa\" type=\"button\" ${hidden(components.interaction.hsla)}>\r\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVa\" type=\"button\" ${hidden(components.interaction.hsva)}>\r\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(components.interaction.cmyk)}>\r\n\r\n                    <input data-key=\"save\" class=\"pcr-save\" value=\"${strings.save || 'Save'}\" type=\"button\" ${hidden(components.interaction.save)}>\r\n                    <input data-key=\"clear\" class=\"pcr-clear\" value=\"${strings.clear || 'Clear'}\" type=\"button\" ${hidden(components.interaction.clear)}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n\r\n// Static methods\r\nPickr.utils = {\r\n    once: _.once,\r\n    on: _.on,\r\n    off: _.off,\r\n    eventPath: _.eventPath,\r\n    createElementFromString: _.createElementFromString,\r\n    adjustableInputNumbers: _.adjustableInputNumbers,\r\n    removeAttribute: _.removeAttribute,\r\n    createFromTemplate: _.createFromTemplate\r\n};\r\n\r\n// Create instance via method\r\nPickr.create = (options) => new Pickr(options);\r\n\r\n// Export\r\nPickr.version = '0.3.2';\r\nexport default Pickr;\r\n"],"sourceRoot":""}