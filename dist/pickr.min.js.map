{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/libs/nanopop.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","child","children","arr","sub","push","keys","length","eventPath","evt","path","composedPath","target","parentElement","resolveElement","val","Element","split","reduce","pv","cv","ci","a","querySelector","shadowRoot","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","f","q","mod","hsvToHsl","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSVA","toLowerCase","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","hexa","numarize","array","test","undefined","invalid","type","exec","alpha","values","join","raw","substring","HSVaColor","original","next","precision","toFixed","that","toHSVA","toString","toHSLA","toRGBA","toCMYK","rgb","hsvToCmyk","toHEXA","padStart","hsvToHex","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","onstop","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","update","destroy","Selectable","className","onTap","forEach","classList","Nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","getInfo","pos","cached","position","variant","isVertical","rb","eb","positions","vertical","variants","leastApplied","apply","bevs","vars","styleprop","adder","win","ch","sv","rot","v2Ok","v1Ok","components","strings","useAsButton","inline","appClass","theme","lockOpacity","lo","hidden","palette","preview","hue","opacity","interaction","input","save","cancel","clear","int","find","add","contains","Pickr","constructor","init","hide","show","change","changestop","swatchselect","this","disabled","comparison","closeOnScroll","outputPrecision","autoReposition","container","swatches","sliders","default","defaultRepresentation","adjustableNumbers","showAlways","closeWithKey","includes","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","_root","button","app","requestAnimationFrame","cb","setColor","_rePositioningPicker","_representation","setColorRepresentation","_initializingActive","_emit","buildPickr","appendChild","removeChild","parent","nextSibling","insertBefore","remove","parentNode","replaceChild","disable","transition","lastColor","inst","cs","repeat","so","sh","picker","_color","_recalc","_updateOutput","cssRGBaString","background","_swatchColors","currentColor","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","matchMedia","matches","margin","silent","_parseLocalColor","alphaMakesAChange","event","args","_eventListener","callBacks","indexOf","splice","removeSwatch","swatchColor","destroyAndRemove","recalc","string","utype","startsWith","click","getColor","getRoot","enable","utils","libs","version"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,IARlB,CASGK,OAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,yjCC1E9C,MAAMC,EAAKC,EAAcT,KAAK,KAAM,oBAU9BU,EAAMD,EAAcT,KAAK,KAAM,uBAE5C,SAASS,EAAcE,EAAQC,EAAUC,EAAQC,EAAIC,EAAU,IAGvDH,aAAoBI,gBAAkBJ,aAAoBK,SAC1DL,EAAWM,MAAMC,KAAKP,GACdM,MAAME,QAAQR,KACtBA,EAAW,CAACA,IAGXM,MAAME,QAAQP,KACfA,EAAS,CAACA,IAGd,IAAK,MAAMQ,KAAMT,EACb,IAAK,MAAMU,KAAMT,EACbQ,EAAGV,GAAQW,EAAIR,EAAf,GAAoBS,SAAS,GAAUR,IAI/C,OAAOG,MAAMd,UAAUoB,MAAM7C,KAAK8C,UAAW,GAQ1C,SAASC,EAAwBC,GACpC,MAAMC,EAAMC,SAASC,cAAc,OAEnC,OADAF,EAAIG,UAAYJ,EAAKK,OACdJ,EAAIK,kBASR,SAASC,EAAgBb,EAAItC,GAChC,MAAMU,EAAQ4B,EAAGc,aAAapD,GAE9B,OADAsC,EAAGa,gBAAgBnD,GACZU,EAiBJ,SAAS2C,EAAmBC,GA2B/B,OAxBA,SAASC,EAAQC,EAASC,EAAO,IAG7B,MAAMC,EAAMP,EAAgBK,EAAS,QAC/BxC,EAAMmC,EAAgBK,EAAS,QAC/BG,EAAUD,EAAOD,EAAKC,GAAO,GAAMD,EAGzCzC,IAAQyC,EAAKzC,GAAOwC,GACpB,IAAK,MAAMI,KAASzB,MAAMC,KAAKoB,EAAQK,UAAW,CAC9C,MAAMC,EAAMX,EAAgBS,EAAO,QAC7BG,EAAMR,EAAQK,EAAOE,EAAM,GAAKH,GAElCG,IAGCH,EAAQG,KAASH,EAAQG,GAAO,KAC5BE,KAAK7D,OAAO8D,KAAKF,GAAKG,OAASH,EAAMH,GAIlD,OAAOH,EAGJF,CAAQZ,EAAwBW,IAQpC,SAASa,EAAUC,GACtB,IAAIC,EAAOD,EAAIC,MAASD,EAAIE,cAAgBF,EAAIE,eAChD,GAAID,EAAM,OAAOA,EAEjB,IAAI/B,EAAK8B,EAAIG,OAAOC,cAEpB,IADAH,EAAO,CAACD,EAAIG,OAAQjC,GACbA,EAAKA,EAAGkC,eAAeH,EAAKL,KAAK1B,GAGxC,OADA+B,EAAKL,KAAKlB,SAAUzD,QACbgF,EAQJ,SAASI,EAAeC,GAC3B,OAAIA,aAAeC,QACRD,EACe,iBAARA,EACPA,EAAIE,MAAM,OAAOC,OAAO,CAACC,EAAIC,EAAIC,EAAIC,KACxCH,EAAKA,EAAGI,cAAcH,GACfC,EAAKC,EAAEf,OAAS,EAAIY,EAAGK,WAAaL,GAC5ChC,UAGA,KAQJ,SAASsC,EAAuB9C,EAAI+C,EAASC,IAAKA,IAErD,SAASC,EAAaC,GAClB,MAAMC,EAAO,CAAC,KAAO,IAAM,IAAMC,OAAOF,EAAEG,UAAwB,EAAZH,EAAEI,WAAiBJ,EAAEK,OAAS,EAAI,GAAK,GAE7F,IAAIC,EAAQ,EACRnE,EAAMW,EAAGyD,eACbzD,EAAG5B,MAAQ4B,EAAG5B,MAAMsF,QAAQ,UAAW,CAACV,EAAG7F,IAGnCA,GAAKkC,GAAOlC,EAAI6F,EAAEpB,QAAUvC,GAC5BA,EAAMlC,EACC4F,EAAOK,OAAOJ,GAAIG,EAAKK,KAGlCA,IACOR,IAGXhD,EAAG2D,QACH3D,EAAG4D,kBAAkBvE,EAAKA,GAG1B6D,EAAEW,iBACF7D,EAAG8D,cAAc,IAAIC,MAAM,UAI/B5E,EAAGa,EAAI,QAAS,IAAMb,EAAGpC,OAAQ,QAASkG,EAAc,CAACe,SAAS,KAClE7E,EAAGa,EAAI,OAAQ,IAAMX,EAAItC,OAAQ,QAASkG,ICjL9C,MAAM,IAACgB,EAAD,IAAMC,EAAN,MAAWC,EAAX,MAAkBC,GAASC,KA0B1B,SAASC,EAASC,EAAGrF,EAAG8D,GAE3B9D,GAAK,IACL8D,GAAK,IAEL,MAAM7F,EAAIgH,EAJVI,EAAKA,EAAI,IAAO,GAMVC,EAAID,EAAIpH,EACR8B,EAAI+D,GAAK,EAAI9D,GACbuF,EAAIzB,GAAK,EAAIwB,EAAItF,GACjBb,EAAI2E,GAAK,GAAK,EAAIwB,GAAKtF,GAEvBwF,EAAMvH,EAAI,EAKhB,MAAO,CACC,IALE,CAAC6F,EAAGyB,EAAGxF,EAAGA,EAAGZ,EAAG2E,GAAG0B,GAMrB,IALE,CAACrG,EAAG2E,EAAGA,EAAGyB,EAAGxF,EAAGA,GAAGyF,GAMrB,IALE,CAACzF,EAAGA,EAAGZ,EAAG2E,EAAGA,EAAGyB,GAAGC,IA0D1B,SAASC,EAASJ,EAAGrF,EAAG8D,GAG3B,MAAM5F,GAAK,GAFX8B,GAAK,OAAK8D,GAAK,KAES,EAYxB,OAVU,IAAN5F,IAEI8B,EADM,IAAN9B,EACI,EACGA,EAAI,GACP8B,EAAI8D,GAAS,EAAJ5F,GAET8B,EAAI8D,GAAK,EAAQ,EAAJ5F,IAIlB,CACHmH,EACI,IAAJrF,EACI,IAAJ9B,GAWR,SAASwH,EAAS3G,EAAG4G,EAAGC,GAGpB,IAAIP,EAAGrF,EAAG8D,EACV,MAAM+B,EAASd,EAHfhG,GAAK,IAAK4G,GAAK,IAAKC,GAAK,KAInBE,EAASd,EAAIjG,EAAG4G,EAAGC,GACnBG,EAAQD,EAASD,EAGvB,GAAc,IAAVE,EACAV,EAAIrF,EAAI,MACL,CACHA,EAAI+F,EAAQD,EACZ,MAAME,IAAQF,EAAS/G,GAAK,EAAMgH,EAAQ,GAAMA,EAC1CE,IAAQH,EAASH,GAAK,EAAMI,EAAQ,GAAMA,EAC1CG,IAAQJ,EAASF,GAAK,EAAMG,EAAQ,GAAMA,EAE5ChH,IAAM+G,EACNT,EAAIa,EAAKD,EACFN,IAAMG,EACbT,EAAK,EAAI,EAAKW,EAAKE,EACZN,IAAME,IACbT,EAAK,EAAI,EAAKY,EAAKD,GAGnBX,EAAI,EACJA,GAAK,EACEA,EAAI,IACXA,GAAK,GAIb,MAAO,CACC,IAAJA,EACI,IAAJrF,EACI,KA3BR8D,EAAIgC,IAuCR,SAASK,EAAU7H,EAAGD,EAAG+H,EAAGC,GAUxB,OARAhI,GAAK,IACL+H,GAAK,IAOE,IAAIV,EAJ+B,KAA/B,EAAIX,EAAI,GALnBzG,GAAK,MAKsB,GAF3B+H,GAAK,MAE+BA,IACM,KAA/B,EAAItB,EAAI,EAAG1G,GAAK,EAAIgI,GAAKA,IACM,KAA/B,EAAItB,EAAI,EAAGqB,GAAK,EAAIC,GAAKA,MAYxC,SAASC,EAASjB,EAAGrF,EAAG9B,GAOpB,OANA8B,GAAK,IAME,CAACqF,EAFI,GAFZrF,IADA9B,GAAK,KACI,GAAMA,EAAI,EAAIA,IAEFA,EAAI8B,GAAM,IACX,KAAT9B,EAAI8B,IASnB,SAASuG,EAASC,GACd,OAAOd,KAAYc,EAAIC,MAAM,SAASC,IAAI5C,GAAK6C,SAAS7C,EAAG,MASxD,SAAS8C,EAAY9E,GAGxBA,EAAMA,EAAI2E,MAAM,eAxNpB,SAA0BjI,GAGtB,GAA2B,UAAvBA,EAAKqI,cACL,MAAO,UAGX,MAAMC,EAAMxF,SAASC,cAAc,UAAUwF,WAAW,MAExD,OADAD,EAAIE,UAAYxI,EACS,YAAlBsI,EAAIE,UAA0B,KAAOF,EAAIE,UA+MfC,CAAiBnF,GAAOA,EAGzD,MAAMoF,EAAQ,CACVC,KAAM,6DACNC,KAAM,wEACNC,KAAM,wEACNC,KAAM,wEACNC,KAAM,4DASJC,EAAWC,GAASA,EAAMf,IAAI5C,GAAK,oBAAoB4D,KAAK5D,GAAKI,OAAOJ,QAAK6D,GAEnF,IAAIlB,EACJmB,EAAS,IAAK,MAAMC,KAAQX,EAAO,CAG/B,KAAMT,EAAQS,EAAMW,GAAMC,KAAKhG,IAC3B,SAGJ,MAAMiG,IAAUtB,EAAM,GAGtB,OAAQoB,GACJ,IAAK,OAAQ,CACT,MAAO,CAAEvJ,EAAGD,EAAG+H,EAAGC,GAAKmB,EAASf,GAEhC,GAAInI,EAAI,KAAOD,EAAI,KAAO+H,EAAI,KAAOC,EAAI,IACrC,MAAMuB,EAEV,MAAO,CAACI,OAAQ7B,EAAU7H,EAAGD,EAAG+H,EAAGC,GAAIwB,QAE3C,IAAK,OAAQ,CACT,MAAO,CAAC,CAAF,CAAO9I,EAAG4G,EAAGC,EAAGnC,GAAK+D,EAASf,GAEpC,GAAI1H,EAAI,KAAO4G,EAAI,KAAOC,EAAI,KAAOnC,EAAI,GAAKA,EAAI,GAAMsE,KAAWtE,EAC/D,MAAMmE,EAEV,MAAO,CAACI,OAAQ,IAAItC,EAAS3G,EAAG4G,EAAGC,GAAInC,GAAIA,IAAGoE,QAElD,IAAK,OAAQ,CACT,IAAK,CAAErB,GAAOC,EAEK,IAAfD,EAAI9D,QAA+B,IAAf8D,EAAI9D,SACxB8D,EAAMA,EAAIpD,MAAM,IAAIsD,IAAI5C,GAAKA,EAAIA,GAAGmE,KAAK,KAG7C,MAAMC,EAAM1B,EAAI2B,UAAU,EAAG,GAC7B,IAAI1E,EAAI+C,EAAI2B,UAAU,GAKtB,OAFA1E,EAAIA,EAAKkD,SAASlD,EAAG,IAAM,SAAOkE,EAE3B,CAACK,OAAQ,IAAIzB,EAAS2B,GAAMzE,GAAIA,IAAGoE,QAE9C,IAAK,OAAQ,CACT,MAAO,CAAC,CAAF,CAAOxC,EAAGrF,EAAG9B,EAAGuF,GAAK+D,EAASf,GAEpC,GAAIpB,EAAI,KAAOrF,EAAI,KAAO9B,EAAI,KAAOuF,EAAI,GAAKA,EAAI,GAAMsE,KAAWtE,EAC/D,MAAMmE,EAEV,MAAO,CAACI,OAAQ,IAAI1B,EAASjB,EAAGrF,EAAG9B,GAAIuF,GAAIA,IAAGoE,QAElD,IAAK,OAAQ,CACT,MAAO,CAAC,CAAF,CAAOxC,EAAGrF,EAAG8D,EAAGL,GAAK+D,EAASf,GAEpC,GAAIpB,EAAI,KAAOrF,EAAI,KAAO8D,EAAI,KAAOL,EAAI,GAAKA,EAAI,GAAMsE,KAAWtE,EAC/D,MAAMmE,EAEV,MAAO,CAACI,OAAQ,CAAC3C,EAAGrF,EAAG8D,EAAGL,GAAIA,IAAGoE,UAK7C,MAAO,CAACG,OAAQ,KAAMH,KAAM,MC3SzB,SAASO,EAAU/C,EAAI,EAAGrF,EAAI,EAAG8D,EAAI,EAAGL,EAAI,GAC/C,MAAMI,EAAS,CAACwE,EAAUC,IAAS,CAACC,GAAY,IACrCD,GAAMC,EAAYF,EAAS3B,IAAI5C,GAAKI,OAAOJ,EAAE0E,QAAQD,KAAeF,GAGzEI,EAAO,CACTpD,IAAGrF,IAAG8D,IAAGL,IAETiF,SACI,MAAMpB,EAAO,CAACmB,EAAKpD,EAAGoD,EAAKzI,EAAGyI,EAAK3E,EAAG2E,EAAKhF,GAE3C,OADA6D,EAAKqB,SAAW9E,EAAOyD,EAAMhF,GAAO,QAAJ,OAAYA,EAAI,GAAhB,aAAuBA,EAAI,GAA3B,cAAmCA,EAAI,GAAvC,cAA+CmG,EAAKhF,EAApD,MACzB6D,GAGXsB,SACI,MAAMvB,EAAO,IAAI5B,EAASgD,EAAKpD,EAAGoD,EAAKzI,EAAGyI,EAAK3E,GAAI2E,EAAKhF,GAExD,OADA4D,EAAKsB,SAAW9E,EAAOwD,EAAM/E,GAAO,QAAJ,OAAYA,EAAI,GAAhB,aAAuBA,EAAI,GAA3B,cAAmCA,EAAI,GAAvC,cAA+CmG,EAAKhF,EAApD,MACzB4D,GAGXwB,SACI,MAAMzB,EAAO,IAAIhC,EAASqD,EAAKpD,EAAGoD,EAAKzI,EAAGyI,EAAK3E,GAAI2E,EAAKhF,GAExD,OADA2D,EAAKuB,SAAW9E,EAAOuD,EAAM9E,GAAO,QAAJ,OAAYA,EAAI,GAAhB,aAAuBA,EAAI,GAA3B,aAAkCA,EAAI,GAAtC,aAA6CmG,EAAKhF,EAAlD,MACzB2D,GAGX0B,SACI,MAAM3B,EDsCX,SAAmB9B,EAAGrF,EAAG8D,GAC5B,MAAMiF,EAAM3D,EAASC,EAAGrF,EAAG8D,GACrB/E,EAAIgK,EAAI,GAAK,IACbpD,EAAIoD,EAAI,GAAK,IACbnD,EAAImD,EAAI,GAAK,IAEnB,IAAI1C,EAAG/H,EAAGD,EAAG+H,EAQb,MAAO,CACC,KALR9H,EAAU,KAFV+H,EAAItB,EAAI,EAAIhG,EAAG,EAAI4G,EAAG,EAAIC,IAEZ,GAAK,EAAI7G,EAAIsH,IAAM,EAAIA,IAM7B,KALRhI,EAAU,IAANgI,EAAU,GAAK,EAAIV,EAAIU,IAAM,EAAIA,IAM7B,KALRD,EAAU,IAANC,EAAU,GAAK,EAAIT,EAAIS,IAAM,EAAIA,IAM7B,IAAJA,GCxDiB2C,CAAUP,EAAKpD,EAAGoD,EAAKzI,EAAGyI,EAAK3E,GAE5C,OADAqD,EAAKwB,SAAW9E,EAAOsD,EAAM7E,GAAO,QAAJ,OAAYA,EAAI,GAAhB,cAAwBA,EAAI,GAA5B,cAAoCA,EAAI,GAAxC,cAAgDA,EAAI,GAApD,OACzB6E,GAGX8B,SACI,MAAMzC,EDmBX,SAAkBnB,EAAGrF,EAAG8D,GAC3B,OAAOsB,EAASC,EAAGrF,EAAG8D,GAAG4C,IAAI5C,GACzBoB,EAAMpB,GAAG6E,SAAS,IAAIO,SAAS,EAAG,MCrBlBC,CAASV,EAAKpD,EAAGoD,EAAKzI,EAAGyI,EAAK3E,GAIpCiE,EAAQU,EAAKhF,GAAK,EAAI,GAAKS,QAAiB,IAATuE,EAAKhF,GAAS+E,QAAQ,IAC1DG,SAAS,IACTS,cAAcF,SAAS,EAAG,KAI/B,OAFAnB,GAASvB,EAAIhE,KAAKuF,GAClBvB,EAAImC,SAAW,IAAM,IAAN,OAAUnC,EAAIyB,KAAK,IAAImB,eAC/B5C,GAGX6C,MAAO,IAAMjB,EAAUK,EAAKpD,EAAGoD,EAAKzI,EAAGyI,EAAK3E,EAAG2E,EAAKhF,IAGxD,OAAOgF,ECrDX,MAAMa,EAAQxF,GAAKqB,KAAKH,IAAIG,KAAKJ,IAAIjB,EAAG,GAAI,GAC7B,SAASyF,EAASC,GAE7B,MAAMf,EAAO,CAGTjI,QAAS7B,OAAO8K,OAAO,CACnBC,KAAM,KACNC,SAAU,IAAM,EAChBC,OAAQ,IAAM,GACfJ,GAEHK,UAAUjH,GACNkH,EAAKxI,SAAU,CAAC,UAAW,WAAY,eAAgBmH,EAAKsB,UAC5DD,EAAKxI,SAAU,CAAC,YAAa,aAAcmH,EAAKuB,UAGhDpH,EAAI+B,iBAGJ8D,EAAKuB,SAASpH,IAGlBoH,SAASpH,GACL,MAAOpC,SAAS,KAACkJ,GAAX,MAAkBO,GAASxB,GAC3B,QAACzG,EAAD,QAAUkI,GAAW1J,EACrBoF,EAAIsE,EAAQC,wBAElB,IAAIC,EAAI,EAAGhE,EAAI,EACf,GAAIxD,EAAK,CACL,MAAMyH,EAAQzH,GAAOA,EAAI0H,SAAW1H,EAAI0H,QAAQ,GAChDF,EAAIxH,GAAOyH,GAASzH,GAAK2H,QAAU,EACnCnE,EAAIxD,GAAOyH,GAASzH,GAAK4H,QAAU,EAG/BJ,EAAIxE,EAAE6E,KAAML,EAAIxE,EAAE6E,KACbL,EAAIxE,EAAE6E,KAAO7E,EAAE8E,QAAON,EAAIxE,EAAE6E,KAAO7E,EAAE8E,OAC1CtE,EAAIR,EAAE+E,IAAKvE,EAAIR,EAAE+E,IACZvE,EAAIR,EAAE+E,IAAM/E,EAAEgF,SAAQxE,EAAIR,EAAE+E,IAAM/E,EAAEgF,QAG7CR,GAAKxE,EAAE6E,KACPrE,GAAKR,EAAE+E,SACAV,IACPG,EAAIH,EAAMG,EAAIxE,EAAE8E,MAChBtE,EAAI6D,EAAM7D,EAAIR,EAAEgF,QAGP,MAATlB,IACA1H,EAAQ6I,MAAMJ,KAAd,eAA6BL,EAAIxE,EAAE8E,MAAQ,IAA3C,eAAqD1I,EAAQ8I,YAAc,EAA3E,QAGS,MAATpB,IACA1H,EAAQ6I,MAAMF,IAAd,eAA4BvE,EAAIR,EAAEgF,OAAS,IAA3C,eAAqD5I,EAAQ+I,aAAe,EAA5E,QAGJtC,EAAKwB,MAAQ,CAACG,EAAGA,EAAIxE,EAAE8E,MAAOtE,EAAGA,EAAIR,EAAEgF,QACvC,MAAMI,EAAK1B,EAAMc,EAAIF,EAAQY,aACvBG,EAAK3B,EAAMlD,EAAI8D,EAAQa,cAE7B,OAAQrB,GACJ,IAAK,IACD,OAAOlJ,EAAQmJ,SAASqB,GAC5B,IAAK,IACD,OAAOxK,EAAQmJ,SAASsB,GAC5B,QACI,OAAOzK,EAAQmJ,SAASqB,EAAIC,KAIxClB,WACItB,EAAKjI,QAAQoJ,SACbE,EAAMxI,SAAU,CAAC,UAAW,WAAY,eAAgBmH,EAAKsB,UAC7DD,EAAMxI,SAAU,CAAC,YAAa,aAAcmH,EAAKuB,WAGrDkB,UACIzC,EAAKuB,YAGTmB,OAAOf,EAAI,EAAGhE,EAAI,GACd,MAAM,KAACqE,EAAD,IAAOE,EAAP,MAAYD,EAAZ,OAAmBE,GAAUnC,EAAKjI,QAAQ0J,QAAQC,wBAE9B,MAAtB1B,EAAKjI,QAAQkJ,OACbtD,EAAIgE,GAGR3B,EAAKuB,SAAS,CACVO,QAASE,EAAOC,EAAQN,EACxBI,QAASG,EAAMC,EAASxE,KAIhCgF,UACI,MAAM,QAAC5K,EAAD,UAAUqJ,GAAapB,EAC7BqB,EAAM,CAACtJ,EAAQ0J,QAAS1J,EAAQwB,SAAU,YAAa6H,GACvDC,EAAM,CAACtJ,EAAQ0J,QAAS1J,EAAQwB,SAAU,aAAc6H,EAAW,CAC/D/E,SAAS,OAMf,QAACtE,EAAD,UAAUqJ,GAAapB,EAM7B,OALAqB,EAAK,CAACtJ,EAAQ0J,QAAS1J,EAAQwB,SAAU,YAAa6H,GACtDC,EAAK,CAACtJ,EAAQ0J,QAAS1J,EAAQwB,SAAU,aAAc6H,EAAW,CAC9D/E,SAAS,IAGN2D,EC7GI,SAAS4C,EAAW7B,EAAM,IACrCA,EAAM7K,OAAO8K,OAAO,CAChBE,SAAU,IAAM,EAChB2B,UAAW,GACXjL,SAAU,IACXmJ,GAEH,MAAM+B,EAAQzB,EAAKN,EAAInJ,SAAU,QAASuC,IACtC4G,EAAInJ,SAASmL,QAAQxH,GACjBA,EAAEyH,UAAU7I,EAAIG,SAAWiB,EAAI,MAAQ,UAAUwF,EAAI8B,YAGzD9B,EAAIG,SAAS/G,KAGjB,MAAO,CACHwI,QAAS,IAAMtB,KAASyB,ICTjB,SAASG,GAAQ,GAAC5K,EAAD,UAAK6K,EAAL,QAAgBC,EAAU,IACtD,MAAMC,EAAa,CAACC,MAAO,MAAOC,OAAQ,MAAOC,IAAK,OAChDC,EAAa,CAACtB,IAAK,OAAQuB,MAAO,OAAQC,OAAQ,OAAQ1B,KAAM,QAEhE2B,EAAU,EAAEnC,EAAQ,KAAO,CAACoC,EAAKC,EAASrC,EAAMoC,MAClD,GAAIC,EAAQ,OAAOA,EACnB,MAAOC,EAAUC,EAAU,UAAYH,EAAIjJ,MAAM,KAC3CqJ,EAA2B,QAAbF,GAAmC,WAAbA,EAE1C,OAAOtC,EAAMoC,GAAO,CAChBE,WACAC,UACAC,eARQ,GAYhB,MAAO,CACHtB,OAAOkB,GACH,MAAM,SAACE,EAAD,QAAWC,EAAX,WAAoBC,GAAcL,EAAQC,GAC1CK,EAAKf,EAAUxB,wBACfwC,EAAK7L,EAAGqJ,wBAERyC,EAAYC,GAAYA,EAAW,CACrC1N,EAAGuN,EAAG/B,IAAMgC,EAAG/B,OAASgB,EACxBhG,EAAG8G,EAAGP,OAASP,GACf,CACA7M,EAAG2N,EAAGR,MAAQN,EACd1N,EAAGwO,EAAGjC,KAAOkC,EAAGjC,MAAQkB,GAGtBkB,EAAWD,GAAYA,EAAW,CACpC7M,EAAG0M,EAAGjC,KAAOiC,EAAGhC,MAAQiC,EAAGjC,MAC3BrM,GAAKsO,EAAGjC,MAAQ,GAAMgC,EAAGjC,KAAOiC,EAAGhC,MAAQ,GAC3C1G,EAAG0I,EAAGjC,MACN,CACAzK,EAAG0M,EAAGP,OAASQ,EAAG/B,OAClBvM,EAAGqO,EAAGP,OAASO,EAAG9B,OAAS,EAAI+B,EAAG/B,OAAS,EAC3C5G,EAAG0I,EAAGP,OAASO,EAAG9B,QAGhBmC,EAAe,GAErB,SAASC,EAAMC,EAAMC,EAAMC,GACvB,MAAMN,EAAyB,QAAdM,EACXC,EAAQP,EAAWF,EAAG/B,OAAS+B,EAAGjC,MAClC2C,EAAMxP,OAAOgP,EAAW,cAAgB,cAE9C,IAAK,MAAMS,KAAML,EAAM,CACnB,MAAMnJ,EAAIoJ,EAAKI,GACTC,EAAKR,EAAaI,GAAb,UAA6BrJ,EAA7B,MAEX,GAAIA,EAAI,GAAMA,EAAIsJ,EAASC,EAEvB,OADAvM,EAAG+J,MAAMsC,GAAaI,GACf,EAIf,OAAO,EAGX,IAAK,MAAMC,IAAO,CAACf,GAAaA,GAAa,CACzC,MAAMgB,EAAOT,EAAMf,EAAWM,GAAWK,EAAUY,GAAMA,EAAM,MAAQ,QACjEE,EAAOV,EAAMnB,EAAWW,GAAUM,EAASU,GAAMA,EAAM,OAAS,OAEtE,GAAIC,GAAQC,EACR,OAIR5M,EAAG+J,MAAMJ,KAAOsC,EAAatC,KAC7B3J,EAAG+J,MAAMF,IAAMoC,EAAapC,MC7EzB,QAAEgD,WAAYrP,EAAGsP,QAAS5N,EAAG6N,cAAaC,SAAQC,WAAUC,QAAOC,YAAaC,MAC3F,MAAMC,EAASjM,GAAOA,EAAM,GAAK,8BAE3B3E,EAAOuM,EAAA,6DAGP+D,EAAc,GAAK,mEAHZ,sDAKwBE,GAAY,GALpC,yBAKuDC,EALvD,aAKiEF,EAAS,0BAA4B,GALtG,mDAMsBK,EAAO7P,EAAE8P,SAN/B,wEAO2CD,EAAO7P,EAAE+P,SAPpD,scAiBuCF,EAAO7P,EAAEgQ,KAjBhD,8NAsB2CH,EAAO7P,EAAEiQ,SAtBpD,6NA4BoBjQ,EAAE8P,QAAU,GAAK,YA5BrC,kGA8B2CD,EAAOxP,OAAO8D,KAAKnE,EAAEkQ,aAAa9L,QA9B7E,iGA+BoEyL,EAAO7P,EAAEkQ,YAAYC,OA/BzF,2FAiC4DP,EAAK,MAAQ,OAjCzE,2BAiCkGC,EAAO7P,EAAEkQ,YAAYhI,KAjCvH,yFAkC4D0H,EAAK,MAAQ,OAlCzE,2BAkCkGC,EAAO7P,EAAEkQ,YAAYpH,MAlCvH,yFAmC4D8G,EAAK,MAAQ,OAnCzE,2BAmCkGC,EAAO7P,EAAEkQ,YAAYnH,MAnCvH,yFAoC4D6G,EAAK,MAAQ,OApCzE,2BAoCkGC,EAAO7P,EAAEkQ,YAAYlH,MApCvH,6GAqCgF6G,EAAO7P,EAAEkQ,YAAYrH,MArCrG,uEAuCwCnH,EAAE0O,MAAQ,OAvClD,2BAuC2EP,EAAO7P,EAAEkQ,YAAYE,MAvChG,yEAwC4C1O,EAAE2O,QAAU,SAxCxD,2BAwCmFR,EAAO7P,EAAEkQ,YAAYG,QAxCxG,uEAyC0C3O,EAAE4O,OAAS,QAzCrD,2BAyC+ET,EAAO7P,EAAEkQ,YAAYI,OAzCpG,4DA+CPC,EAAMtR,EAAKiR,YAOjB,OAJAK,EAAIrO,QAAQsO,KAAKpQ,IAAMA,EAAEyP,SAAWzP,EAAE+M,UAAUsD,IAAI,WAGpDF,EAAIhH,KAAO,IAAMgH,EAAIrO,QAAQsO,KAAK9K,GAAKA,EAAEyH,UAAUuD,SAAS,WACrDzR,G,wHChDX,MAAM0R,EA0BFC,YAAY1F,GAAK,8BAvBK,GAuBL,kBApBP,GAoBO,gBAjBRpB,KAiBQ,oBAhBJA,KAgBI,uBAfD,IAeC,wBAZA,CACb+G,KAAM,GACNT,KAAM,GACNU,KAAM,GACNC,KAAM,GACNT,MAAO,GACPU,OAAQ,GACRC,WAAY,GACZZ,OAAQ,GACRa,aAAc,KAMdC,KAAKjP,QAAUgJ,EAAM7K,OAAO8K,OAAO,CAC/BsE,SAAU,KACVC,MAAO,UACPH,aAAa,EACb6B,UAAU,EACVC,YAAY,EACZC,eAAe,EACfC,gBAAiB,EACjB5B,aAAa,EACb6B,gBAAgB,EAChBC,UAAW,OACXpC,WAAY,CACRa,YAAa,IAGjBZ,QAAS,GACToC,SAAU,KACVlC,QAAQ,EACRmC,QAAS,KAETC,QAAS,UACTC,sBAAuB,KACvB5D,SAAU,gBACV6D,mBAAmB,EACnBC,YAAY,EAEZC,aAAc,UACf9G,GAEH,MAAM,SAACwG,EAAD,WAAWrC,EAAX,MAAuBK,EAAvB,QAA8BiC,EAA9B,YAAuChC,GAAezE,EAExD,CAAC,OAAQ,YAAY+G,SAASvC,KAAWiC,IACzCzG,EAAIyG,QAAU,KAIbtC,EAAWa,cACZb,EAAWa,YAAc,IAI7B,MAAM,QAACH,EAAD,QAAUE,EAAV,IAAmBD,EAAnB,QAAwBF,GAAWT,EACzCA,EAAWY,SAAYN,GAAeM,EACtCZ,EAAWS,QAAUA,GAAWC,GAAWE,GAAWD,EAGtDmB,KAAKe,YACLf,KAAKgB,mBACLhB,KAAKiB,cACLjB,KAAKkB,cAGDX,GAAYA,EAAStN,QACrBsN,EAASxE,QAAQoF,GAASnB,KAAKoB,UAAUD,IAI7CnB,KAAKqB,SAAWpF,EAAQ,CACpBC,UAAW8D,KAAKsB,MAAMC,OACtBlQ,GAAI2O,KAAKsB,MAAME,MAInB,MAAM,IAACA,GAAOxB,KAAKsB,MACbtI,EAAOgH,KACbyB,sBAAuB,SAASC,IAE5B,IAAKF,EAAInG,aAAemG,EAAIjO,gBAAkBwG,EAAIuG,UAC9C,OAAOmB,sBAAsBC,GAIjC1I,EAAK2I,SAAS5H,EAAI0G,SAClBzH,EAAK4I,uBAGD7H,EAAI2G,wBACJ1H,EAAK6I,gBAAkB9H,EAAI2G,sBAC3B1H,EAAK8I,uBAAuB9I,EAAK6I,kBAIjC9H,EAAI6G,YACJ5H,EAAK4G,OAIT5G,EAAK+I,qBAAsB,EAC3B/I,EAAKgJ,MAAM,UAKnBjB,YACI,MAAMhH,EAAMiG,KAAKjP,QAGjB,IAAI,MAAMqH,IAAQ,CAAC,KAAM,aACrB2B,EAAI3B,GAAQiC,EAAiBN,EAAI3B,IAKrC4H,KAAKsB,MAAQW,EAAWlI,GAGpBA,EAAIqE,cACJ4B,KAAKsB,MAAMC,OAASxH,EAAI1I,IAG5B0I,EAAIuG,UAAU4B,YAAYlC,KAAKsB,MAAMxT,MAGzCoT,cACI,MAAMnH,EAAMiG,KAAKjP,QACXjD,EAAOkS,KAAKsB,MAKlB,GAFAvH,EAAIuG,UAAU6B,YAAYrU,EAAKA,MAE3BiM,EAAIsE,OAAQ,CACZ,MAAM+D,EAASrI,EAAI1I,GAAGkC,cAElBwG,EAAI1I,GAAGgR,YACPD,EAAOE,aAAaxU,EAAK0T,IAAKzH,EAAI1I,GAAGgR,aAErCD,EAAOF,YAAYpU,EAAK0T,UAG5BzH,EAAIuG,UAAU4B,YAAYpU,EAAK0T,KAI9BzH,EAAIqE,YAIErE,EAAIsE,QACXtE,EAAI1I,GAAGkR,SAFPxI,EAAI1I,GAAGmR,WAAWC,aAAa3U,EAAKA,KAAMiM,EAAI1I,IAM9C0I,EAAIkG,UACJD,KAAK0C,UAIJ3I,EAAImG,aACLpS,EAAKyT,OAAOnG,MAAMuH,WAAa,OAC1B5I,EAAIqE,cACLtQ,EAAK8Q,QAAQgE,UAAUxH,MAAMuH,WAAa,SAIlD3C,KAAKL,OAGTqB,mBAGI,MAAM6B,EAAO7C,KACP8C,EAAK9C,KAAKjP,QAAQmN,WAClBsC,GAAWqC,EAAK9R,QAAQyP,SAAW,KAAKuC,OAAO,IAC9CC,EAAIC,GAAMzC,EAAQxJ,MAAM,YAAcwJ,EAAU,GAEjDtC,EAAa,CAEfS,QAAS7E,EAAS,CACdvH,QAASsQ,EAAKvB,MAAM3C,QAAQuE,OAC5BzI,QAASoI,EAAKvB,MAAM3C,QAAQA,QAE5BxE,OAAQ,IAAM0I,EAAKb,MAAM,aAAca,GACvC3I,SAASS,EAAGhE,GACR,IAAKmM,EAAGnE,QAAS,OACjB,MAAM,OAACwE,EAAD,MAAS7B,EAAT,QAAgBvQ,GAAW8R,EAG7BA,EAAKO,UAGLD,EAAO5S,EAAQ,IAAJoK,EAGXwI,EAAO9O,EAAI,IAAU,IAAJsC,EAGjBwM,EAAO9O,EAAI,IAAI8O,EAAO9O,EAAI,GAC1BwO,EAAKQ,iBAIT,MAAMC,EAAgBH,EAAO/J,SAASF,SAAS,GAC/C8G,KAAKzN,QAAQ6I,MAAMmI,WAAaD,EAChCtD,KAAKvF,QAAQW,MAAMmI,WAAnB,0EAC4CJ,EAAOnP,EADnD,mFAEoCmP,EAAOvN,EAF3C,wBAE4DuN,EAAOnP,EAFnE,kCAE8FmP,EAAOnP,EAFrG,4BAMKjD,EAAQmP,aACToB,EAAMC,OAAOnG,MAAM+F,MAAQmC,EAEtBvS,EAAQqN,cACTkD,EAAM1C,QAAQgE,UAAUxH,MAAM+F,MAAQmC,IAK9C,MAAMxL,EAAOqL,EAAO3J,SAASN,WAC7B,eAA0B2J,EAAKW,cAAe,OAAnC,GAACnS,EAAD,MAAK8P,GAA8B,EAC1C9P,EAAG2K,UAAUlE,IAASqJ,EAAM3H,SAASN,WAAa,MAAQ,UAAU,cAIxEoI,EAAM1C,QAAQ6E,aAAarI,MAAM+F,MAAQmC,EAEpCT,EAAK9R,QAAQmP,YAGdoB,EAAMC,OAAOvF,UAAUuG,OAAO,YAK1C1D,IAAK/E,EAAS,CACVG,KAAa,MAAPgJ,EAAa,IAAM,IACzB1Q,QAASsQ,EAAKvB,MAAMzC,IAAIqE,OACxBzI,QAASoI,EAAKvB,MAAMzC,IAAI6E,OAExBvJ,OAAQ,IAAM0I,EAAKb,MAAM,aAAca,GACvC3I,SAAS7F,GACAyO,EAAGjE,KAAQiE,EAAGnE,UAGfkE,EAAKO,UACLP,EAAKM,OAAOvN,EAAQ,IAAJvB,GAIpB2L,KAAKzN,QAAQ6I,MAAMuI,gBAAnB,cAA4Cd,EAAKM,OAAOvN,EAAxD,gBACAsI,EAAWS,QAAQlD,cAI3BqD,QAAShF,EAAS,CACdG,KAAa,MAAP+I,EAAa,IAAM,IACzBzQ,QAASsQ,EAAKvB,MAAMxC,QAAQoE,OAC5BzI,QAASoI,EAAKvB,MAAMxC,QAAQ4E,OAE5BvJ,OAAQ,IAAM0I,EAAKb,MAAM,aAAca,GACvC3I,SAAS7F,GACAyO,EAAGhE,SAAYgE,EAAGnE,UAGnBkE,EAAKO,UACLP,EAAKM,OAAOnP,EAAI0B,KAAKD,MAAU,IAAJpB,GAAW,KAI1C2L,KAAKzN,QAAQ6I,MAAMmI,WAAnB,wBAAiDV,EAAKM,OAAOnP,EAA7D,KACAkK,EAAWS,QAAQlD,cAI3BmI,WAAYhI,EAAW,CACnBhL,SAAUiS,EAAKvB,MAAMvC,YAAYhO,QACjC8K,UAAW,SAEX3B,SAAS3F,GACLsO,EAAKhB,gBAAkBtN,EAAEjB,OAAOnB,aAAa,aAAawH,cAC1DkJ,EAAKO,SAAWP,EAAKQ,oBAKjCrD,KAAK6D,YAAc3F,EAGvB+C,cACI,MAAM,MAACK,EAAD,QAAQvQ,GAAWiP,KAEnB8D,EAAgB,CAGlBzJ,EAAKiH,EAAMvC,YAAYI,MAAO,QAAS,IAAMa,KAAK+D,eAGlD1J,EAAK,CACDiH,EAAMvC,YAAYG,OAClBoC,EAAM1C,QAAQgE,WACf,QAAS,KACR5C,KAAKgC,MAAM,SAAUhC,MACrBA,KAAKgE,WAAWhE,KAAKiE,WAAWhL,UAAU,KAI9CoB,EAAKiH,EAAMvC,YAAYE,KAAM,QAAS,MACjCe,KAAKkE,eAAiBnT,EAAQ6P,YAAcZ,KAAKL,SAGtDtF,EAAKiH,EAAMvC,YAAYoF,OAAQ,CAAC,QAAS,SAAU5P,IAG3CyL,KAAK2B,SAASpN,EAAEjB,OAAO7D,OAAO,KAAUuQ,KAAK+B,qBAC7C/B,KAAKgC,MAAM,SAAUhC,KAAKmD,QAG9B5O,EAAE6P,6BAIN/J,EAAKiH,EAAMvC,YAAYoF,OAAQ,CAAC,QAAS,QAAS5P,IAC9CyL,KAAKoD,QAAqB,SAAX7O,EAAE6D,KACjB4H,KAAKoD,SAAWpD,KAAKqD,kBAIzBhJ,EAAK,CACDiH,EAAM3C,QAAQA,QACd2C,EAAM3C,QAAQuE,OACd5B,EAAMzC,IAAI6E,OACVpC,EAAMzC,IAAIqE,OACV5B,EAAMxC,QAAQ4E,OACdpC,EAAMxC,QAAQoE,QACf,CAAC,YAAa,cAAe,IAAMlD,KAAKoD,SAAU,IAIzD,IAAKrS,EAAQ6P,WAAY,CACrB,MAAMyD,EAAKtT,EAAQ8P,aAEnBiD,EAAc/Q,KAEVsH,EAAKiH,EAAMC,OAAQ,QAAS,IAAMvB,KAAKsE,SAAWtE,KAAKL,OAASK,KAAKJ,QAGrEvF,EAAKxI,SAAU,QAAS0C,GAAKyL,KAAKsE,WAAa/P,EAAExE,MAAQsU,GAAM9P,EAAEgQ,OAASF,IAAOrE,KAAKL,QAGtFtF,EAAKxI,SAAU,CAAC,aAAc,aAAc0C,IACpCyL,KAAKsE,WAAajK,EAAY9F,GAAGiQ,KAAKnT,GAAMA,IAAOiQ,EAAME,KAAOnQ,IAAOiQ,EAAMC,SAC7EvB,KAAKL,QAEV,CAACpO,SAAS,KAKrB,GAAIR,EAAQ4P,kBAAmB,CAC3B,MAAM8D,EAAS,CACX9M,KAAM,CAAC,IAAK,IAAK,IAAK,GACtBE,KAAM,CAAC,IAAK,IAAK,IAAK,GACtBD,KAAM,CAAC,IAAK,IAAK,IAAK,GACtBF,KAAM,CAAC,IAAK,IAAK,IAAK,MAG1B2C,EAAyBiH,EAAMvC,YAAYoF,OAAQ,CAAClV,EAAGyV,EAAM7P,KACzD,MAAM8P,EAAQF,EAAOzE,KAAK4E,yBAAyBxN,eAEnD,GAAIuN,EAAO,CACP,MAAMpP,EAAMoP,EAAM9P,GAGZgQ,EAAK5V,GAAKsG,GAAO,IAAa,IAAPmP,EAAcA,GAG3C,OAAOG,GAAM,EAAI,EAAIpQ,QAAQoQ,EAAKtP,EAAMsP,EAAKtP,GAAKuP,YAAY,IAElE,OAAO7V,IAKf,GAAI8B,EAAQsP,iBAAmBtP,EAAQsN,OAAQ,CAC3C,IAAI0G,EAAU,KACd,MAAM/L,EAAOgH,KAGb8D,EAAc/Q,KACVsH,EAAKjM,OAAQ,CAAC,SAAU,UAAW,KAC3B4K,EAAKsL,WAEDvT,EAAQoP,eACRnH,EAAK2G,OAGO,OAAZoF,GACAA,EAAUC,WAAW,IAAMD,EAAU,KAAM,KAG3CtD,sBAAsB,SAASwD,IAC3BjM,EAAK4I,uBACQ,OAAZmD,GAAqBtD,sBAAsBwD,OAGhDC,aAAaH,GACbA,EAAUC,WAAW,IAAMD,EAAU,KAAM,QAGpD,CAACxT,SAAS,KAKrByO,KAAKmF,eAAiBrB,EAG1BlC,uBACI,MAAM,QAAC7Q,GAAWiP,KAGlB,IAAKjP,EAAQsN,OAAQ,CACjB,MAAM,IAACmD,GAAOxB,KAAKsB,MAEf8D,WAAW,sBAAsBC,QACjCnW,OAAO8K,OAAOwH,EAAIpG,MAAO,CACrBkK,OAAQ,OACRnK,OAAQ,GAAF,OAAKqG,EAAI9G,wBAAwBS,OAAjC,MACND,IAAK,EACLwB,OAAQ,EACR1B,KAAM,EACNyB,MAAO,KAGXvN,OAAO8K,OAAOwH,EAAIpG,MAAO,CACrBkK,OAAQ,KACR7I,MAAO,KACPvB,IAAK,KACLwB,OAAQ,KACR1B,KAAM,KACNG,OAAQ,OAGZ6E,KAAKqB,SAAS3F,OAAO3K,EAAQ+L,YAKzCuG,gBACI,MAAM,MAAC/B,EAAD,OAAQ6B,EAAR,QAAgBpS,GAAWiP,KAGjC,GAAIsB,EAAMvC,YAAY3G,OAAQ,CAG1B,MAAMzH,EAAS,KAAH,OAAQ2Q,EAAMvC,YAAY3G,OAAOjG,aAAa,cAC1DmP,EAAMvC,YAAYoF,OAAO1U,MAAkC,mBAAnB0T,EAAOxS,GAC3CwS,EAAOxS,KAAUuI,SAASnI,EAAQqP,iBAAmB,IAIxDJ,KAAK+B,qBAAuB/B,KAAKoD,SAClCpD,KAAKgC,MAAM,SAAUmB,GAI7BY,YAAYwB,GAAS,GACjB,MAAM,MAACjE,EAAD,QAAQvQ,GAAWiP,KAGpBjP,EAAQqN,cACTkD,EAAMC,OAAOnG,MAAM+F,MAAQ,uBAG/BG,EAAMC,OAAOvF,UAAUsD,IAAI,SAEtBvO,EAAQ6P,YACTZ,KAAKL,OAGJK,KAAK+B,qBAAwBwD,IAG9BvF,KAAKgC,MAAM,OAAQ,MACnBhC,KAAKgC,MAAM,QAAShC,OAI5BwF,iBAAiBnT,GACb,MAAM,OAACkG,EAAD,KAASH,EAAT,EAAepE,GAAKmD,EAAY9E,IAChC,YAACmM,GAAewB,KAAKjP,QACrB0U,OAA0BvN,IAANlE,GAAyB,IAANA,EAQ7C,OAJIuE,GAA4B,IAAlBA,EAAOtF,SACjBsF,EAAO,QAAKL,GAGT,CACHK,QAAUA,GAAWiG,GAAeiH,EAAsB,KAAOlN,EACjEH,QAIR4J,MAAM0D,KAAUC,GACZ3F,KAAK4F,eAAeF,GAAO3J,QAAQ2F,GAAMA,KAAMiE,EAAM3F,OAGzDxP,GAAGkV,EAAOhE,GAON,MAJkB,mBAAPA,GAAsC,iBAAVgE,GAAsBA,KAAS1F,KAAK4F,gBACvE5F,KAAK4F,eAAeF,GAAO3S,KAAK2O,GAG7B1B,KAGXtP,IAAIgV,EAAOhE,GACP,MAAMmE,EAAY7F,KAAK4F,eAAeF,GAEtC,GAAIG,EAAW,CACX,MAAMhR,EAAQgR,EAAUC,QAAQpE,IAE3B7M,GACDgR,EAAUE,OAAOlR,EAAO,GAIhC,OAAOmL,KAQXoB,UAAUD,GACN,MAAM,OAAC5I,GAAUyH,KAAKwF,iBAAiBrE,GAEvC,GAAI5I,EAAQ,CACR,MAAM,cAACiL,EAAD,MAAgBlC,GAAStB,KACzBmB,EAAQxI,KAAaJ,GAGrBlH,EAAKgJ,EAAA,8CACgC8G,EAAM/H,SAASF,SAAS,GADxD,QAiBX,OAZAoI,EAAMf,SAAS2B,YAAY7Q,GAC3BmS,EAAczQ,KAAK,CAAC1B,KAAI8P,UAGxBnB,KAAKmF,eAAepS,KAChBsH,EAAKhJ,EAAI,QAAS,KACd2O,KAAKgE,WAAW7C,EAAMlI,UAAU,GAChC+G,KAAKgC,MAAM,eAAgBb,GAC3BnB,KAAKgC,MAAM,SAAUb,OAItB,EAGX,OAAO,EAQX6E,aAAanR,GACT,MAAMoR,EAAcjG,KAAKwD,cAAc3O,GAGvC,GAAIoR,EAAa,CACb,MAAM,GAAC5U,GAAM4U,EAKb,OAFAjG,KAAKsB,MAAMf,SAAS4B,YAAY9Q,GAChC2O,KAAKwD,cAAcuC,OAAOlR,EAAO,IAC1B,EAGX,OAAO,EAGXqP,WAAWqB,GAAS,GAChB,MAAM,QAAC3G,EAAD,OAAU2C,GAAUvB,KAAKsB,MAGzBgC,EAAgBtD,KAAKmD,OAAO/J,SAASF,WAC3C0F,EAAQgE,UAAUxH,MAAM+F,MAAQmC,EAG3BtD,KAAKjP,QAAQqN,cACdmD,EAAOnG,MAAM+F,MAAQmC,GAIzB/B,EAAOvF,UAAUuG,OAAO,SAGxBvC,KAAKiE,WAAajE,KAAKmD,OAAOvJ,QAGzBoG,KAAK+B,qBAAwBwD,GAC9BvF,KAAKgC,MAAM,OAAQhC,KAAKmD,QAOhCxH,UACIqE,KAAKmF,eAAepJ,QAAQ4J,GAAQtL,KAASsL,IAE7CzW,OAAO8D,KAAKgN,KAAK6D,aACZ9H,QAAQhM,GAAOiQ,KAAK6D,YAAY9T,GAAK4L,WAO9CuK,mBACIlG,KAAKrE,UACL,MAAM,KAAC7N,EAAD,IAAO0T,GAAOxB,KAAKsB,MAGrBxT,EAAKyF,eACLzF,EAAKyF,cAAc4O,YAAYrU,GAInC0T,EAAIjO,cAAc4O,YAAYX,GAI9BtS,OAAO8D,KAAKgN,MACPjE,QAAQhM,GAAOiQ,KAAKjQ,GAAO,MAMpC4P,OAGI,OAFAK,KAAKsB,MAAME,IAAIxF,UAAUuG,OAAO,WAChCvC,KAAKgC,MAAM,OAAQhC,MACZA,KAMXJ,OAQI,OANKI,KAAKjP,QAAQkP,WACdD,KAAKsB,MAAME,IAAIxF,UAAUsD,IAAI,WAC7BU,KAAK4B,uBACL5B,KAAKgC,MAAM,OAAQhC,OAGhBA,KAMXsE,SACI,OAAOtE,KAAKsB,MAAME,IAAIxF,UAAUuD,SAAS,WAY7CyE,QAAQpO,EAAI,IAAKrF,EAAI,EAAG8D,EAAI,EAAGL,EAAI,EAAGuR,GAAS,GAG3C,MAAMY,EAASnG,KAAKoD,QAIpB,GAHApD,KAAKoD,SAAU,EAGXxN,EAAI,GAAKA,EAAI,KAAOrF,EAAI,GAAKA,EAAI,KAAO8D,EAAI,GAAKA,EAAI,KAAOL,EAAI,GAAKA,EAAI,EACzE,OAAO,EAIXgM,KAAKmD,OAASxK,EAAU/C,EAAGrF,EAAG8D,EAAGL,GAGjC,MAAM,IAAC6K,EAAD,QAAMC,EAAN,QAAeH,GAAWqB,KAAK6D,YAiBrC,OAhBAhF,EAAInD,OAAQ9F,EAAI,KAChBkJ,EAAQpD,OAAO1H,GACf2K,EAAQjD,OAAOnL,EAAI,IAAK,EAAK8D,EAAI,KAG5BkR,GACDvF,KAAKkE,aAILiC,GACAnG,KAAKqD,gBAITrD,KAAKoD,QAAU+C,GACR,EAWXxE,SAASyE,EAAQb,GAAS,GAGtB,GAAe,OAAXa,EAEA,OADApG,KAAK+D,YAAYwB,IACV,EAGX,MAAM,OAAChN,EAAD,KAASH,GAAQ4H,KAAKwF,iBAAiBY,GAG7C,GAAI7N,EAAQ,CAGR,MAAM8N,EAAQjO,EAAKuB,eACb,QAAC5I,GAAWiP,KAAKsB,MAAMvC,YACvBzL,EAASvC,EAAQsO,KAAKhO,GAAMA,EAAGc,aAAa,eAAiBkU,GAGnE,GAAI/S,IAAWA,EAAOoL,OAClB,IAAK,MAAMrN,KAAMN,EACbM,EAAG2K,UAAU3K,IAAOiC,EAAS,MAAQ,UAAU,UAKvD,OADA0M,KAAK8B,uBAAuBuE,GACrBrG,KAAKgE,WAAWzL,EAAQgN,GAGnC,OAAO,EASXzD,uBAAuB1J,GAMnB,OAHAA,EAAOA,EAAKuB,gBAGHqG,KAAKsB,MAAMvC,YAAYhO,QAC3BsO,KAAKhL,GAAKA,EAAElC,aAAa,aAAamU,WAAWlO,KAAU/D,EAAEkS,SAOtE3B,yBACI,OAAO5E,KAAK6B,gBAMhB2E,WACI,OAAOxG,KAAKmD,OAMhBsD,UACI,OAAOzG,KAAKsB,MAMhBoB,UAII,OAHA1C,KAAKL,OACLK,KAAKjP,QAAQkP,UAAW,EACxBD,KAAKsB,MAAMC,OAAOvF,UAAUsD,IAAI,YACzBU,KAMX0G,SAGI,OAFA1G,KAAKjP,QAAQkP,UAAW,EACxBD,KAAKsB,MAAMC,OAAOvF,UAAUuG,OAAO,YAC5BvC,MAKfR,EAAMmH,MAAQtM,EAGdmF,EAAMoH,KAAO,CACTjO,YACAmB,WACAmC,UACAL,cAIJ4D,EAAM1P,OAASiB,GAAW,IAAIyO,EAAMzO,GAGpCyO,EAAMqH,QAAU,QACDrH,e","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a ':ref' attribute will be saved in a object (which will be returned)\r\n * where the value of ':ref' is the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, ':obj');\r\n        const key = removeAttribute(element, ':ref');\r\n        const subtree = con ? (base[con] = {}) : base;\r\n\r\n        // Check and save element\r\n        key && (base[key] = element);\r\n        for (const child of Array.from(element.children)) {\r\n            const arr = removeAttribute(child, ':arr');\r\n            const sub = resolve(child, arr ? {} : subtree);\r\n\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = []))\r\n                    .push(Object.keys(sub).length ? sub : child);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Resolves a HTMLElement by query.\r\n * @param val\r\n * @returns {null|Document|Element}\r\n */\r\nexport function resolveElement(val) {\r\n    if (val instanceof Element) {\r\n        return val;\r\n    } else if (typeof val === 'string') {\r\n        return val.split(/>>/g).reduce((pv, cv, ci, a) => {\r\n            pv = pv.querySelector(cv);\r\n            return ci < a.length - 1 ? pv.shadowRoot : pv;\r\n        }, document);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n","// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n\r\n    // Since invalid color's will be parsed as black, filter them out\r\n    if (name.toLowerCase() === 'black') {\r\n        return '#000000';\r\n    }\r\n\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle === '#000000' ? null : ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    const i = floor(h);\r\n\r\n    const f = h - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n\r\n    const mod = i % 6;\r\n    const r = [v, q, p, p, t, v][mod];\r\n    const g = [t, v, v, q, p, p][mod];\r\n    const b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    const l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        const dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        const dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        const db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100;\r\n    m /= 100;\r\n    y /= 100;\r\n    k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100;\r\n    l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    const ns = (2 * s / (l + s)) * 100;\r\n    const v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSVA(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\r\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    invalid: for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // match[2] does only contain a truly value if rgba, hsla, or hsla got matched\r\n        const alpha = !!match[2];\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                const [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break invalid;\r\n\r\n                return {values: cmykToHsv(c, m, y, k), type};\r\n            }\r\n            case 'rgba': {\r\n                const [, , , r, g, b, a] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || (alpha === !a))\r\n                    break invalid;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\r\n            }\r\n            case 'hexa': {\r\n                let [, hex] = match;\r\n\r\n                if (hex.length === 4 || hex.length === 3) {\r\n                    hex = hex.split('').map(v => v + v).join('');\r\n                }\r\n\r\n                const raw = hex.substring(0, 6);\r\n                let a = hex.substring(6);\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                a = a ? (parseInt(a, 16) / 255) : undefined;\r\n\r\n                return {values: [...hexToHsv(raw), a], a, type};\r\n            }\r\n            case 'hsla': {\r\n                const [, , , h, s, l, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || (alpha === !a))\r\n                    break invalid;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], a, type};\r\n            }\r\n            case 'hsva': {\r\n                const [, , , h, s, v, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || (alpha === !a))\r\n                    break invalid;\r\n\r\n                return {values: [h, s, v, a], a, type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const mapper = (original, next) => (precision = -1) => {\r\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\r\n    };\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v, that.a];\r\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\r\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\r\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            // Check if alpha channel make sense, convert it to 255 number space, convert\r\n            // to hex and pad it with zeros if needet.\r\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                .toString(16)\r\n                .toUpperCase().padStart(2, '0');\r\n\r\n            alpha && hex.push(alpha);\r\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\r\n            return hex;\r\n        },\r\n\r\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\n\nconst clamp = v => Math.max(Math.min(v, 1), 0);\nexport default function Moveable(opt) {\n\n    const that = {\n\n        // Assign default values\n        options: Object.assign({\n            lock: null,\n            onchange: () => 0,\n            onstop: () => 0\n        }, opt),\n\n        _tapstart(evt) {\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\n\n            // Prevent default touch event\n            evt.preventDefault();\n\n            // Trigger\n            that._tapmove(evt);\n        },\n\n        _tapmove(evt) {\n            const {options: {lock}, cache} = that;\n            const {element, wrapper} = options;\n            const b = wrapper.getBoundingClientRect();\n\n            let x = 0, y = 0;\n            if (evt) {\n                const touch = evt && evt.touches && evt.touches[0];\n                x = evt ? (touch || evt).clientX : 0;\n                y = evt ? (touch || evt).clientY : 0;\n\n                // Reset to bounds\n                if (x < b.left) x = b.left;\n                else if (x > b.left + b.width) x = b.left + b.width;\n                if (y < b.top) y = b.top;\n                else if (y > b.top + b.height) y = b.top + b.height;\n\n                // Normalize\n                x -= b.left;\n                y -= b.top;\n            } else if (cache) {\n                x = cache.x * b.width;\n                y = cache.y * b.height;\n            }\n\n            if (lock !== 'h') {\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            if (lock !== 'v') {\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\n            }\n\n            that.cache = {x: x / b.width, y: y / b.height};\n            const cx = clamp(x / wrapper.offsetWidth);\n            const cy = clamp(y / wrapper.offsetHeight);\n\n            switch (lock) {\n                case 'v':\n                    return options.onchange(cx);\n                case 'h':\n                    return options.onchange(cy);\n                default:\n                    return options.onchange(cx, cy);\n            }\n        },\n\n        _tapstop() {\n            that.options.onstop();\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\n        },\n\n        trigger() {\n            that._tapmove();\n        },\n\n        update(x = 0, y = 0) {\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\n\n            if (that.options.lock === 'h') {\n                y = x;\n            }\n\n            that._tapmove({\n                clientX: left + width * x,\n                clientY: top + height * y\n            });\n        },\n\n        destroy() {\n            const {options, _tapstart} = that;\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\n                passive: false\n            });\n        }\n    };\n\n    // Initilize\n    const {options, _tapstart} = that;\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\n        passive: false\n    });\n\n    return that;\n}\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","/**\r\n * Micro positioning-engine\r\n * @param el\r\n * @param reference\r\n * @param pos\r\n * @param padding\r\n * @returns {{update(): void}}\r\n * @constructor\r\n */\r\nexport default function Nanopop({el, reference, padding = 8}) {\r\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\r\n    const hBehaviour = {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'};\r\n\r\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\r\n        if (cached) return cached;\r\n        const [position, variant = 'middle'] = pos.split('-');\r\n        const isVertical = (position === 'top' || position === 'bottom');\r\n\r\n        return cache[pos] = {\r\n            position,\r\n            variant,\r\n            isVertical\r\n        };\r\n    })();\r\n\r\n    return {\r\n        update(pos) {\r\n            const {position, variant, isVertical} = getInfo(pos);\r\n            const rb = reference.getBoundingClientRect();\r\n            const eb = el.getBoundingClientRect();\r\n\r\n            const positions = vertical => vertical ? {\r\n                t: rb.top - eb.height - padding,\r\n                b: rb.bottom + padding\r\n            } : {\r\n                r: rb.right + padding,\r\n                l: rb.left - eb.width - padding\r\n            };\r\n\r\n            const variants = vertical => vertical ? {\r\n                s: rb.left + rb.width - eb.width,\r\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\r\n                e: rb.left\r\n            } : {\r\n                s: rb.bottom - eb.height,\r\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\r\n                e: rb.bottom - rb.height\r\n            };\r\n\r\n            const leastApplied = {};\r\n\r\n            function apply(bevs, vars, styleprop) {\r\n                const vertical = styleprop === 'top';\r\n                const adder = vertical ? eb.height : eb.width;\r\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\r\n\r\n                for (const ch of bevs) {\r\n                    const v = vars[ch];\r\n                    const sv = leastApplied[styleprop] = `${v}px`;\r\n\r\n                    if (v > 0 && (v + adder) < win) {\r\n                        el.style[styleprop] = sv;\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            for (const rot of [isVertical, !isVertical]) {\r\n                const v2Ok = apply(hBehaviour[position], positions(rot), rot ? 'top' : 'left');\r\n                const v1Ok = apply(vBehaviour[variant], variants(rot), rot ? 'left' : 'top');\r\n\r\n                if (v2Ok && v1Ok) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            el.style.left = leastApplied.left;\r\n            el.style.top = leastApplied.top;\r\n        }\r\n    };\r\n}\r\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass, theme, lockOpacity: lo}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div :ref=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" :ref=\"swatches\"></div> \r\n\r\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lo ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lo ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lo ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lo ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${s.cancel || 'Cancel'}\" type=\"button\" ${hidden(c.interaction.cancel)}>\r\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n","// Import utils\r\nimport * as _        from './utils/utils';\r\nimport {parseToHSVA} from './utils/color';\r\n\r\n// Import classes\r\nimport {HSVaColor} from './utils/hsvacolor';\r\nimport Moveable    from './libs/moveable';\r\nimport Selectable  from './libs/selectable';\r\nimport Nanopop     from './libs/nanopop';\r\nimport buildPickr  from './template';\r\n\r\nclass Pickr {\r\n\r\n    // Will be used to prevent specific actions during initilization\r\n    _initializingActive = true;\r\n\r\n    // If the current color value should be recalculated\r\n    _recalc = true;\r\n\r\n    // Current and last color for comparison\r\n    _color = HSVaColor();\r\n    _lastColor = HSVaColor();\r\n    _swatchColors = [];\r\n\r\n    // Evenlistener name: [callbacks]\r\n    _eventListener = {\r\n        init: [],\r\n        save: [],\r\n        hide: [],\r\n        show: [],\r\n        clear: [],\r\n        change: [],\r\n        changestop: [],\r\n        cancel: [],\r\n        swatchselect: []\r\n    };\r\n\r\n    constructor(opt) {\r\n\r\n        // Assign default values\r\n        this.options = opt = Object.assign({\r\n            appClass: null,\r\n            theme: 'classic',\r\n            useAsButton: false,\r\n            disabled: false,\r\n            comparison: true,\r\n            closeOnScroll: false,\r\n            outputPrecision: 0,\r\n            lockOpacity: false,\r\n            autoReposition: true,\r\n            container: 'body',\r\n            components: {\r\n                interaction: {}\r\n            },\r\n\r\n            strings: {},\r\n            swatches: null,\r\n            inline: false,\r\n            sliders: null,\r\n\r\n            default: '#42445a',\r\n            defaultRepresentation: null,\r\n            position: 'bottom-middle',\r\n            adjustableNumbers: true,\r\n            showAlways: false,\r\n\r\n            closeWithKey: 'Escape'\r\n        }, opt);\r\n\r\n        const {swatches, components, theme, sliders, lockOpacity} = opt;\r\n\r\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\r\n            opt.sliders = 'h';\r\n        }\r\n\r\n        // Check interaction section\r\n        if (!components.interaction) {\r\n            components.interaction = {};\r\n        }\r\n\r\n        // Overwrite palette if preview, opacity or hue are true\r\n        const {preview, opacity, hue, palette} = components;\r\n        components.opacity = (!lockOpacity && opacity);\r\n        components.palette = palette || preview || opacity || hue;\r\n\r\n        // Initialize picker\r\n        this._preBuild();\r\n        this._buildComponents();\r\n        this._bindEvents();\r\n        this._finalBuild();\r\n\r\n        // Append pre-defined swatch colors\r\n        if (swatches && swatches.length) {\r\n            swatches.forEach(color => this.addSwatch(color));\r\n        }\r\n\r\n        // Initialize positioning engine\r\n        this._nanopop = Nanopop({\r\n            reference: this._root.button,\r\n            el: this._root.app\r\n        });\r\n\r\n        // Initilization is finish, pickr is visible and ready for usage\r\n        const {app} = this._root;\r\n        const that = this;\r\n        requestAnimationFrame((function cb() {\r\n\r\n            if (!app.offsetWidth && app.parentElement !== opt.container) {\r\n                return requestAnimationFrame(cb);\r\n            }\r\n\r\n            // Apply default color\r\n            that.setColor(opt.default);\r\n            that._rePositioningPicker();\r\n\r\n            // Initialize color representation\r\n            if (opt.defaultRepresentation) {\r\n                that._representation = opt.defaultRepresentation;\r\n                that.setColorRepresentation(that._representation);\r\n            }\r\n\r\n            // Show pickr if locked\r\n            if (opt.showAlways) {\r\n                that.show();\r\n            }\r\n\r\n            // Initialization is done - pickr is usable, fire init event\r\n            that._initializingActive = false;\r\n            that._emit('init');\r\n        }));\r\n    }\r\n\r\n    // Does only the absolutly basic thing to initialize the components\r\n    _preBuild() {\r\n        const opt = this.options;\r\n\r\n        // Resolve elements\r\n        for(const type of ['el', 'container']) {\r\n            opt[type] = _.resolveElement(opt[type]);\r\n        }\r\n\r\n        // Create element and append it to body to\r\n        // prevent initialization errors\r\n        this._root = buildPickr(opt);\r\n\r\n        // Check if a custom button is used\r\n        if (opt.useAsButton) {\r\n            this._root.button = opt.el; // Replace button with customized button\r\n        }\r\n\r\n        opt.container.appendChild(this._root.root);\r\n    }\r\n\r\n    _finalBuild() {\r\n        const opt = this.options;\r\n        const root = this._root;\r\n\r\n        // Remove from body\r\n        opt.container.removeChild(root.root);\r\n\r\n        if (opt.inline) {\r\n            const parent = opt.el.parentElement;\r\n\r\n            if (opt.el.nextSibling) {\r\n                parent.insertBefore(root.app, opt.el.nextSibling);\r\n            } else {\r\n                parent.appendChild(root.app);\r\n            }\r\n        } else {\r\n            opt.container.appendChild(root.app);\r\n        }\r\n\r\n        // Don't replace the the element if a custom button is used\r\n        if (!opt.useAsButton) {\r\n\r\n            // Replace element with actual color-picker\r\n            opt.el.parentNode.replaceChild(root.root, opt.el);\r\n        } else if (opt.inline) {\r\n            opt.el.remove();\r\n        }\r\n\r\n        // Check if it should be immediatly disabled\r\n        if (opt.disabled) {\r\n            this.disable();\r\n        }\r\n\r\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\r\n        if (!opt.comparison) {\r\n            root.button.style.transition = 'none';\r\n            if (!opt.useAsButton) {\r\n                root.preview.lastColor.style.transition = 'none';\r\n            }\r\n        }\r\n\r\n        this.hide();\r\n    }\r\n\r\n    _buildComponents() {\r\n\r\n        // Instance reference\r\n        const inst = this;\r\n        const cs = this.options.components;\r\n        const sliders = (inst.options.sliders || 'v').repeat(2);\r\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\r\n\r\n        const components = {\r\n\r\n            palette: Moveable({\r\n                element: inst._root.palette.picker,\r\n                wrapper: inst._root.palette.palette,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(x, y) {\r\n                    if (!cs.palette) return;\r\n                    const {_color, _root, options} = inst;\r\n\r\n                    // Update the input field only if the user is currently not typing\r\n                    if (inst._recalc) {\r\n\r\n                        // Calculate saturation based on the position\r\n                        _color.s = x * 100;\r\n\r\n                        // Calculate the value\r\n                        _color.v = 100 - y * 100;\r\n\r\n                        // Prevent falling under zero\r\n                        _color.v < 0 ? _color.v = 0 : 0;\r\n                        inst._updateOutput();\r\n                    }\r\n\r\n                    // Set picker and gradient color\r\n                    const cssRGBaString = _color.toRGBA().toString(0);\r\n                    this.element.style.background = cssRGBaString;\r\n                    this.wrapper.style.background = `\r\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\r\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\r\n                    `;\r\n\r\n                    // Check if color is locked\r\n                    if (!options.comparison) {\r\n                        _root.button.style.color = cssRGBaString;\r\n\r\n                        if (!options.useAsButton) {\r\n                            _root.preview.lastColor.style.color = cssRGBaString;\r\n                        }\r\n                    }\r\n\r\n                    // Check if there's a swatch which color matches the current one\r\n                    const hexa = _color.toHEXA().toString();\r\n                    for (const {el, color} of inst._swatchColors) {\r\n                        el.classList[hexa === color.toHEXA().toString() ? 'add' : 'remove']('pcr-active');\r\n                    }\r\n\r\n                    // Change current color\r\n                    _root.preview.currentColor.style.color = cssRGBaString;\r\n\r\n                    if (!inst.options.comparison) {\r\n\r\n                        // If the user changes the color, remove the cleared icon\r\n                        _root.button.classList.remove('clear');\r\n                    }\r\n                }\r\n            }),\r\n\r\n            hue: Moveable({\r\n                lock: sh === 'v' ? 'h' : 'v',\r\n                element: inst._root.hue.picker,\r\n                wrapper: inst._root.hue.slider,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(v) {\r\n                    if (!cs.hue || !cs.palette) return;\r\n\r\n                    // Calculate hue\r\n                    if (inst._recalc) {\r\n                        inst._color.h = v * 360;\r\n                    }\r\n\r\n                    // Update color\r\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            opacity: Moveable({\r\n                lock: so === 'v' ? 'h' : 'v',\r\n                element: inst._root.opacity.picker,\r\n                wrapper: inst._root.opacity.slider,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(v) {\r\n                    if (!cs.opacity || !cs.palette) return;\r\n\r\n                    // Calculate opacity\r\n                    if (inst._recalc) {\r\n                        inst._color.a = Math.round(v * 1e2) / 100;\r\n                    }\r\n\r\n                    // Update color\r\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            selectable: Selectable({\r\n                elements: inst._root.interaction.options,\r\n                className: 'active',\r\n\r\n                onchange(e) {\r\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\r\n                    inst._recalc && inst._updateOutput();\r\n                }\r\n            })\r\n        };\r\n\r\n        this._components = components;\r\n    }\r\n\r\n    _bindEvents() {\r\n        const {_root, options} = this;\r\n\r\n        const eventBindings = [\r\n\r\n            // Clear color\r\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\r\n\r\n            // Select last color on click\r\n            _.on([\r\n                _root.interaction.cancel,\r\n                _root.preview.lastColor\r\n            ], 'click', () => {\r\n                this._emit('cancel', this);\r\n                this.setHSVA(...this._lastColor.toHSVA(), true);\r\n            }),\r\n\r\n            // Save color\r\n            _.on(_root.interaction.save, 'click', () => {\r\n                !this.applyColor() && !options.showAlways && this.hide();\r\n            }),\r\n\r\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\r\n\r\n                // Fire listener if initialization is finish and changed color was valid\r\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\r\n                    this._emit('change', this._color);\r\n                }\r\n\r\n                e.stopImmediatePropagation();\r\n            }),\r\n\r\n            // Detect user input and disable auto-recalculation\r\n            _.on(_root.interaction.result, ['focus', 'blur'], e => {\r\n                this._recalc = e.type === 'blur';\r\n                this._recalc && this._updateOutput();\r\n            }),\r\n\r\n            // Cancel input detection on color change\r\n            _.on([\r\n                _root.palette.palette,\r\n                _root.palette.picker,\r\n                _root.hue.slider,\r\n                _root.hue.picker,\r\n                _root.opacity.slider,\r\n                _root.opacity.picker\r\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\r\n        ];\r\n\r\n        // Provide hiding / showing abilities only if showAlways is false\r\n        if (!options.showAlways) {\r\n            const ck = options.closeWithKey;\r\n\r\n            eventBindings.push(\r\n                // Save and hide / show picker\r\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\r\n\r\n                // Close with escape key\r\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\r\n\r\n                // Cancel selecting if the user taps behind the color picker\r\n                _.on(document, ['touchstart', 'mousedown'], e => {\r\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\r\n                        this.hide();\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Make input adjustable if enabled\r\n        if (options.adjustableNumbers) {\r\n            const ranges = {\r\n                rgba: [255, 255, 255, 1],\r\n                hsva: [360, 100, 100, 1],\r\n                hsla: [360, 100, 100, 1],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\r\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\r\n\r\n                if (range) {\r\n                    const max = range[index];\r\n\r\n                    // Calculate next reasonable number\r\n                    const nv = o + (max >= 100 ? step * 1000 : step);\r\n\r\n                    // Apply range of zero up to max, fix floating-point issues\r\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\r\n                }\r\n                return o;\r\n\r\n            });\r\n        }\r\n\r\n        if (options.autoReposition && !options.inline) {\r\n            let timeout = null;\r\n            const that = this;\r\n\r\n            // Re-calc position on window resize, scroll and wheel\r\n            eventBindings.push(\r\n                _.on(window, ['scroll', 'resize'], () => {\r\n                    if (that.isOpen()) {\r\n\r\n                        if (options.closeOnScroll) {\r\n                            that.hide();\r\n                        }\r\n\r\n                        if (timeout === null) {\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n\r\n                            // Update position on every frame\r\n                            requestAnimationFrame(function rs() {\r\n                                that._rePositioningPicker();\r\n                                (timeout !== null) && requestAnimationFrame(rs);\r\n                            });\r\n                        } else {\r\n                            clearTimeout(timeout);\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n                        }\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Save bindings\r\n        this._eventBindings = eventBindings;\r\n    }\r\n\r\n    _rePositioningPicker() {\r\n        const {options} = this;\r\n\r\n        // No repositioning needed if inline\r\n        if (!options.inline) {\r\n            const {app} = this._root;\r\n\r\n            if (matchMedia('(max-width: 576px)').matches) {\r\n                Object.assign(app.style, {\r\n                    margin: 'auto',\r\n                    height: `${app.getBoundingClientRect().height}px`,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0\r\n                });\r\n            } else {\r\n                Object.assign(app.style, {\r\n                    margin: null,\r\n                    right: null,\r\n                    top: null,\r\n                    bottom: null,\r\n                    left: null,\r\n                    height: null\r\n                });\r\n\r\n                this._nanopop.update(options.position);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateOutput() {\r\n        const {_root, _color, options} = this;\r\n\r\n        // Check if component is present\r\n        if (_root.interaction.type()) {\r\n\r\n            // Construct function name and call if present\r\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\r\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\r\n                _color[method]().toString(options.outputPrecision) : '';\r\n        }\r\n\r\n        // Fire listener if initialization is finish\r\n        if (!this._initializingActive && this._recalc) {\r\n            this._emit('change', _color);\r\n        }\r\n    }\r\n\r\n    _clearColor(silent = false) {\r\n        const {_root, options} = this;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!options.useAsButton) {\r\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\r\n        }\r\n\r\n        _root.button.classList.add('clear');\r\n\r\n        if (!options.showAlways) {\r\n            this.hide();\r\n        }\r\n\r\n        if (!this._initializingActive && !silent) {\r\n\r\n            // Fire listener\r\n            this._emit('save', null);\r\n            this._emit('clear', this);\r\n        }\r\n    }\r\n\r\n    _parseLocalColor(str) {\r\n        const {values, type, a} = parseToHSVA(str);\r\n        const {lockOpacity} = this.options;\r\n        const alphaMakesAChange = a !== undefined && a !== 1;\r\n\r\n        // If no opacity is applied, add undefined at the very end which gets\r\n        // set to 1 in setHSVA\r\n        if (values && values.length === 3) {\r\n            values[3] = undefined;\r\n        }\r\n\r\n        return {\r\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\r\n            type\r\n        };\r\n    }\r\n\r\n    _emit(event, ...args) {\r\n        this._eventListener[event].forEach(cb => cb(...args, this));\r\n    }\r\n\r\n    on(event, cb) {\r\n\r\n        // Validate\r\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\r\n            this._eventListener[event].push(cb);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    off(event, cb) {\r\n        const callBacks = this._eventListener[event];\r\n\r\n        if (callBacks) {\r\n            const index = callBacks.indexOf(cb);\r\n\r\n            if (~index) {\r\n                callBacks.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Appends a color to the swatch palette\r\n     * @param color\r\n     * @returns {boolean}\r\n     */\r\n    addSwatch(color) {\r\n        const {values} = this._parseLocalColor(color);\r\n\r\n        if (values) {\r\n            const {_swatchColors, _root} = this;\r\n            const color = HSVaColor(...values);\r\n\r\n            // Create new swatch HTMLElement\r\n            const el = _.createElementFromString(\r\n                `<button type=\"button\" style=\"color: ${color.toRGBA().toString(0)}\"/>`\r\n            );\r\n\r\n            // Append element and save swatch data\r\n            _root.swatches.appendChild(el);\r\n            _swatchColors.push({el, color});\r\n\r\n            // Bind event\r\n            this._eventBindings.push(\r\n                _.on(el, 'click', () => {\r\n                    this.setHSVA(...color.toHSVA(), true);\r\n                    this._emit('swatchselect', color);\r\n                    this._emit('change', color);\r\n                })\r\n            );\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes a swatch color by it's index\r\n     * @param index\r\n     * @returns {boolean}\r\n     */\r\n    removeSwatch(index) {\r\n        const swatchColor = this._swatchColors[index];\r\n\r\n        // Check swatch data\r\n        if (swatchColor) {\r\n            const {el} = swatchColor;\r\n\r\n            // Remove HTML child and swatch data\r\n            this._root.swatches.removeChild(el);\r\n            this._swatchColors.splice(index, 1);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    applyColor(silent = false) {\r\n        const {preview, button} = this._root;\r\n\r\n        // Change preview and current color\r\n        const cssRGBaString = this._color.toRGBA().toString();\r\n        preview.lastColor.style.color = cssRGBaString;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!this.options.useAsButton) {\r\n            button.style.color = cssRGBaString;\r\n        }\r\n\r\n        // User changed the color so remove the clear clas\r\n        button.classList.remove('clear');\r\n\r\n        // Save last color\r\n        this._lastColor = this._color.clone();\r\n\r\n        // Fire listener\r\n        if (!this._initializingActive && !silent) {\r\n            this._emit('save', this._color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys\r\n     */\r\n    destroy() {\r\n        this._eventBindings.forEach(args => _.off(...args));\r\n\r\n        Object.keys(this._components)\r\n            .forEach(key => this._components[key].destroy());\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys and removes\r\n     * the pickr element.\r\n     */\r\n    destroyAndRemove() {\r\n        this.destroy();\r\n        const {root, app} = this._root;\r\n\r\n        // Remove element\r\n        if (root.parentElement) {\r\n            root.parentElement.removeChild(root);\r\n        }\r\n\r\n        // remove .pcr-app\r\n        app.parentElement.removeChild(app);\r\n\r\n        // There are references to various DOM elements stored in the pickr instance\r\n        // This cleans all of them to avoid detached DOMs\r\n        Object.keys(this)\r\n            .forEach(key => this[key] = null);\r\n    }\r\n\r\n    /**\r\n     * Hides the color-picker ui.\r\n     */\r\n    hide() {\r\n        this._root.app.classList.remove('visible');\r\n        this._emit('hide', this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Shows the color-picker ui.\r\n     */\r\n    show() {\r\n\r\n        if (!this.options.disabled) {\r\n            this._root.app.classList.add('visible');\r\n            this._rePositioningPicker();\r\n            this._emit('show', this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {boolean} If the color picker is currently open\r\n     */\r\n    isOpen() {\r\n        return this._root.app.classList.contains('visible');\r\n    }\r\n\r\n    /**\r\n     * Set a specific color.\r\n     * @param h Hue\r\n     * @param s Saturation\r\n     * @param v Value\r\n     * @param a Alpha channel (0 - 1)\r\n     * @param silent If the button should not change the color\r\n     * @return boolean if the color has been accepted\r\n     */\r\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\r\n\r\n        // Deactivate color calculation\r\n        const recalc = this._recalc; // Save state\r\n        this._recalc = false;\r\n\r\n        // Validate input\r\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\r\n            return false;\r\n        }\r\n\r\n        // Override current color and re-active color calculation\r\n        this._color = HSVaColor(h, s, v, a);\r\n\r\n        // Update slider and palette\r\n        const {hue, opacity, palette} = this._components;\r\n        hue.update((h / 360));\r\n        opacity.update(a);\r\n        palette.update(s / 100, 1 - (v / 100));\r\n\r\n        // Check if call is silent\r\n        if (!silent) {\r\n            this.applyColor();\r\n        }\r\n\r\n        // Update output if recalculation is enabled\r\n        if (recalc) {\r\n            this._updateOutput();\r\n        }\r\n\r\n        // Restore old state\r\n        this._recalc = recalc;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to parse a string which represents a color.\r\n     * Examples: #fff\r\n     *           rgb 10 10 200\r\n     *           hsva 10 20 5 0.5\r\n     * @param string\r\n     * @param silent\r\n     */\r\n    setColor(string, silent = false) {\r\n\r\n        // Check if null\r\n        if (string === null) {\r\n            this._clearColor(silent);\r\n            return true;\r\n        }\r\n\r\n        const {values, type} = this._parseLocalColor(string);\r\n\r\n        // Check if color is ok\r\n        if (values) {\r\n\r\n            // Change selected color format\r\n            const utype = type.toUpperCase();\r\n            const {options} = this._root.interaction;\r\n            const target = options.find(el => el.getAttribute('data-type') === utype);\r\n\r\n            // Auto select only if not hidden\r\n            if (target && !target.hidden) {\r\n                for (const el of options) {\r\n                    el.classList[el === target ? 'add' : 'remove']('active');\r\n                }\r\n            }\r\n\r\n            this.setColorRepresentation(utype);\r\n            return this.setHSVA(...values, silent);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Changes the color _representation.\r\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\r\n     * @param type\r\n     * @returns {boolean} if the selected type was valid.\r\n     */\r\n    setColorRepresentation(type) {\r\n\r\n        // Force uppercase to allow a case-sensitiv comparison\r\n        type = type.toUpperCase();\r\n\r\n        // Find button with given type and trigger click event\r\n        return !!this._root.interaction.options\r\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\r\n    }\r\n\r\n    /**\r\n     * Returns the current color representaion. See setColorRepresentation\r\n     * @returns {*}\r\n     */\r\n    getColorRepresentation() {\r\n        return this._representation;\r\n    }\r\n\r\n    /**\r\n     * @returns HSVaColor Current HSVaColor object.\r\n     */\r\n    getColor() {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * @returns The root HTMLElement with all his components.\r\n     */\r\n    getRoot() {\r\n        return this._root;\r\n    }\r\n\r\n    /**\r\n     * Disable pickr\r\n     */\r\n    disable() {\r\n        this.hide();\r\n        this.options.disabled = true;\r\n        this._root.button.classList.add('disabled');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enable pickr\r\n     */\r\n    enable() {\r\n        this.options.disabled = false;\r\n        this._root.button.classList.remove('disabled');\r\n        return this;\r\n    }\r\n}\r\n\r\n// Expose pickr utils\r\nPickr.utils = _;\r\n\r\n// Expose libraries for easier integration in things build on top of it\r\nPickr.libs = {\r\n    HSVaColor,\r\n    Moveable,\r\n    Nanopop,\r\n    Selectable\r\n};\r\n\r\n// Create instance via method\r\nPickr.create = options => new Pickr(options);\r\n\r\n// Assign version and export\r\nPickr.version = '1.3.0';\r\nexport default Pickr;\r\n"],"sourceRoot":""}