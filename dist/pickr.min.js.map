{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js","webpack:///./src/js/libs/nanopop.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","arguments","length","undefined","HTMLCollection","NodeList","Array","from","isArray","el","ev","_objectSpread","capture","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","child","children","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","isNaN","isFinite","mul","deltaY","inc","Number","shiftKey","ctrlKey","newNum","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","Math","max","floor","round","hsvToRgb","h","v","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","_numarize4","_numarize4$","a","splitAt","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","rhsva","toString","concat","toFixed","toHSLA","hsvToHsl","rhsla","toRGBA","rrgba","toCMYK","rgb","hsvToCmyk","rcmyk","toHEXA","padStart","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","trigger","update","wrapperRect","destroy","Selectable","className","onTap","forEach","classList","template","_ref","components","strings","useAsButton","inline","appClass","hidden","palette","preview","hue","opacity","keys","interaction","input","save","clear","int","find","add","contains","Pickr","constructor","pickr_defineProperty","this","swatchselect","change","init","disabled","comparison","swatches","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","_opt","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","reference","pos","_ref$padding","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","_pos$split2","nanopop_slicedToArray","split","_pos$split2$","variant","isVertical","rb","eb","positions","variants","apply","bevs","vars","styleprop","vertical","adder","win","ch","Nanopop","_root","button","app","requestAnimationFrame","cb","offsetParent","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","reduce","pv","cv","ci","querySelector","shadowRoot","buildPickr","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","comp","picker","_color","offsetHeight","cssRGBaString","background","currentColor","_recalc","_updateOutput","remove","slider","backgroundColor","selectable","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","timeout","setTimeout","rs","clearTimeout","_eventBindings","event","_len","args","_key","_eventListener","callBacks","index","indexOf","splice","Color","_swatchColors","hsvaColorObject","removeSwatch","swatchColor","silent","_this$_root","destroyAndRemove","pickr","recalc","_this$components","hueY","opacityY","pickerWrapper","pickerX","pickerY","string","_Color$parseToHSV2","utype","startsWith","click","getColorRepresentation","getColor","getRoot","enable","utils","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    for (const el of elements) {\n        for (const ev of events) {\n            el[method](ev, fn, {capture: false, ...options});\n        }\n    }\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a 'data-key' attribute will be saved in a object (which will be returned)\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, 'data-con');\n        const key = removeAttribute(element, 'data-key');\n\n        // Check and save element\n        if (key) {\n            base[key] = element;\n        }\n\n        // Check all children\n        const subtree = con ? (base[con] = {}) : base;\n        for (let child of Array.from(element.children)) {\n\n            // Check if element should be saved as array\n            const arr = removeAttribute(child, 'data-arr');\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = [])).push(child);\n            } else {\n                resolve(child, subtree);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param negative\n */\nexport function adjustableInputNumbers(el, negative = true) {\n\n    // Check if a char represents a number\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\n\n    function handleScroll(e) {\n        const val = el.value;\n        const off = el.selectionStart;\n        let numStart = off;\n        let num = ''; // Will be the number as string\n\n        // Look back\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\n            num = val[i] + num;\n            numStart--; // Find start of number\n        }\n\n        // Look forward\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\n            num += val[i];\n        }\n\n        // Check if number is valid\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\n\n            const mul = e.deltaY < 0 ? 1 : -1;\n            const inc = ([1, 10, 100])[Number(e.shiftKey || e.ctrlKey * 2)] * mul;\n            let newNum = Number(num) + inc;\n\n            if (!negative && newNum < 0) {\n                newNum = 0;\n            }\n\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\n            const curPos = numStart + String(newNum).length;\n\n            // Update value and set cursor\n            el.value = newStr;\n            el.focus();\n            el.setSelectionRange(curPos, curPos);\n        }\n\n        // Prevent default\n        e.preventDefault();\n\n        // Trigger input event\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n","// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let i = floor(h);\r\n\r\n    let f = h - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    let mod = i % 6;\r\n    let r = [v, q, p, p, t, v][mod];\r\n    let g = [t, v, v, q, p, p][mod];\r\n    let b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    let l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100, m /= 100, y /= 100, k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100, l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    let ns = (2 * s / (l + s)) * 100;\r\n    let v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSV(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\r\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                let [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break;\r\n\r\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\r\n            }\r\n            case 'rgba': {\r\n                let [, , r, g, b, a = 1] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], type};\r\n            }\r\n            case 'hex': {\r\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\r\n                let [, hex] = match;\r\n\r\n                // Fill up opacity if not declared\r\n                if (hex.length === 3) {\r\n                    hex += 'F';\r\n                } else if (hex.length === 6) {\r\n                    hex += 'FF';\r\n                }\r\n\r\n                let alpha;\r\n                if (hex.length === 4) {\r\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\r\n                } else if (hex.length === 8) {\r\n                    [hex, alpha] = splitAt(hex, 6);\r\n                }\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                alpha = parseInt(alpha, 16) / 255;\r\n                return {values: [...hexToHsv(hex), alpha], type};\r\n            }\r\n            case 'hsla': {\r\n                let [, , h, s, l, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], type};\r\n            }\r\n            case 'hsva': {\r\n                let [, , h, s, v, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [h, s, v, a], type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n    const {ceil} = Math;\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v];\n            const rhsva = hsva.map(ceil);\n\n            hsva.push(that.a);\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = hsvToHsl(that.h, that.s, that.v);\n            const rhsla = hsla.map(ceil);\n\n            hsla.push(that.a);\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = hsvToRgb(that.h, that.s, that.v);\n            const rrgba = rgba.map(ceil);\n\n            rgba.push(that.a);\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            const rcmyk = cmyk.map(ceil);\n\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            hex.toString = () => {\n\n                // Check if alpha channel make sense, convert it to 255 number space, convert\n                // to hex and pad it with zeros if needet.\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\n                    .toString(16)\n                    .toUpperCase().padStart(2, '0');\n\n                return `#${hex.join('').toUpperCase() + alpha}`;\n            };\n\n            return hex;\n        },\n\n        clone() {\n            return HSVaColor(that.h, that.s, that.v, that.a);\n        }\n    };\n\n    return that;\n}\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lockX: false,\r\n            lockY: false,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {element} = options;\r\n            const b = that.options.wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (!options.lockX) {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (!options.lockY) {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            options.onchange(x, y);\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: wrapperRect.left + x,\r\n                clientY: wrapperRect.top + y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div data-key=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \r\n\r\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n","// Import styles\r\nimport '../scss/pickr.scss';\r\n\r\n// Import utils\r\nimport * as _     from './utils/utils';\r\nimport * as Color from './utils/color';\r\n\r\n// Import classes\r\nimport {HSVaColor} from './utils/hsvacolor';\r\nimport Moveable    from './libs/moveable';\r\nimport Selectable  from './libs/selectable';\r\nimport Nanopop     from './libs/nanopop';\r\nimport buildPickr  from './template';\r\n\r\nclass Pickr {\r\n\r\n    // Will be used to prevent specific actions during initilization\r\n    _initializingActive = true;\r\n\r\n    // Replace element with color picker\r\n    _recalc = true;\r\n\r\n    // Current and last color for comparison\r\n    _color = HSVaColor();\r\n    _lastColor = HSVaColor();\r\n    _swatchColors = [];\r\n\r\n    // Evenlistener name: [callbacks]\r\n    _eventListener = {\r\n        'swatchselect': [],\r\n        'change': [],\r\n        'save': [],\r\n        'init': []\r\n    };\r\n\r\n    constructor(opt) {\r\n\r\n        // Assign default values\r\n        this.options = opt = Object.assign({\r\n            appClass: null,\r\n            useAsButton: false,\r\n            disabled: false,\r\n            comparison: true,\r\n\r\n            components: {\r\n                interaction: {}\r\n            },\r\n\r\n            strings: {},\r\n            swatches: null,\r\n            inline: false,\r\n\r\n            default: '#42445A',\r\n            defaultRepresentation: null,\r\n            position: 'bottom-middle',\r\n            adjustableNumbers: true,\r\n            showAlways: false,\r\n\r\n            closeWithKey: 'Escape'\r\n        }, opt);\r\n\r\n        const {swatches, inline, components, position} = opt;\r\n\r\n        // Check interaction section\r\n        if (!components.interaction) {\r\n            components.interaction = {};\r\n        }\r\n\r\n        // Overwrite palette if preview, opacity or hue are true\r\n        const {preview, opacity, hue, palette} = components;\r\n        components.palette = palette || preview || opacity || hue;\r\n\r\n        // Per default enabled if inline\r\n        if (inline) {\r\n            opt.showAlways = true;\r\n        }\r\n\r\n        // Initialize picker\r\n        this._preBuild();\r\n        this._buildComponents();\r\n        this._bindEvents();\r\n\r\n        // Finalize build\r\n        this._finalBuild();\r\n\r\n        // Append pre-defined swatch colors\r\n        if (swatches && swatches.length) {\r\n            swatches.forEach(color => this.addSwatch(color));\r\n        }\r\n\r\n        // Initialize positioning engine\r\n        this._nanopop = Nanopop({\r\n            reference: this._root.button,\r\n            el: this._root.app,\r\n            pos: position\r\n        });\r\n\r\n        // Initilization is finish, pickr is visible and ready for usage\r\n        const {button} = this._root;\r\n        const that = this;\r\n        requestAnimationFrame((function cb() {\r\n\r\n            // offsetParent of body is always 0. So check if it is the body\r\n            if (button.offsetParent === null && button !== document.body) {\r\n                return requestAnimationFrame(cb);\r\n            }\r\n\r\n            // Apply default color\r\n            that.setColor(opt.default);\r\n            that._rePositioningPicker();\r\n\r\n            // Initialize color representation\r\n            if (opt.defaultRepresentation) {\r\n                that._representation = opt.defaultRepresentation;\r\n                that.setColorRepresentation(that._representation);\r\n            }\r\n\r\n            // Show pickr if locked\r\n            if (opt.showAlways) {\r\n                that.show();\r\n            }\r\n\r\n            // Initialization is done - pickr is usable, fire init event\r\n            that._initializingActive = false;\r\n            that._emit('init');\r\n        }));\r\n    }\r\n\r\n    // Does only the absolutly basic thing to initialize the components\r\n    _preBuild() {\r\n        const opt = this.options;\r\n\r\n        // Check if element is selector\r\n        if (typeof opt.el === 'string') {\r\n\r\n            // Resolve possible shadow dom access\r\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\r\n                pv = pv.querySelector(cv);\r\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\r\n            }, document);\r\n        }\r\n\r\n        // Create element and append it to body to\r\n        // prevent initialization errors\r\n        this._root = buildPickr(opt);\r\n\r\n        // Check if a custom button is used\r\n        if (opt.useAsButton) {\r\n            this._root.button = opt.el; // Replace button with customized button\r\n        }\r\n\r\n        document.body.appendChild(this._root.root);\r\n    }\r\n\r\n    _finalBuild() {\r\n        const opt = this.options;\r\n        const root = this._root;\r\n\r\n        // Remove from body\r\n        document.body.removeChild(root.root);\r\n\r\n        if (opt.inline) {\r\n            const {parentElement} = opt.el;\r\n\r\n            if (parentElement.lastChild === opt.el) {\r\n                parentElement.appendChild(root.app);\r\n            } else {\r\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\r\n            }\r\n        } else {\r\n            document.body.appendChild(root.app);\r\n        }\r\n\r\n        // Don't replace the the element if a custom button is used\r\n        if (!opt.useAsButton) {\r\n\r\n            // Replace element with actual color-picker\r\n            opt.el.parentNode.replaceChild(root.root, opt.el);\r\n        }\r\n\r\n        // Call disable to also add the disabled class\r\n        if (opt.disabled) {\r\n            this.disable();\r\n        }\r\n\r\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\r\n        if (!opt.comparison) {\r\n            root.button.style.transition = 'none';\r\n            if (!opt.useAsButton) {\r\n                root.preview.lastColor.style.transition = 'none';\r\n            }\r\n        }\r\n\r\n        this.hide();\r\n    }\r\n\r\n    _buildComponents() {\r\n\r\n        // Instance reference\r\n        const inst = this;\r\n        const comp = this.options.components;\r\n\r\n        const components = {\r\n\r\n            palette: Moveable({\r\n                element: inst._root.palette.picker,\r\n                wrapper: inst._root.palette.palette,\r\n\r\n                onchange(x, y) {\r\n                    if (!comp.palette) return;\r\n                    const {_color, _root, options} = inst;\r\n\r\n                    // Calculate saturation based on the position\r\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\r\n\r\n                    // Calculate the value\r\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\r\n\r\n                    // Prevent falling under zero\r\n                    _color.v < 0 ? _color.v = 0 : 0;\r\n\r\n                    // Set picker and gradient color\r\n                    const cssRGBaString = _color.toRGBA().toString();\r\n                    this.element.style.background = cssRGBaString;\r\n                    this.wrapper.style.background = `\r\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\r\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\r\n                    `;\r\n\r\n                    // Check if color is locked\r\n                    if (!options.comparison) {\r\n                        _root.button.style.color = cssRGBaString;\r\n\r\n                        if (!options.useAsButton) {\r\n                            _root.preview.lastColor.style.color = cssRGBaString;\r\n                        }\r\n                    }\r\n\r\n                    // Change current color\r\n                    _root.preview.currentColor.style.color = cssRGBaString;\r\n\r\n                    // Update the input field only if the user is currently not typing\r\n                    if (inst._recalc) {\r\n                        inst._updateOutput();\r\n                    }\r\n\r\n                    // If the user changes the color, remove the cleared icon\r\n                    _root.button.classList.remove('clear');\r\n                }\r\n            }),\r\n\r\n            hue: Moveable({\r\n                lockX: true,\r\n                element: inst._root.hue.picker,\r\n                wrapper: inst._root.hue.slider,\r\n\r\n                onchange(x, y) {\r\n                    if (!comp.hue || !comp.palette) return;\r\n\r\n                    // Calculate hue\r\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\r\n\r\n                    // Update color\r\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            opacity: Moveable({\r\n                lockX: true,\r\n                element: inst._root.opacity.picker,\r\n                wrapper: inst._root.opacity.slider,\r\n\r\n                onchange(x, y) {\r\n                    if (!comp.opacity || !comp.palette) return;\r\n\r\n                    // Calculate opacity\r\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\r\n\r\n                    // Update color\r\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\r\n                    inst.components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            selectable: Selectable({\r\n                elements: inst._root.interaction.options,\r\n                className: 'active',\r\n                onchange(e) {\r\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\r\n                    inst._updateOutput();\r\n                }\r\n            })\r\n        };\r\n\r\n        this.components = components;\r\n    }\r\n\r\n    _bindEvents() {\r\n        const {_root, options} = this;\r\n\r\n        const eventBindings = [\r\n\r\n            // Clear color\r\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\r\n\r\n            // Select last color on click\r\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\r\n\r\n            // Save color\r\n            _.on(_root.interaction.save, 'click', () => {\r\n                !this.applyColor() && !options.showAlways && this.hide();\r\n            }),\r\n\r\n            // Detect user input and disable auto-recalculation\r\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\r\n                this._recalc = false;\r\n\r\n                // Fire listener if initialization is finish and changed color was valid\r\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\r\n                    this._emit('change', this._color);\r\n                }\r\n\r\n                e.stopImmediatePropagation();\r\n            }),\r\n\r\n            // Cancel input detection on color change\r\n            _.on([\r\n                _root.palette.palette,\r\n                _root.palette.picker,\r\n                _root.hue.slider,\r\n                _root.hue.picker,\r\n                _root.opacity.slider,\r\n                _root.opacity.picker\r\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\r\n        ];\r\n\r\n        // Provide hiding / showing abilities only if showAlways is false\r\n        if (!options.showAlways) {\r\n            const ck = options.closeWithKey;\r\n\r\n            eventBindings.push(\r\n                // Save and hide / show picker\r\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\r\n\r\n                // Close with escape key\r\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\r\n\r\n                // Cancel selecting if the user taps behind the color picker\r\n                _.on(document, ['touchstart', 'mousedown'], e => {\r\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\r\n                        this.hide();\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Make input adjustable if enabled\r\n        if (options.adjustableNumbers) {\r\n            _.adjustableInputNumbers(_root.interaction.result, false);\r\n        }\r\n\r\n        if (!options.inline) {\r\n            let timeout = null;\r\n            const that = this;\r\n\r\n            // Re-calc position on window resize, scroll and wheel\r\n            eventBindings.push(\r\n                _.on(window, ['scroll', 'resize'], () => {\r\n                    if (that.isOpen()) {\r\n                        if (timeout === null) {\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n\r\n                            // Update position on every frame\r\n                            requestAnimationFrame(function rs() {\r\n                                that._rePositioningPicker();\r\n                                (timeout !== null) && requestAnimationFrame(rs);\r\n                            });\r\n                        } else {\r\n                            clearTimeout(timeout);\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n                        }\r\n                    }\r\n                })\r\n            );\r\n        }\r\n\r\n        // Save bindings\r\n        this._eventBindings = eventBindings;\r\n    }\r\n\r\n    _rePositioningPicker() {\r\n\r\n        // No repositioning needed if inline\r\n        if (!this.options.inline) {\r\n            this._nanopop.update();\r\n        }\r\n    }\r\n\r\n    _updateOutput() {\r\n\r\n        // Check if component is present\r\n        if (this._root.interaction.type()) {\r\n\r\n            // Construct function name and call if present\r\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\r\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\r\n        }\r\n\r\n        // Fire listener if initialization is finish\r\n        if (!this._initializingActive) {\r\n            this._emit('change', this._color);\r\n        }\r\n    }\r\n\r\n    _clearColor() {\r\n        const {_root, options} = this;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!options.useAsButton) {\r\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\r\n        }\r\n\r\n        _root.button.classList.add('clear');\r\n\r\n        if (!options.showAlways) {\r\n            this.hide();\r\n        }\r\n\r\n        if (!this._initializingActive) {\r\n\r\n            // Fire listener\r\n            this._emit('save', null);\r\n        }\r\n    }\r\n\r\n    _emit(event, ...args) {\r\n        this._eventListener[event].forEach(cb => cb(...args, this));\r\n    }\r\n\r\n    on(event, cb) {\r\n\r\n        // Validate\r\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\r\n            this._eventListener[event].push(cb);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    off(event, cb) {\r\n        const callBacks = this._eventListener[event];\r\n\r\n        if (callBacks) {\r\n            const index = callBacks.indexOf(cb);\r\n\r\n            if (~index) {\r\n                callBacks.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Appends a color to the swatch palette\r\n     * @param color\r\n     * @returns {boolean}\r\n     */\r\n    addSwatch(color) {\r\n        const {values} = Color.parseToHSV(color);\r\n\r\n        if (values) {\r\n            const {_swatchColors, _root} = this;\r\n            const hsvaColorObject = HSVaColor(...values);\r\n\r\n            // Create new swatch HTMLElement\r\n            const element = _.createElementFromString(\r\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\r\n            );\r\n\r\n            // Append element and save swatch data\r\n            _root.swatches.appendChild(element);\r\n            _swatchColors.push({element, hsvaColorObject});\r\n\r\n            // Bind event\r\n            this._eventBindings.push(\r\n                _.on(element, 'click', () => {\r\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\r\n                    this._emit('swatchselect', hsvaColorObject);\r\n                })\r\n            );\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes a swatch color by it's index\r\n     * @param index\r\n     * @returns {boolean}\r\n     */\r\n    removeSwatch(index) {\r\n\r\n        // Validate index\r\n        if (typeof index === 'number') {\r\n            const swatchColor = this._swatchColors[index];\r\n\r\n            // Check swatch data\r\n            if (swatchColor) {\r\n                const {element} = swatchColor;\r\n\r\n                // Remove HTML child and swatch data\r\n                this._root.swatches.removeChild(element);\r\n                this._swatchColors.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    applyColor(silent = false) {\r\n        const {preview, button} = this._root;\r\n\r\n        // Change preview and current color\r\n        const cssRGBaString = this._color.toRGBA().toString();\r\n        preview.lastColor.style.color = cssRGBaString;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!this.options.useAsButton) {\r\n            button.style.color = cssRGBaString;\r\n        }\r\n\r\n        // User changed the color so remove the clear clas\r\n        button.classList.remove('clear');\r\n\r\n        // Save last color\r\n        this._lastColor = this._color.clone();\r\n\r\n        // Fire listener\r\n        if (!this._initializingActive && !silent) {\r\n            this._emit('save', this._color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys\r\n     */\r\n    destroy() {\r\n        this._eventBindings.forEach(args => _.off(...args));\r\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys and removes\r\n     * the pickr element.\r\n     */\r\n    destroyAndRemove() {\r\n        this.destroy();\r\n\r\n        // Remove element\r\n        const root = this._root.root;\r\n        root.parentElement.removeChild(root);\r\n\r\n        // remove .pcr-app\r\n        const app = this._root.app;\r\n        app.parentElement.removeChild(app);\r\n\r\n        // There are references to various DOM elements stored in the pickr instance\r\n        // This cleans all of them to avoid detached DOMs\r\n        const pickr = this;\r\n        Object.keys(pickr).forEach(key => pickr[key] = null);\r\n    }\r\n\r\n    /**\r\n     * Hides the color-picker ui.\r\n     */\r\n    hide() {\r\n        this._root.app.classList.remove('visible');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Shows the color-picker ui.\r\n     */\r\n    show() {\r\n        if (this.options.disabled) return;\r\n        this._root.app.classList.add('visible');\r\n        this._rePositioningPicker();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {boolean} If the color picker is currently open\r\n     */\r\n    isOpen() {\r\n        return this._root.app.classList.contains('visible');\r\n    }\r\n\r\n    /**\r\n     * Set a specific color.\r\n     * @param h Hue\r\n     * @param s Saturation\r\n     * @param v Value\r\n     * @param a Alpha channel (0 - 1)\r\n     * @param silent If the button should not change the color\r\n     * @return boolean if the color has been accepted\r\n     */\r\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\r\n\r\n        // Deactivate color calculation\r\n        const recalc = this._recalc; // Save state\r\n        this._recalc = false;\r\n\r\n        // Validate input\r\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\r\n            return false;\r\n        }\r\n\r\n        // Override current color and re-active color calculation\r\n        this._color = HSVaColor(h, s, v, a);\r\n\r\n        // Short names\r\n        const {hue, opacity, palette} = this.components;\r\n\r\n        // Calculate y position of hue slider\r\n        const hueWrapper = hue.options.wrapper;\r\n        const hueY = hueWrapper.offsetHeight * (h / 360);\r\n        hue.update(0, hueY);\r\n\r\n        // Calculate y position of opacity slider\r\n        const opacityWrapper = opacity.options.wrapper;\r\n        const opacityY = opacityWrapper.offsetHeight * a;\r\n        opacity.update(0, opacityY);\r\n\r\n        // Calculate y and x position of color palette\r\n        const pickerWrapper = palette.options.wrapper;\r\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\r\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\r\n        palette.update(pickerX, pickerY);\r\n\r\n        // Restore old state\r\n        this._recalc = recalc;\r\n\r\n        // Update output if recalculation is enabled\r\n        if (this._recalc) {\r\n            this._updateOutput();\r\n        }\r\n\r\n        // Check if call is silent\r\n        if (!silent) {\r\n            this.applyColor();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to parse a string which represents a color.\r\n     * Examples: #fff\r\n     *           rgb 10 10 200\r\n     *           hsva 10 20 5 0.5\r\n     * @param string\r\n     * @param silent\r\n     */\r\n    setColor(string, silent = false) {\r\n\r\n        // Check if null\r\n        if (string === null) {\r\n            this._clearColor();\r\n            return true;\r\n        }\r\n\r\n        const {values, type} = Color.parseToHSV(string);\r\n\r\n        // Check if color is ok\r\n        if (values) {\r\n\r\n            // Change selected color format\r\n            const utype = type.toUpperCase();\r\n            const {options} = this._root.interaction;\r\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\r\n\r\n            // Auto select only if not hidden\r\n            if (target && !target.hidden) {\r\n                for (const el of options) {\r\n                    el.classList[el === target ? 'add' : 'remove']('active');\r\n                }\r\n            }\r\n\r\n            return this.setHSVA(...values, silent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the color _representation.\r\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\r\n     * @param type\r\n     * @returns {boolean} if the selected type was valid.\r\n     */\r\n    setColorRepresentation(type) {\r\n\r\n        // Force uppercase to allow a case-sensitiv comparison\r\n        type = type.toUpperCase();\r\n\r\n        // Find button with given type and trigger click event\r\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\r\n    }\r\n\r\n    /**\r\n     * Returns the current color representaion. See setColorRepresentation\r\n     * @returns {*}\r\n     */\r\n    getColorRepresentation() {\r\n        return this._representation;\r\n    }\r\n\r\n    /**\r\n     * @returns HSVaColor Current HSVaColor object.\r\n     */\r\n    getColor() {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * @returns The root HTMLElement with all his components.\r\n     */\r\n    getRoot() {\r\n        return this._root;\r\n    }\r\n\r\n    /**\r\n     * Disable pickr\r\n     */\r\n    disable() {\r\n        this.hide();\r\n        this.options.disabled = true;\r\n        this._root.button.classList.add('disabled');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enable pickr\r\n     */\r\n    enable() {\r\n        this.options.disabled = false;\r\n        this._root.button.classList.remove('disabled');\r\n        return this;\r\n    }\r\n}\r\n\r\n// Expose pickr utils\r\nPickr.utils = _;\r\n\r\n// Create instance via method\r\nPickr.create = options => new Pickr(options);\r\n\r\n// Assign version and export\r\nPickr.version = '0.6.2';\r\nexport default Pickr;\r\n","/**\r\n * Micro positioning-engine\r\n * @param el\r\n * @param reference\r\n * @param pos\r\n * @param padding\r\n * @returns {{update(): void}}\r\n * @constructor\r\n */\r\nexport default function Nanopop({el, reference, pos, padding = 8}) {\r\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\r\n    const hBehaviour = {top: 'tb', right: 'rl', bottom: 'bt', left: 'lr'};\r\n    const [position, variant = 'middle'] = pos.split('-');\r\n    const isVertical = (position === 'top' || position === 'bottom');\r\n\r\n    return {\r\n        update() {\r\n            const rb = reference.getBoundingClientRect();\r\n            const eb = el.getBoundingClientRect();\r\n\r\n            const positions = isVertical ? {\r\n                t: rb.top - eb.height - padding,\r\n                b: rb.bottom + padding\r\n            } : {\r\n                r: rb.right + padding,\r\n                l: rb.left - eb.width - padding\r\n            };\r\n\r\n            const variants = isVertical ? {\r\n                s: rb.left + rb.width - eb.width,\r\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\r\n                e: rb.left\r\n            } : {\r\n                s: rb.bottom - eb.height,\r\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\r\n                e: rb.bottom - rb.height\r\n            };\r\n\r\n            function apply(bevs, vars, styleprop) {\r\n                const vertical = styleprop === 'top';\r\n                const adder = vertical ? eb.height : eb.width;\r\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\r\n\r\n                for (const ch of bevs) {\r\n                    const v = vars[ch];\r\n                    if (v > 0 && (v + adder) < win) {\r\n                        el.style[styleprop] = `${v}px`;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            apply(vBehaviour[variant], variants, isVertical ? 'left' : 'top');\r\n            apply(hBehaviour[position], positions, isVertical ? 'top' : 'left');\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":""}