{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js","webpack:///./src/js/libs/nanopop.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","once","element","event","fn","options","on","helper","apply","this","arguments","removeEventListener","eventListener","off","method","elements","events","HTMLCollection","NodeList","Array","from","isArray","el","ev","_objectSpread","capture","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","base","con","subtree","child","children","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","length","isNaN","isFinite","mul","deltaY","inc","Number","shiftKey","ctrlKey","newNum","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","v","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","numarize","array","test","undefined","type","exec","values","a","splitAt","alpha","HSVaColor","ceil","that","toHSVA","rhsva","toString","concat","toFixed","toHSLA","hsvToHsl","rhsla","toRGBA","rrgba","toCMYK","rgb","hsvToCmyk","rcmyk","toHEXA","padStart","hsvToHex","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","trigger","update","wrapperRect","destroy","Selectable","className","onTap","forEach","classList","template","components","strings","useAsButton","inline","appClass","hidden","palette","preview","hue","opacity","keys","interaction","input","save","clear","int","find","add","contains","Pickr","constructor","pickr_defineProperty","swatchselect","change","init","disabled","comparison","swatches","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","button","_root","requestAnimationFrame","cb","offsetParent","body","setColor","_nanopop","reference","pos","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","variant","split","isVertical","rb","eb","positions","variants","bevs","vars","styleprop","vertical","adder","win","ch","Nanopop","app","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","reduce","pv","cv","ci","querySelector","shadowRoot","buildPickr","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","comp","picker","_color","offsetHeight","cssRGBaString","background","currentColor","_recalc","_updateOutput","remove","slider","backgroundColor","selectable","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","timeout","setTimeout","rs","clearTimeout","_eventBindings","args","_eventListener","callBacks","index","indexOf","splice","Color","_swatchColors","hsvaColorObject","removeSwatch","swatchColor","silent","destroyAndRemove","pickr","recalc","hueY","opacityY","pickerWrapper","pickerX","pickerY","string","utype","startsWith","click","getColorRepresentation","getColor","getRoot","enable","utils","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Add an eventlistener which will be fired only once.\n *\n * @param element Target element\n * @param event Event name\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const once = (element, event, fn, options) => on(element, event, function helper() {\n    fn.apply(this, arguments);\n    this.removeEventListener(event, helper);\n}, options);\n\n/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    for (const el of elements) {\n        for (const ev of events) {\n            el[method](ev, fn, {capture: false, ...options});\n        }\n    }\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a 'data-key' attribute will be saved in a object (which will be returned)\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, 'data-con');\n        const key = removeAttribute(element, 'data-key');\n\n        // Check and save element\n        if (key) {\n            base[key] = element;\n        }\n\n        // Check all children\n        const subtree = con ? (base[con] = {}) : base;\n        for (let child of Array.from(element.children)) {\n\n            // Check if element should be saved as array\n            const arr = removeAttribute(child, 'data-arr');\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = [])).push(child);\n            } else {\n                resolve(child, subtree);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param negative\n */\nexport function adjustableInputNumbers(el, negative = true) {\n\n    // Check if a char represents a number\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\n\n    function handleScroll(e) {\n        const val = el.value;\n        const off = el.selectionStart;\n        let numStart = off;\n        let num = ''; // Will be the number as string\n\n        // Look back\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\n            num = val[i] + num;\n            numStart--; // Find start of number\n        }\n\n        // Look forward\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\n            num += val[i];\n        }\n\n        // Check if number is valid\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\n\n            const mul = e.deltaY < 0 ? 1 : -1;\n            const inc = ([1, 10, 100])[Number(e.shiftKey || e.ctrlKey * 2)] * mul;\n            let newNum = Number(num) + inc;\n\n            if (!negative && newNum < 0) {\n                newNum = 0;\n            }\n\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\n            const curPos = numStart + String(newNum).length;\n\n            // Update value and set cursor\n            el.value = newStr;\n            el.focus();\n            el.setSelectionRange(curPos, curPos);\n        }\n\n        // Prevent default\n        e.preventDefault();\n\n        // Trigger input event\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n","// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    let i = floor(h);\n\n    let f = h - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    let mod = i % 6;\n    let r = [v, q, p, p, t, v][mod];\n    let g = [t, v, v, q, p, p][mod];\n    let b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        round(v).toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    let l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100, m /= 100, y /= 100, k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100, l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    let ns = (2 * s / (l + s)) * 100;\n    let v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSV(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                let [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break;\n\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\n            }\n            case 'rgba': {\n                let [, , r, g, b, a = 1] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...rgbToHsv(r, g, b), a], type};\n            }\n            case 'hex': {\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\n                let [, hex] = match;\n\n                // Fill up opacity if not declared\n                if (hex.length === 3) {\n                    hex += 'F';\n                } else if (hex.length === 6) {\n                    hex += 'FF';\n                }\n\n                let alpha;\n                if (hex.length === 4) {\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\n                } else if (hex.length === 8) {\n                    [hex, alpha] = splitAt(hex, 6);\n                }\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                alpha = parseInt(alpha, 16) / 255;\n                return {values: [...hexToHsv(hex), alpha], type};\n            }\n            case 'hsla': {\n                let [, , h, s, l, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...hslToHsv(h, s, l), a], type};\n            }\n            case 'hsva': {\n                let [, , h, s, v, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [h, s, v, a], type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n    const {ceil} = Math;\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v];\n            const rhsva = hsva.map(ceil);\n\n            hsva.push(that.a);\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = hsvToHsl(that.h, that.s, that.v);\n            const rhsla = hsla.map(ceil);\n\n            hsla.push(that.a);\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = hsvToRgb(that.h, that.s, that.v);\n            const rrgba = rgba.map(ceil);\n\n            rgba.push(that.a);\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            const rcmyk = cmyk.map(ceil);\n\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            hex.toString = () => {\n\n                // Check if alpha channel make sense, convert it to 255 number space, convert\n                // to hex and pad it with zeros if needet.\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0)\n                    .toString(16)\n                    .toUpperCase(), 2, '0');\n\n                return `#${hex.join('').toUpperCase() + alpha}`;\n            };\n\n            return hex;\n        },\n\n        clone() {\n            return HSVaColor(that.h, that.s, that.v, that.a);\n        }\n    };\n\n    return that;\n}\n","import * as _ from '../utils/utils';\n\nexport default function Moveable(opt) {\n\n    const that = {\n\n        // Assign default values\n        options: Object.assign({\n            lockX: false,\n            lockY: false,\n            onchange: () => 0\n        }, opt),\n\n        _tapstart(evt) {\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\n\n            // Prevent default touch event\n            evt.preventDefault();\n\n            // Trigger\n            that._tapmove(evt);\n        },\n\n        _tapmove(evt) {\n            const {options, cache} = that;\n            const {element} = options;\n            const b = that.options.wrapper.getBoundingClientRect();\n\n            let x = 0, y = 0;\n            if (evt) {\n                const touch = evt && evt.touches && evt.touches[0];\n                x = evt ? (touch || evt).clientX : 0;\n                y = evt ? (touch || evt).clientY : 0;\n\n                // Reset to bounds\n                if (x < b.left) x = b.left;\n                else if (x > b.left + b.width) x = b.left + b.width;\n                if (y < b.top) y = b.top;\n                else if (y > b.top + b.height) y = b.top + b.height;\n\n                // Normalize\n                x -= b.left;\n                y -= b.top;\n            } else if (cache) {\n                x = cache.x * b.width;\n                y = cache.y * b.height;\n            }\n\n            if (!options.lockX) {\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            if (!options.lockY) {\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            that.cache = {x: x / b.width, y: y / b.height};\n            options.onchange(x, y);\n        },\n\n        _tapstop() {\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\n        },\n\n        trigger() {\n            that._tapmove();\n        },\n\n        update(x = 0, y = 0) {\n            const wrapperRect = that.options.wrapper.getBoundingClientRect();\n            that._tapmove({\n                clientX: wrapperRect.left + x,\n                clientY: wrapperRect.top + y\n            });\n        },\n\n        destroy() {\n            const {options, _tapstart} = that;\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\n                passive: false\n            });\n        }\n    };\n\n    // Initilize\n    const {options, _tapstart} = that;\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\n        passive: false\n    });\n\n    return that;\n}\n","import * as _ from '../utils/utils';\n\nexport default function Selectable(opt = {}) {\n    opt = Object.assign({\n        onchange: () => 0,\n        className: '',\n        elements: []\n    }, opt);\n\n    const onTap = _.on(opt.elements, 'click', evt => {\n        opt.elements.forEach(e =>\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\n        );\n\n        opt.onchange(evt);\n    });\n\n    return {\n        destroy: () => _.off(...onTap)\n    };\n}\n","import * as _ from './utils/utils';\n\nexport default ({components: c, strings: s, useAsButton, inline, appClass}) => {\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n\n    const root = _.createFromTemplate(`\n      <div data-key=\"root\" class=\"pickr\">\n\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\n\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" ${inline ? 'style=\"position: unset\"' : ''}>\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\n            </div>\n\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\n            </div>\n\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\n            </div>\n\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\n            </div>\n          </div>\n\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \n\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\n\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\n\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\n          </div>\n        </div>\n      </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n","// Import styles\nimport '../scss/pickr.scss';\n\n// Import utils\nimport * as _     from './utils/utils';\nimport * as Color from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // Replace element with color picker\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        'swatchselect': [],\n        'change': [],\n        'save': [],\n        'init': []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n\n            default: '#42445A',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, inline, components, position} = opt;\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Finalize build\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._nanopop = Nanopop({\n                reference: that._root.button,\n                el: that._root.app,\n                pos: position\n            });\n\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const {parentElement} = opt.el;\n\n            if (parentElement.lastChild === opt.el) {\n                parentElement.appendChild(root.app);\n            } else {\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    if (!comp.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent), \n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    // If the user changes the color, remove the cleared icon\n                    _root.button.classList.remove('clear');\n                }\n            }),\n\n            hue: Moveable({\n                lockX: true,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(x, y) {\n                    if (!comp.hue || !comp.palette) return;\n\n                    // Calculate hue\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lockX: true,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(x, y) {\n                    if (!comp.opacity || !comp.palette) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            _.adjustableInputNumbers(_root.interaction.result, false);\n        }\n\n        if (!options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                })\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n\n        // No repositioning needed if inline\n        if (!this.options.inline) {\n            this._nanopop.update();\n        }\n    }\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n\n        // remove .pcr-app\n        const app = this._root.app;\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        const pickr = this;\n        Object.keys(pickr).forEach(key => pickr[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Short names\n        const {hue, opacity, palette} = this.components;\n\n        // Calculate y position of hue slider\n        const hueWrapper = hue.options.wrapper;\n        const hueY = hueWrapper.offsetHeight * (h / 360);\n        hue.update(0, hueY);\n\n        // Calculate y position of opacity slider\n        const opacityWrapper = opacity.options.wrapper;\n        const opacityY = opacityWrapper.offsetHeight * a;\n        opacity.update(0, opacityY);\n\n        // Calculate y and x position of color palette\n        const pickerWrapper = palette.options.wrapper;\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\n        palette.update(pickerX, pickerY);\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n        this._recalc = recalc; // Restore old state\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '0.6.1';\nexport default Pickr;\n","/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, pos, padding = 8}) {\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\n    const hBehaviour = {top: 'tb', right: 'rl', bottom: 'bt', left: 'lr'};\n    const [position, variant = 'middle'] = pos.split('-');\n    const isVertical = (position === 'top' || position === 'bottom');\n\n    return {\n        update() {\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n\n            const positions = isVertical ? {\n                t: rb.top - eb.height - padding,\n                b: rb.bottom + padding\n            } : {\n                r: rb.right + padding,\n                l: rb.left - eb.width - padding\n            };\n\n            const variants = isVertical ? {\n                s: rb.left + rb.width - eb.width,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\n                e: rb.left\n            } : {\n                s: rb.bottom - eb.height,\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\n                e: rb.bottom - rb.height\n            };\n\n            function apply(bevs, vars, styleprop) {\n                const vertical = styleprop === 'top';\n                const adder = vertical ? eb.height : eb.width;\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\n\n                for (const ch of bevs) {\n                    const v = vars[ch];\n                    if (v > 0 && (v + adder) < win) {\n                        el.style[styleprop] = `${v}px`;\n                        break;\n                    }\n                }\n            }\n\n            apply(vBehaviour[variant], variants, isVertical ? 'left' : 'top');\n            apply(hBehaviour[position], positions, isVertical ? 'top' : 'left');\n        }\n    };\n}\n"],"sourceRoot":""}