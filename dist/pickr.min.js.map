{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js","webpack:///./src/js/libs/nanopop.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","_objectSpread","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","child","children","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","handleScroll","e","selectionStart","inc","Number","shiftKey","ctrlKey","deltaY","replace","v","length","val","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","numarize","array","test","undefined","type","exec","values","a","splitAt","substring","alpha","HSVaColor","ceil","that","toHSVA","rhsva","toString","concat","toFixed","toHSLA","hsvToHsl","rhsla","toRGBA","rrgba","toCMYK","rgb","hsvToCmyk","rcmyk","toHEXA","padStart","hsvToHex","toUpperCase","join","clone","clamp","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","trigger","update","wrapperRect","destroy","Selectable","className","onTap","forEach","classList","template","components","strings","useAsButton","inline","appClass","hidden","palette","preview","hue","opacity","keys","interaction","input","save","clear","int","find","add","contains","Pickr","constructor","pickr_defineProperty","this","swatchselect","change","init","disabled","comparison","swatches","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","reference","pos","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","variant","split","isVertical","rb","eb","positions","variants","apply","bevs","vars","styleprop","vertical","adder","win","ch","Nanopop","_root","button","app","requestAnimationFrame","cb","offsetParent","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","reduce","pv","cv","ci","querySelector","shadowRoot","buildPickr","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","comp","picker","_color","cssRGBaString","background","currentColor","_recalc","_updateOutput","remove","slider","backgroundColor","selectable","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","timeout","setTimeout","rs","clearTimeout","_eventBindings","event","args","_eventListener","callBacks","index","indexOf","splice","Color","_swatchColors","hsvaColorObject","removeSwatch","swatchColor","silent","destroyAndRemove","pickr","recalc","hueY","opacityY","pickerWrapper","pickerX","pickerY","string","utype","startsWith","click","getColorRepresentation","getColor","getRoot","enable","utils","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    for (const el of elements) {\n        for (const ev of events) {\n            el[method](ev, fn, {capture: false, ...options});\n        }\n    }\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a 'data-key' attribute will be saved in a object (which will be returned)\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, 'data-con');\n        const key = removeAttribute(element, 'data-key');\n\n        // Check and save element\n        if (key) {\n            base[key] = element;\n        }\n\n        // Check all children\n        const subtree = con ? (base[con] = {}) : base;\n        for (let child of Array.from(element.children)) {\n\n            // Check if element should be saved as array\n            const arr = removeAttribute(child, 'data-arr');\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = [])).push(child);\n            } else {\n                resolve(child, subtree);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param negative\n */\nexport function adjustableInputNumbers(el, negative = true) {\n\n    function handleScroll(e) {\n        const off = el.selectionStart;\n        const inc = ([1, 10, 100])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\n\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\n\n            // Check if number is in cursor range and increase it\n            if (i <= off && i + v.length >= off) {\n                const val = Number(v) + inc;\n                return !negative && val < 0 ? 0 : val;\n            }\n\n            return v;\n        });\n\n        el.focus();\n        el.setSelectionRange(off, off);\n\n        // Prevent default and trigger input event\n        e.preventDefault();\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n","// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let i = floor(h);\r\n\r\n    let f = h - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    let mod = i % 6;\r\n    let r = [v, q, p, p, t, v][mod];\r\n    let g = [t, v, v, q, p, p][mod];\r\n    let b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    let l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100, m /= 100, y /= 100, k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100, l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    let ns = (2 * s / (l + s)) * 100;\r\n    let v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSV(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\r\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                let [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break;\r\n\r\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\r\n            }\r\n            case 'rgba': {\r\n                let [, , r, g, b, a = 1] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], type};\r\n            }\r\n            case 'hex': {\r\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\r\n                let [, hex] = match;\r\n\r\n                // Fill up opacity if not declared\r\n                if (hex.length === 3) {\r\n                    hex += 'F';\r\n                } else if (hex.length === 6) {\r\n                    hex += 'FF';\r\n                }\r\n\r\n                let alpha;\r\n                if (hex.length === 4) {\r\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\r\n                } else if (hex.length === 8) {\r\n                    [hex, alpha] = splitAt(hex, 6);\r\n                }\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                alpha = parseInt(alpha, 16) / 255;\r\n                return {values: [...hexToHsv(hex), alpha], type};\r\n            }\r\n            case 'hsla': {\r\n                let [, , h, s, l, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], type};\r\n            }\r\n            case 'hsva': {\r\n                let [, , h, s, v, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [h, s, v, a], type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const {ceil} = Math;\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v];\r\n            const rhsva = hsva.map(ceil);\r\n\r\n            hsva.push(that.a);\r\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = hsvToHsl(that.h, that.s, that.v);\r\n            const rhsla = hsla.map(ceil);\r\n\r\n            hsla.push(that.a);\r\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = hsvToRgb(that.h, that.s, that.v);\r\n            const rrgba = rgba.map(ceil);\r\n\r\n            rgba.push(that.a);\r\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            const rcmyk = cmyk.map(ceil);\r\n\r\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            hex.toString = () => {\r\n\r\n                // Check if alpha channel make sense, convert it to 255 number space, convert\r\n                // to hex and pad it with zeros if needet.\r\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                    .toString(16)\r\n                    .toUpperCase().padStart(2, '0');\r\n\r\n                return `#${hex.join('').toUpperCase() + alpha}`;\r\n            };\r\n\r\n            return hex;\r\n        },\r\n\r\n        clone() {\r\n            return HSVaColor(that.h, that.s, that.v, that.a);\r\n        }\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nconst clamp = v => Math.max(Math.min(v, 1), 0);\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lockX: false,\r\n            lockY: false,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {element, wrapper} = options;\r\n            const b = wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (!options.lockX) {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (!options.lockY) {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            options.onchange(\r\n                clamp(x / wrapper.offsetWidth),\r\n                clamp(y / wrapper.offsetHeight)\r\n            );\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: wrapperRect.left + x,\r\n                clientY: wrapperRect.top + y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div data-key=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \r\n\r\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n","// Import styles\nimport '../scss/pickr.scss';\n\n// Import utils\nimport * as _     from './utils/utils';\nimport * as Color from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // Replace element with color picker\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        'swatchselect': [],\n        'change': [],\n        'save': [],\n        'init': []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n\n            default: '#42445A',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, inline, components, position} = opt;\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Finalize build\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        this._nanopop = Nanopop({\n            reference: this._root.button,\n            el: this._root.app,\n            pos: position\n        });\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const {parentElement} = opt.el;\n\n            if (parentElement.lastChild === opt.el) {\n                parentElement.appendChild(root.app);\n            } else {\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    if (!comp.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = x * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - y * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    if (!inst.options.comparison) {\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    }\n                }\n            }),\n\n            hue: Moveable({\n                lockX: true,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(x, y) {\n                    if (!comp.hue || !comp.palette) return;\n\n                    // Calculate hue\n                    inst._color.h = y * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lockX: true,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(x, y) {\n                    if (!comp.opacity || !comp.palette) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(y * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            _.adjustableInputNumbers(_root.interaction.result, false);\n        }\n\n        if (!options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                })\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n\n        // No repositioning needed if inline\n        if (!this.options.inline) {\n            this._nanopop.update();\n        }\n    }\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n\n        // remove .pcr-app\n        const app = this._root.app;\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        const pickr = this;\n        Object.keys(pickr).forEach(key => pickr[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Short names\n        const {hue, opacity, palette} = this.components;\n\n        // Calculate y position of hue slider\n        const hueWrapper = hue.options.wrapper;\n        const hueY = hueWrapper.offsetHeight * (h / 360);\n        hue.update(0, hueY);\n\n        // Calculate y position of opacity slider\n        const opacityWrapper = opacity.options.wrapper;\n        const opacityY = opacityWrapper.offsetHeight * a;\n        opacity.update(0, opacityY);\n\n        // Calculate y and x position of color palette\n        const pickerWrapper = palette.options.wrapper;\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\n        palette.update(pickerX, pickerY);\n\n        // Restore old state\n        this._recalc = recalc;\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '0.6.4';\nexport default Pickr;\n","/**\r\n * Micro positioning-engine\r\n * @param el\r\n * @param reference\r\n * @param pos\r\n * @param padding\r\n * @returns {{update(): void}}\r\n * @constructor\r\n */\r\nexport default function Nanopop({el, reference, pos, padding = 8}) {\r\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\r\n    const hBehaviour = {top: 'tb', right: 'rl', bottom: 'bt', left: 'lr'};\r\n    const [position, variant = 'middle'] = pos.split('-');\r\n    const isVertical = (position === 'top' || position === 'bottom');\r\n\r\n    return {\r\n        update() {\r\n            const rb = reference.getBoundingClientRect();\r\n            const eb = el.getBoundingClientRect();\r\n\r\n            const positions = isVertical ? {\r\n                t: rb.top - eb.height - padding,\r\n                b: rb.bottom + padding\r\n            } : {\r\n                r: rb.right + padding,\r\n                l: rb.left - eb.width - padding\r\n            };\r\n\r\n            const variants = isVertical ? {\r\n                s: rb.left + rb.width - eb.width,\r\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\r\n                e: rb.left\r\n            } : {\r\n                s: rb.bottom - eb.height,\r\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\r\n                e: rb.bottom - rb.height\r\n            };\r\n\r\n            function apply(bevs, vars, styleprop) {\r\n                const vertical = styleprop === 'top';\r\n                const adder = vertical ? eb.height : eb.width;\r\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\r\n\r\n                for (const ch of bevs) {\r\n                    const v = vars[ch];\r\n                    if (v > 0 && (v + adder) < win) {\r\n                        el.style[styleprop] = `${v}px`;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            apply(vBehaviour[variant], variants, isVertical ? 'left' : 'top');\r\n            apply(hBehaviour[position], positions, isVertical ? 'top' : 'left');\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":""}