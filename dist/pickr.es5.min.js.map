{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/pickr.js","webpack:///./src/js/libs/nanopop.js","webpack:///./src/js/template.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","once","element","event","fn","options","on","helper","apply","this","arguments","removeEventListener","eventListener","off","method","elements","events","length","undefined","HTMLCollection","NodeList","Array","from","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","el","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ev","_objectSpread","capture","err","return","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","base","con","subtree","_i","_Array$from","children","child","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","isNaN","isFinite","mul","deltaY","inc","Number","shiftKey","ctrlKey","newNum","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","Math","max","floor","round","hsvToRgb","h","v","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","_toConsumableArray","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","concat","_numarize4","_numarize4$","a","splitAt","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","rhsva","toString","toFixed","toHSLA","rhsla","toRGBA","rrgba","toCMYK","rgb","rcmyk","toHEXA","padStart","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","trigger","update","wrapperRect","destroy","Selectable","className","onTap","forEach","classList","selectable_toConsumableArray","Pickr","_this","_classCallCheck","pickr_defineProperty","swatchselect","change","save","init","appClass","useAsButton","disabled","comparison","components","interaction","strings","swatches","inline","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","_opt","preview","opacity","hue","palette","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","button","_root","requestAnimationFrame","cb","offsetParent","body","setColor","_nanopop","_ref","reference","pos","_ref$padding","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","_pos$split2","nanopop_slicedToArray","split","_pos$split2$","variant","isVertical","rb","eb","positions","variants","bevs","vars","styleprop","vertical","adder","win","Nanopop","app","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","hidden","int","reduce","pv","cv","ci","querySelector","shadowRoot","keys","input","clear","find","add","contains","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","comp","picker","_color","offsetHeight","cssRGBaString","background","currentColor","_recalc","_updateOutput","remove","slider","backgroundColor","selectable","_this2","eventBindings","_clearColor","setHSVA","pickr_toConsumableArray","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","timeout","setTimeout","rs","clearTimeout","_eventBindings","_this3","_len","args","_key","_eventListener","callBacks","index","indexOf","splice","_this4","Color","_swatchColors","hsvaColorObject","swatchColor","silent","_this$_root","_this5","pickr","recalc","_this$components","hueY","opacityY","pickerWrapper","pickerX","pickerY","string","_Color$parseToHSV2","utype","startsWith","click","utils","version"],"mappings":"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","file":"pickr.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\r\n * Add an eventlistener which will be fired only once.\r\n *\r\n * @param element Target element\r\n * @param event Event name\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const once = (element, event, fn, options) => on(element, event, function helper() {\r\n    fn.apply(this, arguments);\r\n    this.removeEventListener(event, helper);\r\n}, options);\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a 'data-key' attribute will be saved in a object (which will be returned)\r\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, 'data-con');\r\n        const key = removeAttribute(element, 'data-key');\r\n\r\n        // Check and save element\r\n        if (key) {\r\n            base[key] = element;\r\n        }\r\n\r\n        // Check all children\r\n        const subtree = con ? (base[con] = {}) : base;\r\n        for (let child of Array.from(element.children)) {\r\n\r\n            // Check if element should be saved as array\r\n            const arr = removeAttribute(child, 'data-arr');\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = [])).push(child);\r\n            } else {\r\n                resolve(child, subtree);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param negative\r\n */\r\nexport function adjustableInputNumbers(el, negative = true) {\r\n\r\n    // Check if a char represents a number\r\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\r\n\r\n    function handleScroll(e) {\r\n        const val = el.value;\r\n        const off = el.selectionStart;\r\n        let numStart = off;\r\n        let num = ''; // Will be the number as string\r\n\r\n        // Look back\r\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\r\n            num = val[i] + num;\r\n            numStart--; // Find start of number\r\n        }\r\n\r\n        // Look forward\r\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\r\n            num += val[i];\r\n        }\r\n\r\n        // Check if number is valid\r\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\r\n\r\n            const mul = e.deltaY < 0 ? 1 : -1;\r\n            const inc = ([1, 10, 100])[Number(e.shiftKey || e.ctrlKey * 2)] * mul;\r\n            let newNum = Number(num) + inc;\r\n\r\n            if (!negative && newNum < 0) {\r\n                newNum = 0;\r\n            }\r\n\r\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\r\n            const curPos = numStart + String(newNum).length;\r\n\r\n            // Update value and set cursor\r\n            el.value = newStr;\r\n            el.focus();\r\n            el.setSelectionRange(curPos, curPos);\r\n        }\r\n\r\n        // Prevent default\r\n        e.preventDefault();\r\n\r\n        // Trigger input event\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n","// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let i = floor(h);\r\n\r\n    let f = h - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    let mod = i % 6;\r\n    let r = [v, q, p, p, t, v][mod];\r\n    let g = [t, v, v, q, p, p][mod];\r\n    let b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    let l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100, m /= 100, y /= 100, k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100, l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    let ns = (2 * s / (l + s)) * 100;\r\n    let v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSV(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\r\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                let [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break;\r\n\r\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\r\n            }\r\n            case 'rgba': {\r\n                let [, , r, g, b, a = 1] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], type};\r\n            }\r\n            case 'hex': {\r\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\r\n                let [, hex] = match;\r\n\r\n                // Fill up opacity if not declared\r\n                if (hex.length === 3) {\r\n                    hex += 'F';\r\n                } else if (hex.length === 6) {\r\n                    hex += 'FF';\r\n                }\r\n\r\n                let alpha;\r\n                if (hex.length === 4) {\r\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\r\n                } else if (hex.length === 8) {\r\n                    [hex, alpha] = splitAt(hex, 6);\r\n                }\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                alpha = parseInt(alpha, 16) / 255;\r\n                return {values: [...hexToHsv(hex), alpha], type};\r\n            }\r\n            case 'hsla': {\r\n                let [, , h, s, l, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], type};\r\n            }\r\n            case 'hsva': {\r\n                let [, , h, s, v, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [h, s, v, a], type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const {ceil} = Math;\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v];\r\n            const rhsva = hsva.map(ceil);\r\n\r\n            hsva.push(that.a);\r\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = hsvToHsl(that.h, that.s, that.v);\r\n            const rhsla = hsla.map(ceil);\r\n\r\n            hsla.push(that.a);\r\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = hsvToRgb(that.h, that.s, that.v);\r\n            const rrgba = rgba.map(ceil);\r\n\r\n            rgba.push(that.a);\r\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            const rcmyk = cmyk.map(ceil);\r\n\r\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            hex.toString = () => {\r\n\r\n                // Check if alpha channel make sense, convert it to 255 number space, convert\r\n                // to hex and pad it with zeros if needet.\r\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0)\r\n                    .toString(16)\r\n                    .toUpperCase(), 2, '0');\r\n\r\n                return `#${hex.join('').toUpperCase() + alpha}`;\r\n            };\r\n\r\n            return hex;\r\n        },\r\n\r\n        clone() {\r\n            return HSVaColor(that.h, that.s, that.v, that.a);\r\n        }\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lockX: false,\r\n            lockY: false,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {element} = options;\r\n            const b = that.options.wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (!options.lockX) {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (!options.lockY) {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            options.onchange(x, y);\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: wrapperRect.left + x,\r\n                clientY: wrapperRect.top + y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","// Import styles\nimport '../scss/pickr.scss';\n\n// Import utils\nimport * as _     from './utils/utils';\nimport * as Color from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // Replace element with color picker\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        'swatchselect': [],\n        'change': [],\n        'save': [],\n        'init': []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n\n            default: '#42445A',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, inline, components, position} = opt;\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Finalize build\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._nanopop = Nanopop({\n                reference: that._root.button,\n                el: that._root.app,\n                pos: position\n            });\n\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const {parentElement} = opt.el;\n\n            if (parentElement.lastChild === opt.el) {\n                parentElement.appendChild(root.app);\n            } else {\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    if (!comp.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    // If the user changes the color, remove the cleared icon\n                    _root.button.classList.remove('clear');\n                }\n            }),\n\n            hue: Moveable({\n                lockX: true,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(x, y) {\n                    if (!comp.hue || !comp.palette) return;\n\n                    // Calculate hue\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lockX: true,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(x, y) {\n                    if (!comp.opacity || !comp.palette) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            _.adjustableInputNumbers(_root.interaction.result, false);\n        }\n\n        if (!options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                })\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n\n        // No repositioning needed if inline\n        if (!this.options.inline) {\n            this._nanopop.update();\n        }\n    }\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n\n        // remove .pcr-app\n        const app = this._root.app;\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        const pickr = this;\n        Object.keys(pickr).forEach(key => pickr[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Short names\n        const {hue, opacity, palette} = this.components;\n\n        // Calculate y position of hue slider\n        const hueWrapper = hue.options.wrapper;\n        const hueY = hueWrapper.offsetHeight * (h / 360);\n        hue.update(0, hueY);\n\n        // Calculate y position of opacity slider\n        const opacityWrapper = opacity.options.wrapper;\n        const opacityY = opacityWrapper.offsetHeight * a;\n        opacity.update(0, opacityY);\n\n        // Calculate y and x position of color palette\n        const pickerWrapper = palette.options.wrapper;\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\n        palette.update(pickerX, pickerY);\n\n        // Restore old state\n        this._recalc = recalc;\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '0.6.1';\nexport default Pickr;\n","/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, pos, padding = 8}) {\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\n    const hBehaviour = {top: 'tb', right: 'rl', bottom: 'bt', left: 'lr'};\n    const [position, variant = 'middle'] = pos.split('-');\n    const isVertical = (position === 'top' || position === 'bottom');\n\n    return {\n        update() {\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n\n            const positions = isVertical ? {\n                t: rb.top - eb.height - padding,\n                b: rb.bottom + padding\n            } : {\n                r: rb.right + padding,\n                l: rb.left - eb.width - padding\n            };\n\n            const variants = isVertical ? {\n                s: rb.left + rb.width - eb.width,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\n                e: rb.left\n            } : {\n                s: rb.bottom - eb.height,\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\n                e: rb.bottom - rb.height\n            };\n\n            function apply(bevs, vars, styleprop) {\n                const vertical = styleprop === 'top';\n                const adder = vertical ? eb.height : eb.width;\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\n\n                for (const ch of bevs) {\n                    const v = vars[ch];\n                    if (v > 0 && (v + adder) < win) {\n                        el.style[styleprop] = `${v}px`;\n                        break;\n                    }\n                }\n            }\n\n            apply(vBehaviour[variant], variants, isVertical ? 'left' : 'top');\n            apply(hBehaviour[position], positions, isVertical ? 'top' : 'left');\n        }\n    };\n}\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div data-key=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \r\n\r\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n"],"sourceRoot":""}