{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/libs/nanopop.js","webpack:///./src/js/pickr.js","webpack:///./src/js/template.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","children","child","arr","sub","push","keys","length","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","Math","max","floor","round","hsvToRgb","h","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSVA","toLowerCase","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","hexa","numarize","array","test","undefined","invalid","type","exec","alpha","values","a","split","join","raw","substring","HSVaColor","original","next","precision","toFixed","that","toHSVA","toString","toHSLA","hsvToHsl","toRGBA","toCMYK","rgb","hsvToCmyk","toHEXA","padStart","hsvToHex","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","onstop","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","update","destroy","Selectable","className","onTap","forEach","classList","Nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","getInfo","pos","cached","position","variant","isVertical","rb","eb","variants","vertical","leastApplied","apply","bevs","vars","styleprop","adder","win","sv","rot","v2Ok","v1Ok","Pickr","init","save","hide","show","clear","change","changestop","cancel","swatchselect","this","appClass","theme","useAsButton","disabled","comparison","closeOnScroll","outputPrecision","lockOpacity","autoReposition","components","interaction","strings","swatches","inline","sliders","default","defaultRepresentation","adjustableNumbers","showAlways","closeWithKey","includes","preview","opacity","hue","palette","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","_root","button","app","requestAnimationFrame","cb","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","_initializingActive","_emit","lo","hidden","int","reduce","pv","cv","ci","querySelector","shadowRoot","input","find","add","contains","appendChild","removeChild","parent","nextSibling","insertBefore","remove","parentNode","replaceChild","disable","transition","lastColor","inst","cs","repeat","so","sh","picker","_color","_recalc","_updateOutput","cssRGBaString","background","_swatchColors","currentColor","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","matchMedia","matches","margin","silent","alphaMakesAChange","event","args","_eventListener","callBacks","indexOf","splice","_parseLocalColor","swatchColor","recalc","string","utype","startsWith","click","utils","libs","version"],"mappings":"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","file":"pickr.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a ':ref' attribute will be saved in a object (which will be returned)\r\n * where the value of ':ref' is the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, ':obj');\r\n        const key = removeAttribute(element, ':ref');\r\n        const subtree = con ? (base[con] = {}) : base;\r\n\r\n        // Check and save element\r\n        key && (base[key] = element);\r\n        for (const child of Array.from(element.children)) {\r\n            const arr = removeAttribute(child, ':arr');\r\n            const sub = resolve(child, arr ? {} : subtree);\r\n\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = []))\r\n                    .push(Object.keys(sub).length ? sub : child);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n","// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n\n    // Since invalid color's will be parsed as black, filter them out\n    if (name.toLowerCase() === 'black') {\n        return '#000000';\n    }\n\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle === '#000000' ? null : ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    const i = floor(h);\n\n    const f = h - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    const mod = i % 6;\n    const r = [v, q, p, p, t, v][mod];\n    const g = [t, v, v, q, p, p][mod];\n    const b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        round(v).toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    const l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        const dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        const dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        const db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100;\n    m /= 100;\n    y /= 100;\n    k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100;\n    l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    const ns = (2 * s / (l + s)) * 100;\n    const v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSVA(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    invalid: for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // match[2] does only contain a truly value if rgba, hsla, or hsla got matched\n        const alpha = !!match[2];\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                const [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break invalid;\n\n                return {values: cmykToHsv(c, m, y, k), type};\n            }\n            case 'rgba': {\n                const [, , , r, g, b, a] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\n            }\n            case 'hexa': {\n                let [, hex] = match;\n\n                if (hex.length === 4 || hex.length === 3) {\n                    hex = hex.split('').map(v => v + v).join('');\n                }\n\n                const raw = hex.substring(0, 6);\n                let a = hex.substring(6);\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                a = a ? (parseInt(a, 16) / 255) : undefined;\n\n                return {values: [...hexToHsv(raw), a], a, type};\n            }\n            case 'hsla': {\n                const [, , , h, s, l, a] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [...hslToHsv(h, s, l), a], a, type};\n            }\n            case 'hsva': {\n                const [, , , h, s, v, a] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [h, s, v, a], a, type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const mapper = (original, next) => (precision = -1) => {\r\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\r\n    };\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v, that.a];\r\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\r\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\r\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            // Check if alpha channel make sense, convert it to 255 number space, convert\r\n            // to hex and pad it with zeros if needet.\r\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                .toString(16)\r\n                .toUpperCase().padStart(2, '0');\r\n\r\n            alpha && hex.push(alpha);\r\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\r\n            return hex;\r\n        },\r\n\r\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\n\nconst clamp = v => Math.max(Math.min(v, 1), 0);\nexport default function Moveable(opt) {\n\n    const that = {\n\n        // Assign default values\n        options: Object.assign({\n            lock: null,\n            onchange: () => 0,\n            onstop: () => 0\n        }, opt),\n\n        _tapstart(evt) {\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\n\n            // Prevent default touch event\n            evt.preventDefault();\n\n            // Trigger\n            that._tapmove(evt);\n        },\n\n        _tapmove(evt) {\n            const {options: {lock}, cache} = that;\n            const {element, wrapper} = options;\n            const b = wrapper.getBoundingClientRect();\n\n            let x = 0, y = 0;\n            if (evt) {\n                const touch = evt && evt.touches && evt.touches[0];\n                x = evt ? (touch || evt).clientX : 0;\n                y = evt ? (touch || evt).clientY : 0;\n\n                // Reset to bounds\n                if (x < b.left) x = b.left;\n                else if (x > b.left + b.width) x = b.left + b.width;\n                if (y < b.top) y = b.top;\n                else if (y > b.top + b.height) y = b.top + b.height;\n\n                // Normalize\n                x -= b.left;\n                y -= b.top;\n            } else if (cache) {\n                x = cache.x * b.width;\n                y = cache.y * b.height;\n            }\n\n            if (lock !== 'h') {\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            if (lock !== 'v') {\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\n            }\n\n            that.cache = {x: x / b.width, y: y / b.height};\n            const cx = clamp(x / wrapper.offsetWidth);\n            const cy = clamp(y / wrapper.offsetHeight);\n\n            switch (lock) {\n                case 'v':\n                    return options.onchange(cx);\n                case 'h':\n                    return options.onchange(cy);\n                default:\n                    return options.onchange(cx, cy);\n            }\n        },\n\n        _tapstop() {\n            that.options.onstop();\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\n        },\n\n        trigger() {\n            that._tapmove();\n        },\n\n        update(x = 0, y = 0) {\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\n\n            if (that.options.lock === 'h') {\n                y = x;\n            }\n\n            that._tapmove({\n                clientX: left + width * x,\n                clientY: top + height * y\n            });\n        },\n\n        destroy() {\n            const {options, _tapstart} = that;\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\n                passive: false\n            });\n        }\n    };\n\n    // Initilize\n    const {options, _tapstart} = that;\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\n        passive: false\n    });\n\n    return that;\n}\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","/**\r\n * Micro positioning-engine\r\n * @param el\r\n * @param reference\r\n * @param pos\r\n * @param padding\r\n * @returns {{update(): void}}\r\n * @constructor\r\n */\r\nexport default function Nanopop({el, reference, padding = 8}) {\r\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\r\n    const hBehaviour = {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'};\r\n\r\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\r\n        if (cached) return cached;\r\n        const [position, variant = 'middle'] = pos.split('-');\r\n        const isVertical = (position === 'top' || position === 'bottom');\r\n\r\n        return cache[pos] = {\r\n            position,\r\n            variant,\r\n            isVertical\r\n        };\r\n    })();\r\n\r\n    return {\r\n        update(pos) {\r\n            const {position, variant, isVertical} = getInfo(pos);\r\n            const rb = reference.getBoundingClientRect();\r\n            const eb = el.getBoundingClientRect();\r\n\r\n            const positions = vertical => vertical ? {\r\n                t: rb.top - eb.height - padding,\r\n                b: rb.bottom + padding\r\n            } : {\r\n                r: rb.right + padding,\r\n                l: rb.left - eb.width - padding\r\n            };\r\n\r\n            const variants = vertical => vertical ? {\r\n                s: rb.left + rb.width - eb.width,\r\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\r\n                e: rb.left\r\n            } : {\r\n                s: rb.bottom - eb.height,\r\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\r\n                e: rb.bottom - rb.height\r\n            };\r\n\r\n            const leastApplied = {};\r\n\r\n            function apply(bevs, vars, styleprop) {\r\n                const vertical = styleprop === 'top';\r\n                const adder = vertical ? eb.height : eb.width;\r\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\r\n\r\n                for (const ch of bevs) {\r\n                    const v = vars[ch];\r\n                    const sv = leastApplied[styleprop] = `${v}px`;\r\n\r\n                    if (v > 0 && (v + adder) < win) {\r\n                        el.style[styleprop] = sv;\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            for (const rot of [isVertical, !isVertical]) {\r\n                const v2Ok = apply(hBehaviour[position], positions(rot), rot ? 'top' : 'left');\r\n                const v1Ok = apply(vBehaviour[variant], variants(rot), rot ? 'left' : 'top');\r\n\r\n                if (v2Ok && v1Ok) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            el.style.left = leastApplied.left;\r\n            el.style.top = leastApplied.top;\r\n        }\r\n    };\r\n}\r\n","// Import utils\r\nimport * as _        from './utils/utils';\r\nimport {parseToHSVA} from './utils/color';\r\n\r\n// Import classes\r\nimport {HSVaColor} from './utils/hsvacolor';\r\nimport Moveable    from './libs/moveable';\r\nimport Selectable  from './libs/selectable';\r\nimport Nanopop     from './libs/nanopop';\r\nimport buildPickr  from './template';\r\n\r\nclass Pickr {\r\n\r\n    // Will be used to prevent specific actions during initilization\r\n    _initializingActive = true;\r\n\r\n    // If the current color value should be recalculated\r\n    _recalc = true;\r\n\r\n    // Current and last color for comparison\r\n    _color = HSVaColor();\r\n    _lastColor = HSVaColor();\r\n    _swatchColors = [];\r\n\r\n    // Evenlistener name: [callbacks]\r\n    _eventListener = {\r\n        init: [],\r\n        save: [],\r\n        hide: [],\r\n        show: [],\r\n        clear: [],\r\n        change: [],\r\n        changestop: [],\r\n        cancel: [],\r\n        swatchselect: []\r\n    };\r\n\r\n    constructor(opt) {\r\n\r\n        // Assign default values\r\n        this.options = opt = Object.assign({\r\n            appClass: null,\r\n            theme: 'classic',\r\n            useAsButton: false,\r\n            disabled: false,\r\n            comparison: true,\r\n            closeOnScroll: false,\r\n            outputPrecision: 0,\r\n            lockOpacity: false,\r\n            autoReposition: true,\r\n\r\n            components: {\r\n                interaction: {}\r\n            },\r\n\r\n            strings: {},\r\n            swatches: null,\r\n            inline: false,\r\n            sliders: null,\r\n\r\n            default: '#42445a',\r\n            defaultRepresentation: null,\r\n            position: 'bottom-middle',\r\n            adjustableNumbers: true,\r\n            showAlways: false,\r\n\r\n            closeWithKey: 'Escape'\r\n        }, opt);\r\n\r\n        const {swatches, components, theme, sliders, lockOpacity} = opt;\r\n\r\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\r\n            opt.sliders = 'h';\r\n        }\r\n\r\n        // Check interaction section\r\n        if (!components.interaction) {\r\n            components.interaction = {};\r\n        }\r\n\r\n        // Overwrite palette if preview, opacity or hue are true\r\n        const {preview, opacity, hue, palette} = components;\r\n        components.opacity = (!lockOpacity && opacity);\r\n        components.palette = palette || preview || opacity || hue;\r\n\r\n        // Initialize picker\r\n        this._preBuild();\r\n        this._buildComponents();\r\n        this._bindEvents();\r\n        this._finalBuild();\r\n\r\n        // Append pre-defined swatch colors\r\n        if (swatches && swatches.length) {\r\n            swatches.forEach(color => this.addSwatch(color));\r\n        }\r\n\r\n        // Initialize positioning engine\r\n        this._nanopop = Nanopop({\r\n            reference: this._root.button,\r\n            el: this._root.app\r\n        });\r\n\r\n        // Initilization is finish, pickr is visible and ready for usage\r\n        const {app} = this._root;\r\n        const that = this;\r\n        requestAnimationFrame((function cb() {\r\n\r\n            if (!app.offsetWidth && app.parentElement !== document.body) {\r\n                return requestAnimationFrame(cb);\r\n            }\r\n\r\n            // Apply default color\r\n            that.setColor(opt.default);\r\n            that._rePositioningPicker();\r\n\r\n            // Initialize color representation\r\n            if (opt.defaultRepresentation) {\r\n                that._representation = opt.defaultRepresentation;\r\n                that.setColorRepresentation(that._representation);\r\n            }\r\n\r\n            // Show pickr if locked\r\n            if (opt.showAlways) {\r\n                that.show();\r\n            }\r\n\r\n            // Initialization is done - pickr is usable, fire init event\r\n            that._initializingActive = false;\r\n            that._emit('init');\r\n        }));\r\n    }\r\n\r\n    // Does only the absolutly basic thing to initialize the components\r\n    _preBuild() {\r\n        const opt = this.options;\r\n\r\n        // Check if element is selector\r\n        if (typeof opt.el === 'string') {\r\n\r\n            // Resolve possible shadow dom access\r\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\r\n                pv = pv.querySelector(cv);\r\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\r\n            }, document);\r\n        }\r\n\r\n        // Create element and append it to body to\r\n        // prevent initialization errors\r\n        this._root = buildPickr(opt);\r\n\r\n        // Check if a custom button is used\r\n        if (opt.useAsButton) {\r\n            this._root.button = opt.el; // Replace button with customized button\r\n        }\r\n\r\n        document.body.appendChild(this._root.root);\r\n    }\r\n\r\n    _finalBuild() {\r\n        const opt = this.options;\r\n        const root = this._root;\r\n\r\n        // Remove from body\r\n        document.body.removeChild(root.root);\r\n\r\n        if (opt.inline) {\r\n            const parent = opt.el.parentElement;\r\n\r\n            if (opt.el.nextSibling) {\r\n                parent.insertBefore(root.app, opt.el.nextSibling);\r\n            } else {\r\n                parent.appendChild(root.app);\r\n            }\r\n        } else {\r\n            document.body.appendChild(root.app);\r\n        }\r\n\r\n        // Don't replace the the element if a custom button is used\r\n        if (!opt.useAsButton) {\r\n\r\n            // Replace element with actual color-picker\r\n            opt.el.parentNode.replaceChild(root.root, opt.el);\r\n        } else if (opt.inline) {\r\n            opt.el.remove();\r\n        }\r\n\r\n        // Check if it should be immediatly disabled\r\n        if (opt.disabled) {\r\n            this.disable();\r\n        }\r\n\r\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\r\n        if (!opt.comparison) {\r\n            root.button.style.transition = 'none';\r\n            if (!opt.useAsButton) {\r\n                root.preview.lastColor.style.transition = 'none';\r\n            }\r\n        }\r\n\r\n        this.hide();\r\n    }\r\n\r\n    _buildComponents() {\r\n\r\n        // Instance reference\r\n        const inst = this;\r\n        const cs = this.options.components;\r\n        const sliders = (inst.options.sliders || 'v').repeat(2);\r\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\r\n\r\n        const components = {\r\n\r\n            palette: Moveable({\r\n                element: inst._root.palette.picker,\r\n                wrapper: inst._root.palette.palette,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(x, y) {\r\n                    if (!cs.palette) return;\r\n                    const {_color, _root, options} = inst;\r\n\r\n                    // Update the input field only if the user is currently not typing\r\n                    if (inst._recalc) {\r\n\r\n                        // Calculate saturation based on the position\r\n                        _color.s = x * 100;\r\n\r\n                        // Calculate the value\r\n                        _color.v = 100 - y * 100;\r\n\r\n                        // Prevent falling under zero\r\n                        _color.v < 0 ? _color.v = 0 : 0;\r\n                        inst._updateOutput();\r\n                    }\r\n\r\n                    // Set picker and gradient color\r\n                    const cssRGBaString = _color.toRGBA().toString(0);\r\n                    this.element.style.background = cssRGBaString;\r\n                    this.wrapper.style.background = `\r\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\r\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\r\n                    `;\r\n\r\n                    // Check if color is locked\r\n                    if (!options.comparison) {\r\n                        _root.button.style.color = cssRGBaString;\r\n\r\n                        if (!options.useAsButton) {\r\n                            _root.preview.lastColor.style.color = cssRGBaString;\r\n                        }\r\n                    }\r\n\r\n                    // Check if there's a swatch which color matches the current one\r\n                    const hexa = _color.toHEXA().toString();\r\n                    for (const {el, color} of inst._swatchColors) {\r\n                        el.classList[hexa === color.toHEXA().toString() ? 'add' : 'remove']('pcr-active');\r\n                    }\r\n\r\n                    // Change current color\r\n                    _root.preview.currentColor.style.color = cssRGBaString;\r\n\r\n                    if (!inst.options.comparison) {\r\n\r\n                        // If the user changes the color, remove the cleared icon\r\n                        _root.button.classList.remove('clear');\r\n                    }\r\n                }\r\n            }),\r\n\r\n            hue: Moveable({\r\n                lock: sh === 'v' ? 'h' : 'v',\r\n                element: inst._root.hue.picker,\r\n                wrapper: inst._root.hue.slider,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(v) {\r\n                    if (!cs.hue || !cs.palette) return;\r\n\r\n                    // Calculate hue\r\n                    if (inst._recalc) {\r\n                        inst._color.h = v * 360;\r\n                    }\r\n\r\n                    // Update color\r\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            opacity: Moveable({\r\n                lock: so === 'v' ? 'h' : 'v',\r\n                element: inst._root.opacity.picker,\r\n                wrapper: inst._root.opacity.slider,\r\n\r\n                onstop: () => inst._emit('changestop', inst),\r\n                onchange(v) {\r\n                    if (!cs.opacity || !cs.palette) return;\r\n\r\n                    // Calculate opacity\r\n                    if (inst._recalc) {\r\n                        inst._color.a = Math.round(v * 1e2) / 100;\r\n                    }\r\n\r\n                    // Update color\r\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\r\n                    components.palette.trigger();\r\n                }\r\n            }),\r\n\r\n            selectable: Selectable({\r\n                elements: inst._root.interaction.options,\r\n                className: 'active',\r\n\r\n                onchange(e) {\r\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\r\n                    inst._recalc && inst._updateOutput();\r\n                }\r\n            })\r\n        };\r\n\r\n        this._components = components;\r\n    }\r\n\r\n    _bindEvents() {\r\n        const {_root, options} = this;\r\n\r\n        const eventBindings = [\r\n\r\n            // Clear color\r\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\r\n\r\n            // Select last color on click\r\n            _.on([\r\n                _root.interaction.cancel,\r\n                _root.preview.lastColor\r\n            ], 'click', () => {\r\n                this._emit('cancel', this);\r\n                this.setHSVA(...this._lastColor.toHSVA(), true);\r\n            }),\r\n\r\n            // Save color\r\n            _.on(_root.interaction.save, 'click', () => {\r\n                !this.applyColor() && !options.showAlways && this.hide();\r\n            }),\r\n\r\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\r\n\r\n                // Fire listener if initialization is finish and changed color was valid\r\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\r\n                    this._emit('change', this._color);\r\n                }\r\n\r\n                e.stopImmediatePropagation();\r\n            }),\r\n\r\n            // Detect user input and disable auto-recalculation\r\n            _.on(_root.interaction.result, ['focus', 'blur'], e => {\r\n                this._recalc = e.type === 'blur';\r\n                this._recalc && this._updateOutput();\r\n            }),\r\n\r\n            // Cancel input detection on color change\r\n            _.on([\r\n                _root.palette.palette,\r\n                _root.palette.picker,\r\n                _root.hue.slider,\r\n                _root.hue.picker,\r\n                _root.opacity.slider,\r\n                _root.opacity.picker\r\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\r\n        ];\r\n\r\n        // Provide hiding / showing abilities only if showAlways is false\r\n        if (!options.showAlways) {\r\n            const ck = options.closeWithKey;\r\n\r\n            eventBindings.push(\r\n                // Save and hide / show picker\r\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\r\n\r\n                // Close with escape key\r\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\r\n\r\n                // Cancel selecting if the user taps behind the color picker\r\n                _.on(document, ['touchstart', 'mousedown'], e => {\r\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\r\n                        this.hide();\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Make input adjustable if enabled\r\n        if (options.adjustableNumbers) {\r\n            const ranges = {\r\n                rgba: [255, 255, 255, 1],\r\n                hsva: [360, 100, 100, 1],\r\n                hsla: [360, 100, 100, 1],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\r\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\r\n\r\n                if (range) {\r\n                    const max = range[index];\r\n\r\n                    // Calculate next reasonable number\r\n                    const nv = o + (max >= 100 ? step * 1000 : step);\r\n\r\n                    // Apply range of zero up to max, fix floating-point issues\r\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\r\n                }\r\n                return o;\r\n\r\n            });\r\n        }\r\n\r\n        if (options.autoReposition && !options.inline) {\r\n            let timeout = null;\r\n            const that = this;\r\n\r\n            // Re-calc position on window resize, scroll and wheel\r\n            eventBindings.push(\r\n                _.on(window, ['scroll', 'resize'], () => {\r\n                    if (that.isOpen()) {\r\n\r\n                        if (options.closeOnScroll) {\r\n                            that.hide();\r\n                        }\r\n\r\n                        if (timeout === null) {\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n\r\n                            // Update position on every frame\r\n                            requestAnimationFrame(function rs() {\r\n                                that._rePositioningPicker();\r\n                                (timeout !== null) && requestAnimationFrame(rs);\r\n                            });\r\n                        } else {\r\n                            clearTimeout(timeout);\r\n                            timeout = setTimeout(() => timeout = null, 100);\r\n                        }\r\n                    }\r\n                }, {capture: true})\r\n            );\r\n        }\r\n\r\n        // Save bindings\r\n        this._eventBindings = eventBindings;\r\n    }\r\n\r\n    _rePositioningPicker() {\r\n        const {options} = this;\r\n\r\n        // No repositioning needed if inline\r\n        if (!options.inline) {\r\n            const {app} = this._root;\r\n\r\n            if (matchMedia('(max-width: 576px)').matches) {\r\n                Object.assign(app.style, {\r\n                    margin: 'auto',\r\n                    height: `${app.getBoundingClientRect().height}px`,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0\r\n                });\r\n            } else {\r\n                Object.assign(app.style, {\r\n                    margin: null,\r\n                    right: null,\r\n                    top: null,\r\n                    bottom: null,\r\n                    left: null,\r\n                    height: null\r\n                });\r\n\r\n                this._nanopop.update(options.position);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateOutput() {\r\n        const {_root, _color, options} = this;\r\n\r\n        // Check if component is present\r\n        if (_root.interaction.type()) {\r\n\r\n            // Construct function name and call if present\r\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\r\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\r\n                _color[method]().toString(options.outputPrecision) : '';\r\n        }\r\n\r\n        // Fire listener if initialization is finish\r\n        if (!this._initializingActive && this._recalc) {\r\n            this._emit('change', _color);\r\n        }\r\n    }\r\n\r\n    _clearColor(silent = false) {\r\n        const {_root, options} = this;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!options.useAsButton) {\r\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\r\n        }\r\n\r\n        _root.button.classList.add('clear');\r\n\r\n        if (!options.showAlways) {\r\n            this.hide();\r\n        }\r\n\r\n        if (!this._initializingActive && !silent) {\r\n\r\n            // Fire listener\r\n            this._emit('save', null);\r\n            this._emit('clear', this);\r\n        }\r\n    }\r\n\r\n    _parseLocalColor(str) {\r\n        const {values, type, a} = parseToHSVA(str);\r\n        const {lockOpacity} = this.options;\r\n        const alphaMakesAChange = a !== undefined && a !== 1;\r\n\r\n        // If no opacity is applied, add undefined at the very end which gets\r\n        // set to 1 in setHSVA\r\n        if (values && values.length === 3) {\r\n            values[3] = undefined;\r\n        }\r\n\r\n        return {\r\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\r\n            type\r\n        };\r\n    }\r\n\r\n    _emit(event, ...args) {\r\n        this._eventListener[event].forEach(cb => cb(...args, this));\r\n    }\r\n\r\n    on(event, cb) {\r\n\r\n        // Validate\r\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\r\n            this._eventListener[event].push(cb);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    off(event, cb) {\r\n        const callBacks = this._eventListener[event];\r\n\r\n        if (callBacks) {\r\n            const index = callBacks.indexOf(cb);\r\n\r\n            if (~index) {\r\n                callBacks.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Appends a color to the swatch palette\r\n     * @param color\r\n     * @returns {boolean}\r\n     */\r\n    addSwatch(color) {\r\n        const {values} = this._parseLocalColor(color);\r\n\r\n        if (values) {\r\n            const {_swatchColors, _root} = this;\r\n            const color = HSVaColor(...values);\r\n\r\n            // Create new swatch HTMLElement\r\n            const el = _.createElementFromString(\r\n                `<button type=\"button\" style=\"color: ${color.toRGBA().toString(0)}\"/>`\r\n            );\r\n\r\n            // Append element and save swatch data\r\n            _root.swatches.appendChild(el);\r\n            _swatchColors.push({el, color});\r\n\r\n            // Bind event\r\n            this._eventBindings.push(\r\n                _.on(el, 'click', () => {\r\n                    this.setHSVA(...color.toHSVA(), true);\r\n                    this._emit('swatchselect', color);\r\n                    this._emit('change', color);\r\n                })\r\n            );\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Removes a swatch color by it's index\r\n     * @param index\r\n     * @returns {boolean}\r\n     */\r\n    removeSwatch(index) {\r\n        const swatchColor = this._swatchColors[index];\r\n\r\n        // Check swatch data\r\n        if (swatchColor) {\r\n            const {el} = swatchColor;\r\n\r\n            // Remove HTML child and swatch data\r\n            this._root.swatches.removeChild(el);\r\n            this._swatchColors.splice(index, 1);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    applyColor(silent = false) {\r\n        const {preview, button} = this._root;\r\n\r\n        // Change preview and current color\r\n        const cssRGBaString = this._color.toRGBA().toString();\r\n        preview.lastColor.style.color = cssRGBaString;\r\n\r\n        // Change only the button color if it isn't customized\r\n        if (!this.options.useAsButton) {\r\n            button.style.color = cssRGBaString;\r\n        }\r\n\r\n        // User changed the color so remove the clear clas\r\n        button.classList.remove('clear');\r\n\r\n        // Save last color\r\n        this._lastColor = this._color.clone();\r\n\r\n        // Fire listener\r\n        if (!this._initializingActive && !silent) {\r\n            this._emit('save', this._color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys\r\n     */\r\n    destroy() {\r\n        this._eventBindings.forEach(args => _.off(...args));\r\n\r\n        Object.keys(this._components)\r\n            .forEach(key => this._components[key].destroy());\r\n    }\r\n\r\n    /**\r\n     * Destroy's all functionalitys and removes\r\n     * the pickr element.\r\n     */\r\n    destroyAndRemove() {\r\n        this.destroy();\r\n        const {root, app} = this._root;\r\n\r\n        // Remove element\r\n        if (root.parentElement) {\r\n            root.parentElement.removeChild(root);\r\n        }\r\n\r\n        // remove .pcr-app\r\n        app.parentElement.removeChild(app);\r\n\r\n        // There are references to various DOM elements stored in the pickr instance\r\n        // This cleans all of them to avoid detached DOMs\r\n        Object.keys(this)\r\n            .forEach(key => this[key] = null);\r\n    }\r\n\r\n    /**\r\n     * Hides the color-picker ui.\r\n     */\r\n    hide() {\r\n        this._root.app.classList.remove('visible');\r\n        this._emit('hide', this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Shows the color-picker ui.\r\n     */\r\n    show() {\r\n\r\n        if (!this.options.disabled) {\r\n            this._root.app.classList.add('visible');\r\n            this._rePositioningPicker();\r\n            this._emit('show', this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @return {boolean} If the color picker is currently open\r\n     */\r\n    isOpen() {\r\n        return this._root.app.classList.contains('visible');\r\n    }\r\n\r\n    /**\r\n     * Set a specific color.\r\n     * @param h Hue\r\n     * @param s Saturation\r\n     * @param v Value\r\n     * @param a Alpha channel (0 - 1)\r\n     * @param silent If the button should not change the color\r\n     * @return boolean if the color has been accepted\r\n     */\r\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\r\n\r\n        // Deactivate color calculation\r\n        const recalc = this._recalc; // Save state\r\n        this._recalc = false;\r\n\r\n        // Validate input\r\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\r\n            return false;\r\n        }\r\n\r\n        // Override current color and re-active color calculation\r\n        this._color = HSVaColor(h, s, v, a);\r\n\r\n        // Update slider and palette\r\n        const {hue, opacity, palette} = this._components;\r\n        hue.update((h / 360));\r\n        opacity.update(a);\r\n        palette.update(s / 100, 1 - (v / 100));\r\n\r\n        // Check if call is silent\r\n        if (!silent) {\r\n            this.applyColor();\r\n        }\r\n\r\n        // Update output if recalculation is enabled\r\n        if (recalc) {\r\n            this._updateOutput();\r\n        }\r\n\r\n        // Restore old state\r\n        this._recalc = recalc;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to parse a string which represents a color.\r\n     * Examples: #fff\r\n     *           rgb 10 10 200\r\n     *           hsva 10 20 5 0.5\r\n     * @param string\r\n     * @param silent\r\n     */\r\n    setColor(string, silent = false) {\r\n\r\n        // Check if null\r\n        if (string === null) {\r\n            this._clearColor(silent);\r\n            return true;\r\n        }\r\n\r\n        const {values, type} = this._parseLocalColor(string);\r\n\r\n        // Check if color is ok\r\n        if (values) {\r\n\r\n            // Change selected color format\r\n            const utype = type.toUpperCase();\r\n            const {options} = this._root.interaction;\r\n            const target = options.find(el => el.getAttribute('data-type') === utype);\r\n\r\n            // Auto select only if not hidden\r\n            if (target && !target.hidden) {\r\n                for (const el of options) {\r\n                    el.classList[el === target ? 'add' : 'remove']('active');\r\n                }\r\n            }\r\n\r\n            this.setColorRepresentation(utype);\r\n            return this.setHSVA(...values, silent);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Changes the color _representation.\r\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\r\n     * @param type\r\n     * @returns {boolean} if the selected type was valid.\r\n     */\r\n    setColorRepresentation(type) {\r\n\r\n        // Force uppercase to allow a case-sensitiv comparison\r\n        type = type.toUpperCase();\r\n\r\n        // Find button with given type and trigger click event\r\n        return !!this._root.interaction.options\r\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\r\n    }\r\n\r\n    /**\r\n     * Returns the current color representaion. See setColorRepresentation\r\n     * @returns {*}\r\n     */\r\n    getColorRepresentation() {\r\n        return this._representation;\r\n    }\r\n\r\n    /**\r\n     * @returns HSVaColor Current HSVaColor object.\r\n     */\r\n    getColor() {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * @returns The root HTMLElement with all his components.\r\n     */\r\n    getRoot() {\r\n        return this._root;\r\n    }\r\n\r\n    /**\r\n     * Disable pickr\r\n     */\r\n    disable() {\r\n        this.hide();\r\n        this.options.disabled = true;\r\n        this._root.button.classList.add('disabled');\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enable pickr\r\n     */\r\n    enable() {\r\n        this.options.disabled = false;\r\n        this._root.button.classList.remove('disabled');\r\n        return this;\r\n    }\r\n}\r\n\r\n// Expose pickr utils\r\nPickr.utils = _;\r\n\r\n// Expose libraries for easier integration in things build on top of it\r\nPickr.libs = {\r\n    HSVaColor,\r\n    Moveable,\r\n    Nanopop,\r\n    Selectable\r\n};\r\n\r\n// Create instance via method\r\nPickr.create = options => new Pickr(options);\r\n\r\n// Assign version and export\r\nPickr.version = '1.3.0';\r\nexport default Pickr;\r\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass, theme, lockOpacity: lo}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div :ref=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" :ref=\"swatches\"></div> \r\n\r\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lo ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lo ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lo ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lo ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${s.cancel || 'Cancel'}\" type=\"button\" ${hidden(c.interaction.cancel)}>\r\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n"],"sourceRoot":""}