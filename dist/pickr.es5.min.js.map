{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/lib/utils.js","webpack:///./src/js/lib/color.js","webpack:///./src/js/lib/hsvacolor.js","webpack:///./src/js/helper/moveable.js","webpack:///./src/js/helper/selectable.js","webpack:///./src/js/pickr.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","once","element","event","fn","options","on","helper","apply","this","arguments","removeEventListener","eventListener","off","method","elements","events","length","undefined","HTMLCollection","NodeList","Array","from","isArray","forEach","el","ev","_objectSpread","capture","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","base","con","children","subtree","_i","child","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","isNaN","isFinite","mul","deltaY","inc","ctrlKey","newNum","Number","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","min","Math","max","hsvToRgb","h","v","floor","f","q","mod","hsvToHex","map","round","toString","padStart","hsvToCmyk","k","rgb","g","b","hsvToHsl","rgbToHsv","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","_toConsumableArray","hslToHsv","hexToHsv","hex","match","parseInt","parseToHSV","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","concat","_numarize4","_numarize4$","a","splitAt","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","rhsva","toFixed","toHSLA","Color","rhsla","toRGBA","rrgba","toCMYK","rcmyk","toHEX","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","wrapperRect","wrapper","getBoundingClientRect","cache","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","trigger","update","destroy","passive","Selectable","className","_ontap","classList","Pickr","_this","_classCallCheck","useAsButton","disabled","comparison","components","interaction","strings","swatches","default","defaultRepresentation","position","adjustableNumbers","showAlways","parent","closeWithKey","_initializingActive","_recalc","_color","_lastColor","_swatchColors","_eventListener","swatchselect","change","save","init","_preBuild","_buildComponents","_bindEvents","_representation","setColorRepresentation","_finalBuild","_rePositioningPicker","color","addSwatch","requestAnimationFrame","cb","_root","app","offsetParent","setColor","_emit","hidden","int","querySelector","preview","hue","opacity","keys","input","clear","find","add","contains","button","body","appendChild","removeChild","replaceChild","disable","transition","lastColor","hide","inst","comp","palette","picker","offsetHeight","cssRGBaString","background","currentColor","_updateOutput","remove","slider","backgroundColor","selectable","_this2","eventBindings","_clearColor","setHSVA","pickr_toConsumableArray","applyColor","result","stopImmediatePropagation","ck","isOpen","show","code","some","_eventBindings","relative","marginLeft","marginTop","bb","ab","as","bottom","innerHeight","pos","middle","right","cl","getComputedStyle","newLeft","leftClip","rightClip","innerWidth","_this3","_len","args","_key","callBacks","index","indexOf","splice","_this4","hsvaColorObject","swatchColor","silent","_this$_root","_this5","recalc","_this$components","hueY","opacityY","pickerWrapper","pickerX","pickerY","string","_Color$parseToHSV2","utype","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","click","utils","version"],"mappings":"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","file":"pickr.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\r\n * Add an eventlistener which will be fired only once.\r\n *\r\n * @param element Target element\r\n * @param event Event name\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const once = (element, event, fn, options) => on(element, event, function helper() {\r\n    fn.apply(this, arguments);\r\n    this.removeEventListener(event, helper);\r\n}, options);\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    elements.forEach(el =>\r\n        events.forEach(ev =>\r\n            el[method](ev, fn, {capture: false, ...options})\r\n        )\r\n    );\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a 'data-key' attribute will be saved in a object (which will be returned)\r\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, 'data-con');\r\n        const key = removeAttribute(element, 'data-key');\r\n\r\n        // Check and save element\r\n        if (key) {\r\n            base[key] = element;\r\n        }\r\n\r\n        // Check all children\r\n        const children = Array.from(element.children);\r\n        const subtree = con ? (base[con] = {}) : base;\r\n        for (let child of children) {\r\n\r\n            // Check if element should be saved as array\r\n            const arr = removeAttribute(child, 'data-arr');\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = [])).push(child);\r\n            } else {\r\n                resolve(child, subtree);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param negative\r\n */\r\nexport function adjustableInputNumbers(el, negative = true) {\r\n\r\n    // Check if a char represents a number\r\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\r\n\r\n    function handleScroll(e) {\r\n        const val = el.value;\r\n        const off = el.selectionStart;\r\n        let numStart = off;\r\n        let num = ''; // Will be the number as string\r\n\r\n        // Look back\r\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\r\n            num = val[i] + num;\r\n            numStart--; // Find start of number\r\n        }\r\n\r\n        // Look forward\r\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\r\n            num += val[i];\r\n        }\r\n\r\n        // Check if number is valid\r\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\r\n\r\n            const mul = e.deltaY < 0 ? 1 : -1;\r\n            const inc = e.ctrlKey ? mul * 5 : mul;\r\n            let newNum = Number(num) + inc;\r\n\r\n            if (!negative && newNum < 0) {\r\n                newNum = 0;\r\n            }\r\n\r\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\r\n            const curPos = numStart + String(newNum).length;\r\n\r\n            // Update value and set cursor\r\n            el.value = newStr;\r\n            el.focus();\r\n            el.setSelectionRange(curPos, curPos);\r\n        }\r\n\r\n        // Prevent default\r\n        e.preventDefault();\r\n\r\n        // Trigger input event\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}","// Shorthands\r\nconst min = Math.min,\r\n    max = Math.max;\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let i = Math.floor(h);\r\n\r\n    let f = h - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    let mod = i % 6;\r\n    let r = [v, q, p, p, t, v][mod];\r\n    let g = [t, v, v, q, p, p][mod];\r\n    let b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v => Math.round(v).toString(16).padStart(2, '0'));\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    let l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100, m /= 100, y /= 100, k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100, l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    let ns = (2 * s / (l + s)) * 100;\r\n    let v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSV(str) {\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\r\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    for (let type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                let [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break;\r\n\r\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\r\n            }\r\n            case 'rgba': {\r\n                let [, , r, g, b, a = 1] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], type};\r\n            }\r\n            case 'hex': {\r\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\r\n                let [, hex] = match;\r\n\r\n                // Fill up opacity if not declared\r\n                if (hex.length === 3) {\r\n                    hex += 'F';\r\n                } else if (hex.length === 6) {\r\n                    hex += 'FF';\r\n                }\r\n\r\n                let alpha;\r\n                if (hex.length === 4) {\r\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\r\n                } else if (hex.length === 8) {\r\n                    [hex, alpha] = splitAt(hex, 6);\r\n                }\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                alpha = parseInt(alpha, 16) / 255;\r\n                return {values: [...hexToHsv(hex), alpha], type};\r\n            }\r\n            case 'hsla': {\r\n                let [, , h, s, l, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], type};\r\n            }\r\n            case 'hsva': {\r\n                let [, , h, s, v, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [h, s, v, a], type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}","import * as Color from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n\r\n    const ceil = Math.ceil;\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v];\r\n            const rhsva = hsva.map(ceil);\r\n\r\n            hsva.push(that.a);\r\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = Color.hsvToHsl(that.h, that.s, that.v);\r\n            const rhsla = hsla.map(ceil);\r\n\r\n            hsla.push(that.a);\r\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = Color.hsvToRgb(that.h, that.s, that.v);\r\n            const rrgba = rgba.map(ceil);\r\n\r\n            rgba.push(that.a);\r\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = Color.hsvToCmyk(that.h, that.s, that.v);\r\n            const rcmyk = cmyk.map(ceil);\r\n\r\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\r\n            return cmyk;\r\n        },\r\n\r\n        toHEX() {\r\n            const hex = Color.hsvToHex(...[that.h, that.s, that.v]);\r\n\r\n            hex.toString = () => {\r\n\r\n                // Check if alpha channel make sense, convert it to 255 number space, convert\r\n                // to hex and pad it with zeros if needet.\r\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                    .toString(16)\r\n                    .toUpperCase()\r\n                    .padStart(2, '0');\r\n\r\n                return `#${hex.join('').toUpperCase() + alpha}`;\r\n            };\r\n\r\n            return hex;\r\n        },\r\n\r\n        clone() {\r\n            return HSVaColor(that.h, that.s, that.v, that.a);\r\n        }\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from './../lib/utils';\n\nexport default function Moveable(opt) {\n\n    const that = {\n\n        // Assign default values\n        options: Object.assign({\n            lockX: false,\n            lockY: false,\n            onchange: () => 0\n        }, opt),\n\n        _tapstart(evt) {\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\n\n            // Prevent default touch event\n            evt.preventDefault();\n            that.wrapperRect = that.options.wrapper.getBoundingClientRect();\n\n            // Trigger\n            that._tapmove(evt);\n        },\n\n        _tapmove(evt) {\n            const {options, cache} = that;\n            const {element} = options;\n            const b = that.wrapperRect;\n\n            let x = 0, y = 0;\n            if (evt) {\n                const touch = evt && evt.touches && evt.touches[0];\n                x = evt ? (touch || evt).clientX : 0;\n                y = evt ? (touch || evt).clientY : 0;\n\n                // Reset to bounds\n                if (x < b.left) x = b.left;\n                else if (x > b.left + b.width) x = b.left + b.width;\n                if (y < b.top) y = b.top;\n                else if (y > b.top + b.height) y = b.top + b.height;\n\n                // Normalize\n                x -= b.left;\n                y -= b.top;\n            } else if (cache) {\n                x = cache.x;\n                y = cache.y;\n            }\n\n            if (!options.lockX) {\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            if (!options.lockY) {\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            that.cache = {x, y};\n            options.onchange(x, y);\n        },\n\n        _tapstop() {\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\n        },\n\n        trigger() {\n            that.wrapperRect = that.options.wrapper.getBoundingClientRect();\n            that._tapmove();\n        },\n\n        update(x = 0, y = 0) {\n            that.wrapperRect = that.options.wrapper.getBoundingClientRect();\n            that._tapmove({\n                clientX: that.wrapperRect.left + x,\n                clientY: that.wrapperRect.top + y\n            });\n        },\n\n        destroy() {\n            const {options, _tapstart} = that;\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\n                passive: false\n            });\n        }\n    };\n\n    // Instance var\n    that.wrapperRect = that.options.wrapper.getBoundingClientRect();\n\n    // Initilize\n    const {options, _tapstart} = that;\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\n        passive: false\n    });\n\n    return that;\n}\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            onchange: () => 0,\r\n            className: '',\r\n            elements: []\r\n        }, opt),\r\n\r\n        _ontap(evt) {\r\n            const opt = that.options;\r\n            opt.elements.forEach(e =>\r\n                e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n            );\r\n\r\n            opt.onchange(evt);\r\n        },\r\n\r\n        destroy() {\r\n            _.off(that.options.elements, 'click', this._ontap);\r\n        }\r\n    };\r\n\r\n    _.on(that.options.elements, 'click', that._ontap);\r\n    return that;\r\n}","// Import styles\nimport '../scss/pickr.scss';\n\n// Import utils\nimport * as _     from './lib/utils';\nimport * as Color from './lib/color';\n\n// Import classes\nimport {HSVaColor} from './lib/hsvacolor';\nimport Moveable    from './helper/moveable';\nimport Selectable  from './helper/selectable';\n\nclass Pickr {\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = Object.assign({\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {interaction: {}},\n            strings: {},\n\n            swatches: null,\n\n            default: 'fff',\n            defaultRepresentation: 'HEX',\n            position: 'middle',\n            adjustableNumbers: true,\n            showAlways: false,\n            parent: undefined,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        // Check interaction section\n        if (!this.options.components.interaction) {\n            this.options.components.interaction = {};\n        }\n\n        // Will be used to prevent specific actions during initilization\n        this._initializingActive = true;\n\n        // Replace element with color picker\n        this._recalc = true;\n\n        // Current and last color for comparison\n        this._color = new HSVaColor();\n        this._lastColor = new HSVaColor();\n        this._swatchColors = [];\n\n        // Evenlistener name: [callbacks]\n        this._eventListener = {\n            'swatchselect': [],\n            'change': [],\n            'save': [],\n            'init': []\n        };\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Initialize color _epresentation\n        this._representation = this.options.defaultRepresentation;\n        this.setColorRepresentation(this._representation);\n\n        // Finalize build\n        this._finalBuild();\n        this._rePositioningPicker();\n\n        // Append pre-defined swatch colors\n        const {swatches} = this.options;\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initilization is finish, pickr is visible and ready for usage\n        requestAnimationFrame((function cb() {\n            if (!this._root.app.offsetParent) {\n                return requestAnimationFrame(cb.bind(this));\n            }\n\n            this.setColor(this.options.default);\n            this._initializingActive = false;\n            this._emit('init');\n        }).bind(this));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n            opt.el = document.querySelector(opt.el);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = create(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n\n            // Check if the user has an alternative location defined, used body as fallback\n            if (!opt.parent) {\n                opt.parent = 'body';\n            }\n\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        // Check parent option\n        if (opt.parent) {\n\n            // Check if element is selector\n            if (typeof opt.parent === 'string') {\n                opt.parent = document.querySelector(opt.parent);\n            }\n\n            opt.parent.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentElement.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        // Check showAlways option\n        opt.showAlways ? root.app.classList.add('visible') : this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent), \n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.background = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.background = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.background = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    // If the user changes the color, remove the cleared icon\n                    _root.button.classList.remove('clear');\n                }\n            }),\n\n            hue: Moveable({\n                lockX: true,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(x, y) {\n                    if (!comp.hue) return;\n\n                    // Calculate hue\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lockX: true,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(x, y) {\n                    if (!comp.opacity) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true),\n\n            // Repositioning on resize\n            _.on(window, 'resize', () => this._rePositioningPicker)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            _.adjustableInputNumbers(_root.interaction.result, false);\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const root = this._root;\n        const app = this._root.app;\n\n        // Check if user has defined a parent\n        if (this.options.parent) {\n            const relative = root.button.getBoundingClientRect();\n            app.style.position = 'fixed';\n            app.style.marginLeft = `${relative.left}px`;\n            app.style.marginTop = `${relative.top}px`;\n        }\n\n        const bb = root.button.getBoundingClientRect();\n        const ab = app.getBoundingClientRect();\n        const as = app.style;\n\n        // Check if picker is cuttet of from the top & bottom\n        if (ab.bottom > window.innerHeight) {\n            as.top = `${-(ab.height) - 5}px`;\n        } else if (bb.bottom + ab.height < window.innerHeight) {\n            as.top = `${bb.height + 5}px`;\n        }\n\n        // Positioning picker on the x-axis\n        const pos = {\n            left: -(ab.width) + bb.width,\n            middle: -(ab.width / 2) + bb.width / 2,\n            right: 0\n        };\n\n        const cl = parseInt(getComputedStyle(app).left, 10);\n        let newLeft = pos[this.options.position];\n        const leftClip = (ab.left - cl) + newLeft;\n        const rightClip = (ab.left - cl) + newLeft + ab.width;\n\n        /**\n         * First check if position is left or right but\n         * pickr-app cannot set to left AND right because it would\n         * be clipped by the browser width. If so, wrap it and position\n         * pickr below button via the pos[middle] value.\n         * The current selected posiotion should'nt be the middle.di\n         */\n        if (this.options.position !== 'middle' && (\n            (leftClip < 0 && -leftClip < ab.width / 2) ||\n            (rightClip > window.innerWidth && rightClip - window.innerWidth < ab.width / 2))) {\n            newLeft = pos['middle'];\n\n            /**\n             * Even if set to middle pickr is getting clipped, so\n             * set it to left / right.\n             */\n        } else if (leftClip < 0) {\n            newLeft = pos['right'];\n        } else if (rightClip > window.innerWidth) {\n            newLeft = pos['left'];\n        }\n\n        as.left = `${newLeft}px`;\n    }\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.background = 'rgba(255, 255, 255, 0.4)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        // Fire listener\n        this._emit('save', null);\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button  style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.background = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.background = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return true if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Short names\n        const {hue, opacity, palette} = this.components;\n\n        // Calculate y position of hue slider\n        const hueWrapper = hue.options.wrapper;\n        const hueY = hueWrapper.offsetHeight * (h / 360);\n        hue.update(0, hueY);\n\n        // Calculate y position of opacity slider\n        const opacityWrapper = opacity.options.wrapper;\n        const opacityY = opacityWrapper.offsetHeight * a;\n        opacity.update(0, opacityY);\n\n        // Calculate y and x position of color palette\n        const pickerWrapper = palette.options.wrapper;\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\n        palette.update(pickerX, pickerY);\n\n        // Override current color and re-active color calculation\n        this._color = new HSVaColor(h, s, v, a);\n        this._recalc = recalc; // Restore old state\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (!target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGBA, HSVA, HSLA and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type') === type && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\nfunction create(options) {\n    const {components, strings, useAsButton} = options;\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n\n    const root = _.createFromTemplate(`\n        <div data-key=\"root\" class=\"pickr\">\n        \n            ${useAsButton ? '' : '<div data-key=\"button\" class=\"pcr-button\"></div>'}\n\n            <div data-key=\"app\" class=\"pcr-app\">\n                <div class=\"pcr-selection\">\n                    <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(components.preview)}>\n                        <button data-key=\"lastColor\" class=\"pcr-last-color\"></button>\n                        <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\n                    </div>\n\n                    <div data-con=\"palette\" class=\"pcr-color-palette\">\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"palette\" class=\"pcr-palette\"></div>\n                    </div>\n\n                    <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(components.hue)}>\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\n                    </div>\n\n                    <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(components.opacity)}>\n                        <div data-key=\"picker\" class=\"pcr-picker\"></div>\n                        <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\n                    </div>\n                </div>\n\n                <div class=\"swatches\" data-key=\"swatches\"></div> \n\n                <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(components.interaction).length)}>\n                    <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(components.interaction.input)}>\n\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEX\" value=\"HEX\" type=\"button\" ${hidden(components.interaction.hex)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBa\" type=\"button\" ${hidden(components.interaction.rgba)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLa\" type=\"button\" ${hidden(components.interaction.hsla)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVa\" type=\"button\" ${hidden(components.interaction.hsva)}>\n                    <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(components.interaction.cmyk)}>\n\n                    <input data-key=\"save\" class=\"pcr-save\" value=\"${strings.save || 'Save'}\" type=\"button\" ${hidden(components.interaction.save)}>\n                    <input data-key=\"clear\" class=\"pcr-clear\" value=\"${strings.clear || 'Clear'}\" type=\"button\" ${hidden(components.interaction.clear)}>\n                </div>\n            </div>\n        </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n\n// Static methods\nPickr.utils = {\n    once: _.once,\n    on: _.on,\n    off: _.off,\n    eventPath: _.eventPath,\n    createElementFromString: _.createElementFromString,\n    adjustableInputNumbers: _.adjustableInputNumbers,\n    removeAttribute: _.removeAttribute,\n    createFromTemplate: _.createFromTemplate\n};\n\n// Create instance via method\nPickr.create = (options) => new Pickr(options);\n\n// Export\nPickr.version = '0.4.1';\nexport default Pickr;\n"],"sourceRoot":""}