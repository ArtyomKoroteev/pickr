{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/libs/nanopop.js","webpack:///./src/js/pickr.js","webpack:///./src/js/template.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","children","child","arr","sub","push","keys","length","eventPath","evt","path","composedPath","target","parentElement","resolveElement","val","Element","split","reduce","pv","cv","ci","a","querySelector","shadowRoot","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","Math","max","floor","round","hsvToRgb","h","f","q","mod","hsvToHex","map","toString","padStart","hsvToCmyk","k","rgb","g","b","hsvToHsl","rgbToHsv","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","hslToHsv","hexToHsv","hex","match","parseInt","parseToHSVA","toLowerCase","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","hexa","numarize","array","test","undefined","invalid","type","exec","alpha","values","join","raw","substring","HSVaColor","original","next","precision","toFixed","that","toHSVA","toHSLA","toRGBA","toCMYK","toHEXA","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","onstop","_keyboard","activeElement","wrapper","xm","ym","update","cache","x","startsWith","_tapstart","_","_tapstop","_tapmove","getBoundingClientRect","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","destroy","Selectable","className","onTap","forEach","classList","Nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","getInfo","pos","cached","position","variant","isVertical","rb","eb","variants","vertical","leastApplied","apply","bevs","vars","styleprop","adder","win","sv","rot","v2Ok","v1Ok","Pickr","init","save","hide","show","clear","change","changestop","cancel","swatchselect","this","appClass","theme","useAsButton","disabled","comparison","closeOnScroll","outputPrecision","lockOpacity","autoReposition","container","components","interaction","i18n","swatches","inline","sliders","default","defaultRepresentation","adjustableNumbers","showAlways","closeWithKey","includes","preview","opacity","hue","palette","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_root","button","app","_nanopop","setAttribute","_t","requestAnimationFrame","cb","setColor","_rePositioningPicker","_representation","setColorRepresentation","_initializingActive","_emit","inst","lo","hidden","int","input","find","add","contains","appendChild","removeChild","parent","nextSibling","insertBefore","remove","parentNode","replaceChild","disable","transition","lastColor","cs","repeat","so","sh","getColor","_color","_lastColor","picker","_recalc","_updateOutput","cssRGBaString","background","_swatchColors","currentColor","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","matchMedia","matches","margin","silent","alphaMakesAChange","event","args","_eventListener","def","callBacks","indexOf","splice","_parseLocalColor","swatchColor","recalc","string","utype","click","utils","libs","version"],"mappings":"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","file":"pickr.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    for (const el of elements) {\n        for (const ev of events) {\n            el[method](ev, fn, {capture: false, ...options});\n        }\n    }\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a ':ref' attribute will be saved in a object (which will be returned)\n * where the value of ':ref' is the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, ':obj');\n        const key = removeAttribute(element, ':ref');\n        const subtree = con ? (base[con] = {}) : base;\n\n        // Check and save element\n        key && (base[key] = element);\n        for (const child of Array.from(element.children)) {\n            const arr = removeAttribute(child, ':arr');\n            const sub = resolve(child, arr ? {} : subtree);\n\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = []))\n                    .push(Object.keys(sub).length ? sub : child);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Resolves a HTMLElement by query.\n * @param val\n * @returns {null|Document|Element}\n */\nexport function resolveElement(val) {\n    if (val instanceof Element) {\n        return val;\n    } else if (typeof val === 'string') {\n        return val.split(/>>/g).reduce((pv, cv, ci, a) => {\n            pv = pv.querySelector(cv);\n            return ci < a.length - 1 ? pv.shadowRoot : pv;\n        }, document);\n    }\n\n    return null;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param mapper\n */\nexport function adjustableInputNumbers(el, mapper = v => v) {\n\n    function handleScroll(e) {\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\n\n        let index = 0;\n        let off = el.selectionStart;\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\n\n            // Check if number is in cursor range and increase it\n            if (i <= off && i + v.length >= off) {\n                off = i;\n                return mapper(Number(v), inc, index);\n            }\n\n            index++;\n            return v;\n        });\n\n        el.focus();\n        el.setSelectionRange(off, off);\n\n        // Prevent default and trigger input event\n        e.preventDefault();\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n","// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n\n    // Since invalid color's will be parsed as black, filter them out\n    if (name.toLowerCase() === 'black') {\n        return '#000000';\n    }\n\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle === '#000000' ? null : ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    const i = floor(h);\n\n    const f = h - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    const mod = i % 6;\n    const r = [v, q, p, p, t, v][mod];\n    const g = [t, v, v, q, p, p][mod];\n    const b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        round(v).toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    const l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        const dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        const dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        const db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100;\n    m /= 100;\n    y /= 100;\n    k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100;\n    l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    const ns = (2 * s / (l + s)) * 100;\n    const v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSVA(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    invalid: for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // match[2] does only contain a truly value if rgba, hsla, or hsla got matched\n        const alpha = !!match[2];\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                const [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break invalid;\n\n                return {values: cmykToHsv(c, m, y, k), type};\n            }\n            case 'rgba': {\n                const [, , , r, g, b, a] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\n            }\n            case 'hexa': {\n                let [, hex] = match;\n\n                if (hex.length === 4 || hex.length === 3) {\n                    hex = hex.split('').map(v => v + v).join('');\n                }\n\n                const raw = hex.substring(0, 6);\n                let a = hex.substring(6);\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                a = a ? (parseInt(a, 16) / 255) : undefined;\n\n                return {values: [...hexToHsv(raw), a], a, type};\n            }\n            case 'hsla': {\n                const [, , , h, s, l, a] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [...hslToHsv(h, s, l), a], a, type};\n            }\n            case 'hsva': {\n                const [, , , h, s, v, a] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [h, s, v, a], a, type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n    const mapper = (original, next) => (precision = -1) => {\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\n    };\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v, that.a];\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            // Check if alpha channel make sense, convert it to 255 number space, convert\n            // to hex and pad it with zeros if needet.\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\n                .toString(16)\n                .toUpperCase().padStart(2, '0');\n\n            alpha && hex.push(alpha);\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\n            return hex;\n        },\n\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\n    };\n\n    return that;\n}\n","import * as _ from '../utils/utils';\n\nconst clamp = v => Math.max(Math.min(v, 1), 0);\nexport default function Moveable(opt) {\n\n    const that = {\n\n        // Assign default values\n        options: Object.assign({\n            lock: null,\n            onchange: () => 0,\n            onstop: () => 0\n        }, opt),\n\n        _keyboard({type, key}) {\n\n            // Check to see if the Movable is focused and then move it based on arrow key inputs\n            // for improved accessibility\n            if (document.activeElement === options.wrapper) {\n                if (type === 'keydown') {\n                    let xm = 0;\n                    let ym = 0;\n\n                    switch (key) {\n                        case 'ArrowLeft':\n                            xm--;\n                            break;\n                        case 'ArrowRight':\n                            xm++;\n                            break;\n                        case 'ArrowUp':\n                            ym++;\n                            break;\n                        case 'ArrowDown':\n                            ym++;\n                    }\n\n                    that.update(\n                        clamp(that.cache.x + (0.01 * xm)),\n                        clamp(that.cache.y + (0.01 * ym))\n                    );\n                } else if (key.startsWith('Arrow')) {\n                    that.options.onstop();\n                }\n            }\n        },\n\n        _tapstart(evt) {\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\n\n            // Prevent default touch event\n            evt.preventDefault();\n\n            // Trigger\n            that._tapmove(evt);\n        },\n\n        _tapmove(evt) {\n            const {options: {lock}, cache} = that;\n            const {element, wrapper} = options;\n            const b = wrapper.getBoundingClientRect();\n\n            let x = 0, y = 0;\n            if (evt) {\n                const touch = evt && evt.touches && evt.touches[0];\n                x = evt ? (touch || evt).clientX : 0;\n                y = evt ? (touch || evt).clientY : 0;\n\n                // Reset to bounds\n                if (x < b.left) x = b.left;\n                else if (x > b.left + b.width) x = b.left + b.width;\n                if (y < b.top) y = b.top;\n                else if (y > b.top + b.height) y = b.top + b.height;\n\n                // Normalize\n                x -= b.left;\n                y -= b.top;\n            } else if (cache) {\n                x = cache.x * b.width;\n                y = cache.y * b.height;\n            }\n\n            if (lock !== 'h') {\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            if (lock !== 'v') {\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\n            }\n\n            that.cache = {x: x / b.width, y: y / b.height};\n            const cx = clamp(x / wrapper.offsetWidth);\n            const cy = clamp(y / wrapper.offsetHeight);\n\n            switch (lock) {\n                case 'v':\n                    return options.onchange(cx);\n                case 'h':\n                    return options.onchange(cy);\n                default:\n                    return options.onchange(cx, cy);\n            }\n        },\n\n        _tapstop() {\n            that.options.onstop();\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\n        },\n\n        trigger() {\n            that._tapmove();\n        },\n\n        update(x = 0, y = 0) {\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\n\n            if (that.options.lock === 'h') {\n                y = x;\n            }\n\n            that._tapmove({\n                clientX: left + width * x,\n                clientY: top + height * y\n            });\n        },\n\n        destroy() {\n            const {options, _tapstart} = that;\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\n                passive: false\n            });\n        }\n    };\n\n    // Initilize\n    const {options, _tapstart, _keyboard} = that;\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\n        passive: false\n    });\n\n    _.on(document, ['keydown', 'keyup'], _keyboard);\n\n\n    return that;\n}\n","import * as _ from '../utils/utils';\n\nexport default function Selectable(opt = {}) {\n    opt = Object.assign({\n        onchange: () => 0,\n        className: '',\n        elements: []\n    }, opt);\n\n    const onTap = _.on(opt.elements, 'click', evt => {\n        opt.elements.forEach(e =>\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\n        );\n\n        opt.onchange(evt);\n    });\n\n    return {\n        destroy: () => _.off(...onTap)\n    };\n}\n","/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, padding = 8}) {\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\n    const hBehaviour = {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'};\n\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\n        if (cached) return cached;\n        const [position, variant = 'middle'] = pos.split('-');\n        const isVertical = (position === 'top' || position === 'bottom');\n\n        return cache[pos] = {\n            position,\n            variant,\n            isVertical\n        };\n    })();\n\n    return {\n        update(pos) {\n            const {position, variant, isVertical} = getInfo(pos);\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n\n            const positions = vertical => vertical ? {\n                t: rb.top - eb.height - padding,\n                b: rb.bottom + padding\n            } : {\n                r: rb.right + padding,\n                l: rb.left - eb.width - padding\n            };\n\n            const variants = vertical => vertical ? {\n                s: rb.left + rb.width - eb.width,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\n                e: rb.left\n            } : {\n                s: rb.bottom - eb.height,\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\n                e: rb.bottom - rb.height\n            };\n\n            const leastApplied = {};\n\n            function apply(bevs, vars, styleprop) {\n                const vertical = styleprop === 'top';\n                const adder = vertical ? eb.height : eb.width;\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\n\n                for (const ch of bevs) {\n                    const v = vars[ch];\n                    const sv = leastApplied[styleprop] = `${v}px`;\n\n                    if (v > 0 && (v + adder) < win) {\n                        el.style[styleprop] = sv;\n                        return true;\n                    }\n                }\n\n                return false;\n            }\n\n            for (const rot of [isVertical, !isVertical]) {\n                const v2Ok = apply(hBehaviour[position], positions(rot), rot ? 'top' : 'left');\n                const v1Ok = apply(vBehaviour[variant], variants(rot), rot ? 'left' : 'top');\n\n                if (v2Ok && v1Ok) {\n                    return;\n                }\n            }\n\n            el.style.left = leastApplied.left;\n            el.style.top = leastApplied.top;\n        }\n    };\n}\n","// Import utils\nimport * as _        from './utils/utils';\nimport {parseToHSVA} from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // If the current color value should be recalculated\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        init: [],\n        save: [],\n        hide: [],\n        show: [],\n        clear: [],\n        change: [],\n        changestop: [],\n        cancel: [],\n        swatchselect: []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            theme: 'classic',\n            useAsButton: false,\n            padding: 8,\n            disabled: false,\n            comparison: true,\n            closeOnScroll: false,\n            outputPrecision: 0,\n            lockOpacity: false,\n            autoReposition: true,\n            container: 'body',\n            components: {\n                interaction: {}\n            },\n\n            i18n: null,\n            swatches: null,\n            inline: false,\n            sliders: null,\n\n            default: '#42445a',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, components, theme, sliders, lockOpacity, padding} = opt;\n\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\n            opt.sliders = 'h';\n        }\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.opacity = (!lockOpacity && opacity);\n        components.palette = palette || preview || opacity || hue;\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        const {button, app} = this._root;\n        this._nanopop = Nanopop({\n            reference: button,\n            padding,\n            el: app\n        });\n\n        // Initialize accessibility\n        button.setAttribute('role', 'button');\n        button.setAttribute('aria-label', this._t('btn:toggle', 'toggle color picker dialog'));\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            if (!app.offsetWidth && app.parentElement !== opt.container) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Resolve elements\n        for (const type of ['el', 'container']) {\n            opt[type] = _.resolveElement(opt[type]);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(this, opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        opt.container.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        opt.container.removeChild(root.root);\n\n        if (opt.inline) {\n            const parent = opt.el.parentElement;\n\n            if (opt.el.nextSibling) {\n                parent.insertBefore(root.app, opt.el.nextSibling);\n            } else {\n                parent.appendChild(root.app);\n            }\n        } else {\n            opt.container.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        } else if (opt.inline) {\n            opt.el.remove();\n        }\n\n        // Check if it should be immediatly disabled\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const cs = this.options.components;\n        const sliders = (inst.options.sliders || 'v').repeat(2);\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\n\n        // Re-assign if null\n        const getColor = () =>\n            this._color || (this._color = this._lastColor.clone());\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(x, y) {\n                    if (!cs.palette) return;\n\n                    const color = getColor();\n                    const {_root, options} = inst;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n\n                        // Calculate saturation based on the position\n                        color.s = x * 100;\n\n                        // Calculate the value\n                        color.v = 100 - y * 100;\n\n                        // Prevent falling under zero\n                        color.v < 0 ? color.v = 0 : 0;\n                        inst._updateOutput();\n                    }\n\n                    // Set picker and gradient color\n                    const cssRGBaString = color.toRGBA().toString(0);\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${color.a}), transparent),\n                        linear-gradient(to left, hsla(${color.h}, 100%, 50%, ${color.a}), rgba(255, 255, 255, ${color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n                    } else {\n                        if (!options.useAsButton && !inst._lastColor) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Check if there's a swatch which color matches the current one\n                    const hexa = color.toHEXA().toString();\n                    for (const {el, color} of inst._swatchColors) {\n                        el.classList[hexa === color.toHEXA().toString() ? 'add' : 'remove']('pcr-active');\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    if (!inst.options.comparison) {\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    }\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh === 'v' ? 'h' : 'v',\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.hue || !cs.palette) return;\n                    const color = getColor();\n\n                    // Calculate hue\n                    if (inst._recalc) {\n                        color.h = v * 360;\n                    }\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so === 'v' ? 'h' : 'v',\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.opacity || !cs.palette) return;\n                    const color = getColor();\n\n                    // Calculate opacity\n                    if (inst._recalc) {\n                        color.a = Math.round(v * 1e2) / 100;\n                    }\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${color.a})`;\n                    components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._recalc && inst._updateOutput();\n                }\n            })\n        };\n\n        this._components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on([\n                _root.interaction.cancel,\n                _root.preview.lastColor\n            ], 'click', () => {\n                this._emit('cancel', this);\n                this.setHSVA(...(this._lastColor || this._color).toHSVA(), true);\n            }),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['focus', 'blur'], e => {\n                this._recalc = e.type === 'blur';\n                this._recalc && this._updateOutput();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                }\n\n                return o;\n            });\n        }\n\n        if (options.autoReposition && !options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n\n                        if (options.closeOnScroll) {\n                            that.hide();\n                        }\n\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            const {app} = this._root;\n\n            if (matchMedia('(max-width: 576px)').matches) {\n                Object.assign(app.style, {\n                    margin: 'auto',\n                    height: `${app.getBoundingClientRect().height}px`,\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0\n                });\n            } else {\n                Object.assign(app.style, {\n                    margin: null,\n                    right: null,\n                    top: null,\n                    bottom: null,\n                    left: null,\n                    height: null\n                });\n\n                this._nanopop.update(options.position);\n            }\n        }\n    }\n\n    _updateOutput() {\n        const {_root, _color, options} = this;\n\n        // Check if component is present\n        if (_root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\n                _color[method]().toString(options.outputPrecision) : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive && this._recalc) {\n            this._emit('change', _color);\n        }\n    }\n\n    _clearColor(silent = false) {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        this._lastColor = null;\n        if (!this._initializingActive && !silent) {\n\n            // Fire listener\n            this._emit('save', null);\n            this._emit('clear', this);\n        }\n    }\n\n    _parseLocalColor(str) {\n        const {values, type, a} = parseToHSVA(str);\n        const {lockOpacity} = this.options;\n        const alphaMakesAChange = a !== undefined && a !== 1;\n\n        // If no opacity is applied, add undefined at the very end which gets\n        // set to 1 in setHSVA\n        if (values && values.length === 3) {\n            values[3] = undefined;\n        }\n\n        return {\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\n            type\n        };\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    _t(key, def = 'unknown') {\n        return (this.options.i18n || {})[key] || def;\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = this._parseLocalColor(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const color = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const el = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${color.toRGBA().toString(0)}\" aria-label=\"${this._t('btn:swatch', 'color-swatch')}\"/>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(el);\n            _swatchColors.push({el, color});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(el, 'click', () => {\n                    this.setHSVA(...color.toHSVA(), true);\n                    this._emit('swatchselect', color);\n                    this._emit('change', color);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n        const swatchColor = this._swatchColors[index];\n\n        // Check swatch data\n        if (swatchColor) {\n            const {el} = swatchColor;\n\n            // Remove HTML child and swatch data\n            this._root.swatches.removeChild(el);\n            this._swatchColors.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n\n        Object.keys(this._components)\n            .forEach(key => this._components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n        const {root, app} = this._root;\n\n        // Remove element\n        if (root.parentElement) {\n            root.parentElement.removeChild(root);\n        }\n\n        // remove .pcr-app\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        Object.keys(this)\n            .forEach(key => this[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        this._emit('hide', this);\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n\n        if (!this.options.disabled) {\n            this._root.app.classList.add('visible');\n            this._rePositioningPicker();\n            this._emit('show', this);\n        }\n\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this._components;\n        hue.update((h / 360));\n        opacity.update(a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        // Update output if recalculation is enabled\n        if (recalc) {\n            this._updateOutput();\n        }\n\n        // Restore old state\n        this._recalc = recalc;\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor(silent);\n            return true;\n        }\n\n        const {values, type} = this._parseLocalColor(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            this.setColorRepresentation(utype);\n            return this.setHSVA(...values, silent);\n        }\n\n        return false;\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * Returns the currently selected color.\n     * @returns {{a, toHSVA, toHEXA, s, v, h, clone, toCMYK, toHSLA, toRGBA}}\n     */\n    getSelectedColor() {\n        return this._lastColor;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Expose libraries for easier integration in things build on top of it\nPickr.libs = {\n    HSVaColor,\n    Moveable,\n    Nanopop,\n    Selectable\n};\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '1.4.1';\nexport default Pickr;\n","import * as _ from './utils/utils';\n\nexport default (inst, {components: c, useAsButton, inline, appClass, theme, lockOpacity: lo}) => {\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n    const t = str => inst._t(str);\n\n    const root = _.createFromTemplate(`\n      <div :ref=\"root\" class=\"pickr\">\n\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\n\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''} aria-label=\"${t('dialog', 'color picker dialog')}\" role=\"window\">\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\" aria-label=\"${t('btn:last-color', 'use previous color')}\"></button>\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\n            </div>\n\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\n              <div :ref=\"palette\" class=\"pcr-palette\" tabindex=\"0\" aria-label=\"${t('ui:palette', 'color selection area')}\" role=\"widget\"></div>\n            </div>\n\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\" tabindex=\"0\" aria-label=\"${t('ui:hue', 'hue selection slider')}\" role=\"widget\"></div>\n            </div>\n\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\" tabindex=\"0\" aria-label=\"${t('ui:opacity', 'opacity selection slider')}\" role=\"widget\"></div>\n            </div>\n          </div>\n\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" :ref=\"swatches\"></div> \n\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)} aria-label=\"${t('input:color', 'color input field')}\">\n\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lo ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(c.interaction.hex)}>\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lo ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(c.interaction.rgba)}>\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lo ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(c.interaction.hsla)}>\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lo ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(c.interaction.hsva)}>\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\n\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${t('btn:save', 'Save')}\" type=\"button\" ${hidden(c.interaction.save)}>\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${t('btn:cancel', 'Cancel')}\" type=\"button\" ${hidden(c.interaction.cancel)}>\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${t('btn:clear', 'Clear')}\" type=\"button\" ${hidden(c.interaction.clear)}>\n          </div>\n        </div>\n      </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n"],"sourceRoot":""}