{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/pickr.js","webpack:///./src/js/libs/nanopop.js","webpack:///./src/js/template.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","arguments","length","undefined","HTMLCollection","NodeList","Array","from","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","el","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ev","_objectSpread","capture","err","return","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","_i","_Array$from","children","child","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","Math","max","floor","round","hsvToRgb","h","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","_toConsumableArray","hslToHsv","hexToHsv","hex","apply","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","concat","_numarize4","_numarize4$","a","splitAt","substring","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","rhsva","toString","toFixed","toHSLA","hsvToHsl","rhsla","toRGBA","rrgba","toCMYK","rgb","hsvToCmyk","rcmyk","toHEXA","padStart","hsvToHex","toUpperCase","join","clone","clamp","Moveable","opt","assign","lock","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","update","_that$options$wrapper","destroy","Selectable","className","onTap","forEach","classList","selectable_toConsumableArray","Pickr","_this","this","_classCallCheck","pickr_defineProperty","swatchselect","change","save","init","appClass","useAsButton","disabled","comparison","components","interaction","strings","swatches","inline","sliders","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","_opt","_ref","reference","_ref$padding","padding","vBehaviour","hBehaviour","getInfo","preview","opacity","hue","palette","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","_root","button","app","start","middle","end","right","bottom","pos","cached","_pos$split2","nanopop_slicedToArray","split","_pos$split2$","variant","isVertical","_getInfo","rb","eb","positions","variants","bevs","vars","styleprop","vertical","adder","win","v1Ok","v2Ok","margin","requestAnimationFrame","cb","offsetParent","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","hidden","int","reduce","pv","cv","ci","querySelector","shadowRoot","keys","input","clear","find","add","contains","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","comp","so","sh","_sliders","pickr_slicedToArray","opposite","_ref2","picker","_color","cssRGBaString","background","currentColor","_recalc","_updateOutput","remove","slider","backgroundColor","selectable","_this2","eventBindings","_clearColor","setHSVA","pickr_toConsumableArray","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","toLowerCase","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","event","_this3","_len","args","_key","_eventListener","callBacks","indexOf","splice","_this4","Color","_swatchColors","hsvaColorObject","swatchColor","silent","_this$_root","_this5","pickr","recalc","_this$components","string","_Color$parseToHSV2","utype","startsWith","click","utils","version"],"mappings":"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","file":"pickr.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a 'data-key' attribute will be saved in a object (which will be returned)\r\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, 'data-con');\r\n        const key = removeAttribute(element, 'data-key');\r\n\r\n        // Check and save element\r\n        if (key) {\r\n            base[key] = element;\r\n        }\r\n\r\n        // Check all children\r\n        const subtree = con ? (base[con] = {}) : base;\r\n        for (let child of Array.from(element.children)) {\r\n\r\n            // Check if element should be saved as array\r\n            const arr = removeAttribute(child, 'data-arr');\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = [])).push(child);\r\n            } else {\r\n                resolve(child, subtree);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n","// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    let i = floor(h);\r\n\r\n    let f = h - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    let mod = i % 6;\r\n    let r = [v, q, p, p, t, v][mod];\r\n    let g = [t, v, v, q, p, p][mod];\r\n    let b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    let l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100, m /= 100, y /= 100, k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100, l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    let ns = (2 * s / (l + s)) * 100;\r\n    let v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSV(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\r\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\r\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                let [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break;\r\n\r\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\r\n            }\r\n            case 'rgba': {\r\n                let [, , r, g, b, a = 1] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], type};\r\n            }\r\n            case 'hex': {\r\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\r\n                let [, hex] = match;\r\n\r\n                // Fill up opacity if not declared\r\n                if (hex.length === 3) {\r\n                    hex += 'F';\r\n                } else if (hex.length === 6) {\r\n                    hex += 'FF';\r\n                }\r\n\r\n                let alpha;\r\n                if (hex.length === 4) {\r\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\r\n                } else if (hex.length === 8) {\r\n                    [hex, alpha] = splitAt(hex, 6);\r\n                }\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                alpha = parseInt(alpha, 16) / 255;\r\n                return {values: [...hexToHsv(hex), alpha], type};\r\n            }\r\n            case 'hsla': {\r\n                let [, , h, s, l, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], type};\r\n            }\r\n            case 'hsva': {\r\n                let [, , h, s, v, a = 1] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\r\n                    break;\r\n\r\n                return {values: [h, s, v, a], type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const {ceil} = Math;\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v];\r\n            const rhsva = hsva.map(ceil);\r\n\r\n            hsva.push(that.a);\r\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = hsvToHsl(that.h, that.s, that.v);\r\n            const rhsla = hsla.map(ceil);\r\n\r\n            hsla.push(that.a);\r\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = hsvToRgb(that.h, that.s, that.v);\r\n            const rrgba = rgba.map(ceil);\r\n\r\n            rgba.push(that.a);\r\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            const rcmyk = cmyk.map(ceil);\r\n\r\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            hex.toString = () => {\r\n\r\n                // Check if alpha channel make sense, convert it to 255 number space, convert\r\n                // to hex and pad it with zeros if needet.\r\n                const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                    .toString(16)\r\n                    .toUpperCase().padStart(2, '0');\r\n\r\n                return `#${hex.join('').toUpperCase() + alpha}`;\r\n            };\r\n\r\n            return hex;\r\n        },\r\n\r\n        clone() {\r\n            return HSVaColor(that.h, that.s, that.v, that.a);\r\n        }\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nconst clamp = v => Math.max(Math.min(v, 1), 0);\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lock: null,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options: {lock}, cache} = that;\r\n            const {element, wrapper} = options;\r\n            const b = wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (lock !== 'h') {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (lock !== 'v') {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            const cx = clamp(x / wrapper.offsetWidth);\r\n            const cy = clamp(y / wrapper.offsetHeight);\r\n\r\n            switch (lock) {\r\n                case 'v':\r\n                    return options.onchange(cx);\r\n                case 'h':\r\n                    return options.onchange(cy);\r\n                default:\r\n                    return options.onchange(cx, cy);\r\n            }\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: left + width * x,\r\n                clientY: top + height * y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","// Import utils\nimport * as _     from './utils/utils';\nimport * as Color from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // Replace element with color picker\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        'swatchselect': [],\n        'change': [],\n        'save': [],\n        'init': []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n            sliders: 'v',\n\n            default: '#42445A',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, inline, components} = opt;\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Finalize build\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        this._nanopop = Nanopop({\n            reference: this._root.button,\n            el: this._root.app\n        });\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const {parentElement} = opt.el;\n\n            if (parentElement.lastChild === opt.el) {\n                parentElement.appendChild(root.app);\n            } else {\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n        const [so, sh] = (() => {\n            const {sliders} = inst.options;\n            let so = 'v', sh = 'v';\n\n            if (sliders.match(/^[vh]+$/g)) {\n                if (sliders.length > 1) {\n                    [so, sh] = sliders;\n                } else {\n                    so = sh = sliders;\n                }\n            }\n\n            const opposite = {v: 'h', h: 'v'};\n            return [opposite[so], opposite[sh]];\n        })();\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    if (!comp.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = x * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - y * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    if (!inst.options.comparison) {\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    }\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(v) {\n                    if (!comp.hue || !comp.palette) return;\n\n                    // Calculate hue\n                    inst._color.h = v * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(v) {\n                    if (!comp.opacity || !comp.palette) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(v * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                } else {\n                    return o;\n                }\n            });\n        }\n\n        if (!options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                })\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            this._nanopop.update(options.position);\n        }\n    }\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n\n        // remove .pcr-app\n        const app = this._root.app;\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        const pickr = this;\n        Object.keys(pickr).forEach(key => pickr[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this.components;\n        hue.update(0, (h / 360));\n        opacity.update(0, a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Restore old state\n        this._recalc = recalc;\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '0.6.4';\nexport default Pickr;\n","/**\n * Micro positioning-engine\n * @param el\n * @param reference\n * @param pos\n * @param padding\n * @returns {{update(): void}}\n * @constructor\n */\nexport default function Nanopop({el, reference, padding = 8}) {\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\n    const hBehaviour = {top: 'tb', right: 'rl', bottom: 'bt', left: 'lr'};\n\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\n        if (cached) return cached;\n        const [position, variant = 'middle'] = pos.split('-');\n        const isVertical = (position === 'top' || position === 'bottom');\n\n        return cache[pos] = {\n            position,\n            variant,\n            isVertical\n        };\n    })();\n\n    return {\n        update(pos) {\n            const {position, variant, isVertical} = getInfo(pos);\n            const rb = reference.getBoundingClientRect();\n            const eb = el.getBoundingClientRect();\n\n            const positions = isVertical ? {\n                t: rb.top - eb.height - padding,\n                b: rb.bottom + padding\n            } : {\n                r: rb.right + padding,\n                l: rb.left - eb.width - padding\n            };\n\n            const variants = isVertical ? {\n                s: rb.left + rb.width - eb.width,\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\n                e: rb.left\n            } : {\n                s: rb.bottom - eb.height,\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\n                e: rb.bottom - rb.height\n            };\n\n\n            function apply(bevs, vars, styleprop) {\n                const vertical = styleprop === 'top';\n                const adder = vertical ? eb.height : eb.width;\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\n\n                for (const ch of bevs) {\n                    const v = vars[ch];\n                    if (v > 0 && (v + adder) < win) {\n                        el.style[styleprop] = `${v}px`;\n                        return true;\n                    }\n                }\n\n                return false;\n            }\n\n            const v1Ok = apply(vBehaviour[variant], variants, isVertical ? 'left' : 'top');\n            const v2Ok = apply(hBehaviour[position], positions, isVertical ? 'top' : 'left');\n            if (!v1Ok || !v2Ok) {\n                Object.assign(el.style, {\n                    top: `${padding}px`,\n                    left: 0,\n                    right: 0,\n                    margin: 'auto'\n                });\n            } else {\n                el.style.margin = 'inherit';\n            }\n        }\n    };\n}\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div data-key=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\r\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \r\n\r\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n"],"sourceRoot":""}