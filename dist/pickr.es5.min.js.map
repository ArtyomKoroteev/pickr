{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/libs/nanopop.js","webpack:///./src/js/pickr.js","webpack:///./src/js/template.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","children","child","arr","sub","push","keys","length","eventPath","evt","path","composedPath","target","parentElement","resolveElement","val","Element","split","reduce","pv","cv","ci","a","querySelector","shadowRoot","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","Math","max","floor","round","hsvToRgb","h","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSVA","toLowerCase","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","hexa","numarize","array","test","undefined","invalid","type","exec","alpha","values","join","raw","substring","HSVaColor","original","next","precision","toFixed","that","toHSVA","toString","toHSLA","hsvToHsl","toRGBA","toCMYK","rgb","hsvToCmyk","toHEXA","padStart","hsvToHex","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","onstop","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","update","destroy","Selectable","className","onTap","forEach","classList","Nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","getInfo","pos","cached","position","variant","isVertical","rb","eb","variants","vertical","leastApplied","apply","bevs","vars","styleprop","adder","win","sv","rot","v2Ok","v1Ok","Pickr","init","save","hide","show","clear","change","changestop","cancel","swatchselect","this","appClass","theme","useAsButton","disabled","comparison","closeOnScroll","outputPrecision","lockOpacity","autoReposition","container","components","interaction","strings","swatches","inline","sliders","default","defaultRepresentation","adjustableNumbers","showAlways","closeWithKey","includes","preview","opacity","hue","palette","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","_root","button","app","requestAnimationFrame","cb","setColor","_rePositioningPicker","_representation","setColorRepresentation","_initializingActive","_emit","lo","hidden","int","input","find","add","contains","appendChild","removeChild","parent","nextSibling","insertBefore","remove","parentNode","replaceChild","disable","transition","lastColor","inst","cs","repeat","so","sh","picker","_color","_recalc","_updateOutput","cssRGBaString","background","_swatchColors","currentColor","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","matchMedia","matches","margin","silent","alphaMakesAChange","event","args","_eventListener","callBacks","indexOf","splice","_parseLocalColor","swatchColor","recalc","string","utype","startsWith","click","utils","libs","version"],"mappings":"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","file":"pickr.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    for (const el of elements) {\n        for (const ev of events) {\n            el[method](ev, fn, {capture: false, ...options});\n        }\n    }\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a ':ref' attribute will be saved in a object (which will be returned)\n * where the value of ':ref' is the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, ':obj');\n        const key = removeAttribute(element, ':ref');\n        const subtree = con ? (base[con] = {}) : base;\n\n        // Check and save element\n        key && (base[key] = element);\n        for (const child of Array.from(element.children)) {\n            const arr = removeAttribute(child, ':arr');\n            const sub = resolve(child, arr ? {} : subtree);\n\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = []))\n                    .push(Object.keys(sub).length ? sub : child);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Resolves a HTMLElement by query.\n * @param val\n * @returns {null|Document|Element}\n */\nexport function resolveElement(val) {\n    if (val instanceof Element) {\n        return val;\n    } else if (typeof val === 'string') {\n        return val.split(/>>/g).reduce((pv, cv, ci, a) => {\n            pv = pv.querySelector(cv);\n            return ci < a.length - 1 ? pv.shadowRoot : pv;\n        }, document);\n    }\n\n    return null;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param mapper\n */\nexport function adjustableInputNumbers(el, mapper = v => v) {\n\n    function handleScroll(e) {\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\n\n        let index = 0;\n        let off = el.selectionStart;\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\n\n            // Check if number is in cursor range and increase it\n            if (i <= off && i + v.length >= off) {\n                off = i;\n                return mapper(Number(v), inc, index);\n            }\n\n            index++;\n            return v;\n        });\n\n        el.focus();\n        el.setSelectionRange(off, off);\n\n        // Prevent default and trigger input event\n        e.preventDefault();\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n","// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n\r\n    // Since invalid color's will be parsed as black, filter them out\r\n    if (name.toLowerCase() === 'black') {\r\n        return '#000';\r\n    }\r\n\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle === '#000' ? null : ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    const i = floor(h);\r\n\r\n    const f = h - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n\r\n    const mod = i % 6;\r\n    const r = [v, q, p, p, t, v][mod];\r\n    const g = [t, v, v, q, p, p][mod];\r\n    const b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    let k, c, m, y;\r\n\r\n    k = min(1 - r, 1 - g, 1 - b);\r\n\r\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100, v /= 100;\r\n\r\n    const l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n\r\n    let h, s, v;\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        const dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        const dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        const db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100;\r\n    m /= 100;\r\n    y /= 100;\r\n    k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100;\r\n    l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    const ns = (2 * s / (l + s)) * 100;\r\n    const v = (l + s) * 100;\r\n    return [h, ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSVA(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\r\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    invalid: for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str)))\r\n            continue;\r\n\r\n        // match[2] does only contain a truly value if rgba, hsla, or hsla got matched\r\n        const alpha = !!match[2];\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                const [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100)\r\n                    break invalid;\r\n\r\n                return {values: cmykToHsv(c, m, y, k), type};\r\n            }\r\n            case 'rgba': {\r\n                const [, , , r, g, b, a] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || (alpha === !a))\r\n                    break invalid;\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\r\n            }\r\n            case 'hexa': {\r\n                let [, hex] = match;\r\n\r\n                if (hex.length === 4 || hex.length === 3) {\r\n                    hex = hex.split('').map(v => v + v).join('');\r\n                }\r\n\r\n                const raw = hex.substring(0, 6);\r\n                let a = hex.substring(6);\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                a = a ? (parseInt(a, 16) / 255) : undefined;\r\n\r\n                return {values: [...hexToHsv(raw), a], a, type};\r\n            }\r\n            case 'hsla': {\r\n                const [, , , h, s, l, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || (alpha === !a))\r\n                    break invalid;\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], a, type};\r\n            }\r\n            case 'hsva': {\r\n                const [, , , h, s, v, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || (alpha === !a))\r\n                    break invalid;\r\n\r\n                return {values: [h, s, v, a], a, type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const mapper = (original, next) => (precision = -1) => {\r\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\r\n    };\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v, that.a];\r\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\r\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\r\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            // Check if alpha channel make sense, convert it to 255 number space, convert\r\n            // to hex and pad it with zeros if needet.\r\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                .toString(16)\r\n                .toUpperCase().padStart(2, '0');\r\n\r\n            alpha && hex.push(alpha);\r\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\r\n            return hex;\r\n        },\r\n\r\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\r\n    };\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\n\nconst clamp = v => Math.max(Math.min(v, 1), 0);\nexport default function Moveable(opt) {\n\n    const that = {\n\n        // Assign default values\n        options: Object.assign({\n            lock: null,\n            onchange: () => 0,\n            onstop: () => 0\n        }, opt),\n\n        _tapstart(evt) {\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\n\n            // Prevent default touch event\n            evt.preventDefault();\n\n            // Trigger\n            that._tapmove(evt);\n        },\n\n        _tapmove(evt) {\n            const {options: {lock}, cache} = that;\n            const {element, wrapper} = options;\n            const b = wrapper.getBoundingClientRect();\n\n            let x = 0, y = 0;\n            if (evt) {\n                const touch = evt && evt.touches && evt.touches[0];\n                x = evt ? (touch || evt).clientX : 0;\n                y = evt ? (touch || evt).clientY : 0;\n\n                // Reset to bounds\n                if (x < b.left) x = b.left;\n                else if (x > b.left + b.width) x = b.left + b.width;\n                if (y < b.top) y = b.top;\n                else if (y > b.top + b.height) y = b.top + b.height;\n\n                // Normalize\n                x -= b.left;\n                y -= b.top;\n            } else if (cache) {\n                x = cache.x * b.width;\n                y = cache.y * b.height;\n            }\n\n            if (lock !== 'h') {\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            if (lock !== 'v') {\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\n            }\n\n            that.cache = {x: x / b.width, y: y / b.height};\n            const cx = clamp(x / wrapper.offsetWidth);\n            const cy = clamp(y / wrapper.offsetHeight);\n\n            switch (lock) {\n                case 'v':\n                    return options.onchange(cx);\n                case 'h':\n                    return options.onchange(cy);\n                default:\n                    return options.onchange(cx, cy);\n            }\n        },\n\n        _tapstop() {\n            that.options.onstop();\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\n        },\n\n        trigger() {\n            that._tapmove();\n        },\n\n        update(x = 0, y = 0) {\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\n\n            if (that.options.lock === 'h') {\n                y = x;\n            }\n\n            that._tapmove({\n                clientX: left + width * x,\n                clientY: top + height * y\n            });\n        },\n\n        destroy() {\n            const {options, _tapstart} = that;\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\n                passive: false\n            });\n        }\n    };\n\n    // Initilize\n    const {options, _tapstart} = that;\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\n        passive: false\n    });\n\n    return that;\n}\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","/**\r\n * Micro positioning-engine\r\n * @param el\r\n * @param reference\r\n * @param pos\r\n * @param padding\r\n * @returns {{update(): void}}\r\n * @constructor\r\n */\r\nexport default function Nanopop({el, reference, padding = 8}) {\r\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\r\n    const hBehaviour = {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'};\r\n\r\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\r\n        if (cached) return cached;\r\n        const [position, variant = 'middle'] = pos.split('-');\r\n        const isVertical = (position === 'top' || position === 'bottom');\r\n\r\n        return cache[pos] = {\r\n            position,\r\n            variant,\r\n            isVertical\r\n        };\r\n    })();\r\n\r\n    return {\r\n        update(pos) {\r\n            const {position, variant, isVertical} = getInfo(pos);\r\n            const rb = reference.getBoundingClientRect();\r\n            const eb = el.getBoundingClientRect();\r\n\r\n            const positions = vertical => vertical ? {\r\n                t: rb.top - eb.height - padding,\r\n                b: rb.bottom + padding\r\n            } : {\r\n                r: rb.right + padding,\r\n                l: rb.left - eb.width - padding\r\n            };\r\n\r\n            const variants = vertical => vertical ? {\r\n                s: rb.left + rb.width - eb.width,\r\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\r\n                e: rb.left\r\n            } : {\r\n                s: rb.bottom - eb.height,\r\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\r\n                e: rb.bottom - rb.height\r\n            };\r\n\r\n            const leastApplied = {};\r\n\r\n            function apply(bevs, vars, styleprop) {\r\n                const vertical = styleprop === 'top';\r\n                const adder = vertical ? eb.height : eb.width;\r\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\r\n\r\n                for (const ch of bevs) {\r\n                    const v = vars[ch];\r\n                    const sv = leastApplied[styleprop] = `${v}px`;\r\n\r\n                    if (v > 0 && (v + adder) < win) {\r\n                        el.style[styleprop] = sv;\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            for (const rot of [isVertical, !isVertical]) {\r\n                const v2Ok = apply(hBehaviour[position], positions(rot), rot ? 'top' : 'left');\r\n                const v1Ok = apply(vBehaviour[variant], variants(rot), rot ? 'left' : 'top');\r\n\r\n                if (v2Ok && v1Ok) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            el.style.left = leastApplied.left;\r\n            el.style.top = leastApplied.top;\r\n        }\r\n    };\r\n}\r\n","// Import utils\nimport * as _        from './utils/utils';\nimport {parseToHSVA} from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // If the current color value should be recalculated\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        init: [],\n        save: [],\n        hide: [],\n        show: [],\n        clear: [],\n        change: [],\n        changestop: [],\n        cancel: [],\n        swatchselect: []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            theme: 'classic',\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n            closeOnScroll: false,\n            outputPrecision: 0,\n            lockOpacity: false,\n            autoReposition: true,\n            container: 'body',\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n            sliders: null,\n\n            default: '#42445a',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, components, theme, sliders, lockOpacity} = opt;\n\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\n            opt.sliders = 'h';\n        }\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.opacity = (!lockOpacity && opacity);\n        components.palette = palette || preview || opacity || hue;\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        this._nanopop = Nanopop({\n            reference: this._root.button,\n            el: this._root.app\n        });\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {app} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            if (!app.offsetWidth && app.parentElement !== opt.container) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Resolve elements\n        for(const type of ['el', 'container']) {\n            opt[type] = _.resolveElement(opt[type]);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        opt.container.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        opt.container.removeChild(root.root);\n\n        if (opt.inline) {\n            const parent = opt.el.parentElement;\n\n            if (opt.el.nextSibling) {\n                parent.insertBefore(root.app, opt.el.nextSibling);\n            } else {\n                parent.appendChild(root.app);\n            }\n        } else {\n            opt.container.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        } else if (opt.inline) {\n            opt.el.remove();\n        }\n\n        // Check if it should be immediatly disabled\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const cs = this.options.components;\n        const sliders = (inst.options.sliders || 'v').repeat(2);\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(x, y) {\n                    if (!cs.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n\n                        // Calculate saturation based on the position\n                        _color.s = x * 100;\n\n                        // Calculate the value\n                        _color.v = 100 - y * 100;\n\n                        // Prevent falling under zero\n                        _color.v < 0 ? _color.v = 0 : 0;\n                        inst._updateOutput();\n                    }\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString(0);\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Check if there's a swatch which color matches the current one\n                    const hexa = _color.toHEXA().toString();\n                    for (const {el, color} of inst._swatchColors) {\n                        el.classList[hexa === color.toHEXA().toString() ? 'add' : 'remove']('pcr-active');\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    if (!inst.options.comparison) {\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    }\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh === 'v' ? 'h' : 'v',\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.hue || !cs.palette) return;\n\n                    // Calculate hue\n                    if (inst._recalc) {\n                        inst._color.h = v * 360;\n                    }\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so === 'v' ? 'h' : 'v',\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.opacity || !cs.palette) return;\n\n                    // Calculate opacity\n                    if (inst._recalc) {\n                        inst._color.a = Math.round(v * 1e2) / 100;\n                    }\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._recalc && inst._updateOutput();\n                }\n            })\n        };\n\n        this._components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on([\n                _root.interaction.cancel,\n                _root.preview.lastColor\n            ], 'click', () => {\n                this._emit('cancel', this);\n                this.setHSVA(...this._lastColor.toHSVA(), true);\n            }),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['focus', 'blur'], e => {\n                this._recalc = e.type === 'blur';\n                this._recalc && this._updateOutput();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                }\n                return o;\n\n            });\n        }\n\n        if (options.autoReposition && !options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n\n                        if (options.closeOnScroll) {\n                            that.hide();\n                        }\n\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            const {app} = this._root;\n\n            if (matchMedia('(max-width: 576px)').matches) {\n                Object.assign(app.style, {\n                    margin: 'auto',\n                    height: `${app.getBoundingClientRect().height}px`,\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0\n                });\n            } else {\n                Object.assign(app.style, {\n                    margin: null,\n                    right: null,\n                    top: null,\n                    bottom: null,\n                    left: null,\n                    height: null\n                });\n\n                this._nanopop.update(options.position);\n            }\n        }\n    }\n\n    _updateOutput() {\n        const {_root, _color, options} = this;\n\n        // Check if component is present\n        if (_root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\n                _color[method]().toString(options.outputPrecision) : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive && this._recalc) {\n            this._emit('change', _color);\n        }\n    }\n\n    _clearColor(silent = false) {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive && !silent) {\n\n            // Fire listener\n            this._emit('save', null);\n            this._emit('clear', this);\n        }\n    }\n\n    _parseLocalColor(str) {\n        const {values, type, a} = parseToHSVA(str);\n        const {lockOpacity} = this.options;\n        const alphaMakesAChange = a !== undefined && a !== 1;\n\n        // If no opacity is applied, add undefined at the very end which gets\n        // set to 1 in setHSVA\n        if (values && values.length === 3) {\n            values[3] = undefined;\n        }\n\n        return {\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\n            type\n        };\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = this._parseLocalColor(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const color = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const el = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${color.toRGBA().toString(0)}\"/>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(el);\n            _swatchColors.push({el, color});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(el, 'click', () => {\n                    this.setHSVA(...color.toHSVA(), true);\n                    this._emit('swatchselect', color);\n                    this._emit('change', color);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n        const swatchColor = this._swatchColors[index];\n\n        // Check swatch data\n        if (swatchColor) {\n            const {el} = swatchColor;\n\n            // Remove HTML child and swatch data\n            this._root.swatches.removeChild(el);\n            this._swatchColors.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n\n        Object.keys(this._components)\n            .forEach(key => this._components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n        const {root, app} = this._root;\n\n        // Remove element\n        if (root.parentElement) {\n            root.parentElement.removeChild(root);\n        }\n\n        // remove .pcr-app\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        Object.keys(this)\n            .forEach(key => this[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        this._emit('hide', this);\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n\n        if (!this.options.disabled) {\n            this._root.app.classList.add('visible');\n            this._rePositioningPicker();\n            this._emit('show', this);\n        }\n\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this._components;\n        hue.update((h / 360));\n        opacity.update(a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        // Update output if recalculation is enabled\n        if (recalc) {\n            this._updateOutput();\n        }\n\n        // Restore old state\n        this._recalc = recalc;\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor(silent);\n            return true;\n        }\n\n        const {values, type} = this._parseLocalColor(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            this.setColorRepresentation(utype);\n            return this.setHSVA(...values, silent);\n        }\n\n        return false;\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Expose libraries for easier integration in things build on top of it\nPickr.libs = {\n    HSVaColor,\n    Moveable,\n    Nanopop,\n    Selectable\n};\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '1.3.0';\nexport default Pickr;\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass, theme, lockOpacity: lo}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div :ref=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" :ref=\"swatches\"></div> \r\n\r\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lo ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lo ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lo ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lo ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${s.cancel || 'Cancel'}\" type=\"button\" ${hidden(c.interaction.cancel)}>\r\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n"],"sourceRoot":""}