{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/lib/utils.js","webpack:///./src/js/lib/color.js","webpack:///./src/js/lib/hsvacolor.js","webpack:///./src/js/helper/moveable.js","webpack:///./src/js/helper/selectable.js","webpack:///./src/js/pickr.js","webpack:///./src/js/template.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","once","element","event","fn","options","on","helper","apply","this","arguments","removeEventListener","eventListener","off","method","elements","events","length","undefined","HTMLCollection","NodeList","Array","from","isArray","forEach","el","ev","_objectSpread","capture","slice","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","base","con","subtree","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","children","iterator","next","done","child","arr","push","err","return","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","negative","isNumChar","handleScroll","e","val","selectionStart","numStart","num","isNaN","isFinite","mul","deltaY","inc","Number","shiftKey","ctrlKey","newNum","newStr","substr","substring","curPos","String","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","padStart","string","maxLength","fillString","repeat","min","Math","max","floor","round","hsvToRgb","h","v","f","q","mod","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","_toConsumableArray","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","regex","cmyk","rgba","hsla","hsva","numarize","array","test","type","exec","_numarize2","_slicedToArray","values","concat","_numarize4","_numarize4$","a","splitAt","alpha","_splitAt$map2","_splitAt2","_numarize6","_numarize6$","_numarize8","_numarize8$","HSVaColor","ceil","that","toHSVA","rhsva","toString","toFixed","toHSLA","rhsla","toRGBA","rrgba","toCMYK","rgb","rcmyk","toHEXA","toUpperCase","join","clone","Moveable","opt","assign","lockX","lockY","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","trigger","update","wrapperRect","destroy","Selectable","className","onTap","classList","selectable_toConsumableArray","Pickr","_this","_classCallCheck","pickr_defineProperty","swatchselect","change","save","init","inline","_this$_root","_root","app","button","_window","innerWidth","innerHeight","bb","ab","bottom","pos","middle","right","wantedLeft","position","appClass","useAsButton","disabled","comparison","components","interaction","strings","swatches","default","defaultRepresentation","adjustableNumbers","showAlways","closeWithKey","_opt","preview","opacity","hue","palette","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","requestAnimationFrame","cb","offsetParent","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","_ref","hidden","int","split","reduce","pv","cv","ci","querySelector","shadowRoot","keys","input","clear","find","add","contains","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","comp","picker","_color","offsetHeight","cssRGBaString","background","currentColor","_recalc","_updateOutput","remove","slider","backgroundColor","selectable","updateTimeout","_this2","eventBindings","_clearColor","setHSVA","pickr_toConsumableArray","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","clearTimeout","setTimeout","_eventBindings","_this3","_len","args","_key","_eventListener","callBacks","index","indexOf","splice","_this4","Color","_swatchColors","hsvaColorObject","swatchColor","silent","_this$_root2","_this5","pickr","recalc","_this$components","hueY","opacityY","pickerWrapper","pickerX","pickerY","_Color$parseToHSV2","utype","startsWith","click","utils","version"],"mappings":"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","file":"pickr.es5.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Add an eventlistener which will be fired only once.\n *\n * @param element Target element\n * @param event Event name\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const once = (element, event, fn, options) => on(element, event, function helper() {\n    fn.apply(this, arguments);\n    this.removeEventListener(event, helper);\n}, options);\n\n/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    elements.forEach(el =>\n        events.forEach(ev =>\n            el[method](ev, fn, {capture: false, ...options})\n        )\n    );\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a 'data-key' attribute will be saved in a object (which will be returned)\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, 'data-con');\n        const key = removeAttribute(element, 'data-key');\n\n        // Check and save element\n        if (key) {\n            base[key] = element;\n        }\n\n        // Check all children\n        const subtree = con ? (base[con] = {}) : base;\n        for (let child of element.children) {\n\n            // Check if element should be saved as array\n            const arr = removeAttribute(child, 'data-arr');\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = [])).push(child);\n            } else {\n                resolve(child, subtree);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param negative\n */\nexport function adjustableInputNumbers(el, negative = true) {\n\n    // Check if a char represents a number\n    const isNumChar = c => (c >= '0' && c <= '9') || c === '-' || c === '.';\n\n    function handleScroll(e) {\n        const val = el.value;\n        const off = el.selectionStart;\n        let numStart = off;\n        let num = ''; // Will be the number as string\n\n        // Look back\n        for (let i = off - 1; i > 0 && isNumChar(val[i]); i--) {\n            num = val[i] + num;\n            numStart--; // Find start of number\n        }\n\n        // Look forward\n        for (let i = off, n = val.length; i < n && isNumChar(val[i]); i++) {\n            num += val[i];\n        }\n\n        // Check if number is valid\n        if (num.length > 0 && !isNaN(num) && isFinite(num)) {\n\n            const mul = e.deltaY < 0 ? 1 : -1;\n            const inc = ([1, 10, 100])[Number(e.shiftKey || e.ctrlKey * 2)] * mul;\n            let newNum = Number(num) + inc;\n\n            if (!negative && newNum < 0) {\n                newNum = 0;\n            }\n\n            const newStr = val.substr(0, numStart) + newNum + val.substring(numStart + num.length, val.length);\n            const curPos = numStart + String(newNum).length;\n\n            // Update value and set cursor\n            el.value = newStr;\n            el.focus();\n            el.setSelectionRange(curPos, curPos);\n        }\n\n        // Prevent default\n        e.preventDefault();\n\n        // Trigger input event\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n\n/**\n * Cross browser padStart implementation\n * @param string\n * @param maxLength\n * @param fillString\n * @returns {string}\n */\nexport function padStart(string, maxLength, fillString = ' ') {\n    maxLength = maxLength - string.length;\n\n    if (maxLength <= 0 || !fillString.length) {\n        return String(string);\n    } else {\n\n        if (maxLength > fillString.length) {\n            fillString += fillString.repeat(maxLength / fillString.length);\n        }\n\n        return fillString.slice(0, maxLength) + String(string);\n    }\n}\n","import {padStart} from '../lib/utils';\n\n// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    let i = floor(h);\n\n    let f = h - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    let mod = i % 6;\n    let r = [v, q, p, p, t, v][mod];\n    let g = [t, v, v, q, p, p][mod];\n    let b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        padStart(round(v).toString(16), 2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    let l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100, m /= 100, y /= 100, k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100, l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    let ns = (2 * s / (l + s)) * 100;\n    let v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSV(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                let [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break;\n\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\n            }\n            case 'rgba': {\n                let [, , r, g, b, a = 1] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...rgbToHsv(r, g, b), a], type};\n            }\n            case 'hex': {\n                const splitAt = (s, i) => [s.substring(0, i), s.substring(i, s.length)];\n                let [, hex] = match;\n\n                // Fill up opacity if not declared\n                if (hex.length === 3) {\n                    hex += 'F';\n                } else if (hex.length === 6) {\n                    hex += 'FF';\n                }\n\n                let alpha;\n                if (hex.length === 4) {\n                    [hex, alpha] = splitAt(hex, 3).map(v => v + v);\n                } else if (hex.length === 8) {\n                    [hex, alpha] = splitAt(hex, 6);\n                }\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                alpha = parseInt(alpha, 16) / 255;\n                return {values: [...hexToHsv(hex), alpha], type};\n            }\n            case 'hsla': {\n                let [, , h, s, l, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [...hslToHsv(h, s, l), a], type};\n            }\n            case 'hsva': {\n                let [, , h, s, v, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\n                    break;\n\n                return {values: [h, s, v, a], type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {padStart}                                from '../lib/utils';\nimport {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n    const {ceil} = Math;\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v];\n            const rhsva = hsva.map(ceil);\n\n            hsva.push(that.a);\n            hsva.toString = () => `hsva(${rhsva[0]}, ${rhsva[1]}%, ${rhsva[2]}%, ${that.a.toFixed(1)})`;\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = hsvToHsl(that.h, that.s, that.v);\n            const rhsla = hsla.map(ceil);\n\n            hsla.push(that.a);\n            hsla.toString = () => `hsla(${rhsla[0]}, ${rhsla[1]}%, ${rhsla[2]}%, ${that.a.toFixed(1)})`;\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = hsvToRgb(that.h, that.s, that.v);\n            const rrgba = rgba.map(ceil);\n\n            rgba.push(that.a);\n            rgba.toString = () => `rgba(${rrgba[0]}, ${rrgba[1]}, ${rrgba[2]}, ${that.a.toFixed(1)})`;\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            const rcmyk = cmyk.map(ceil);\n\n            cmyk.toString = () => `cmyk(${rcmyk[0]}%, ${rcmyk[1]}%, ${rcmyk[2]}%, ${rcmyk[3]}%)`;\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            hex.toString = () => {\n\n                // Check if alpha channel make sense, convert it to 255 number space, convert\n                // to hex and pad it with zeros if needet.\n                const alpha = that.a >= 1 ? '' : padStart(Number((that.a * 255).toFixed(0))\n                    .toString(16)\n                    .toUpperCase(), 2, '0');\n\n                return `#${hex.join('').toUpperCase() + alpha}`;\n            };\n\n            return hex;\n        },\n\n        clone() {\n            return HSVaColor(that.h, that.s, that.v, that.a);\n        }\n    };\n\n    return that;\n}\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lockX: false,\r\n            lockY: false,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {element} = options;\r\n            const b = that.options.wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (!options.lockX) {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (!options.lockY) {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            options.onchange(x, y);\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const wrapperRect = that.options.wrapper.getBoundingClientRect();\r\n            that._tapmove({\r\n                clientX: wrapperRect.left + x,\r\n                clientY: wrapperRect.top + y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from './../lib/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","// Import styles\nimport '../scss/pickr.scss';\n\n// Import utils\nimport * as _     from './lib/utils';\nimport * as Color from './lib/color';\n\n// Import classes\nimport {HSVaColor} from './lib/hsvacolor';\nimport Moveable    from './helper/moveable';\nimport Selectable  from './helper/selectable';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // Replace element with color picker\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        'swatchselect': [],\n        'change': [],\n        'save': [],\n        'init': []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n\n            components: {\n                interaction: {}\n            },\n            strings: {},\n\n            swatches: null,\n            inline: false,\n\n            default: 'fff',\n            defaultRepresentation: null,\n            position: 'middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n        const {swatches, inline, components} = opt;\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Finalize build\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb.bind(this));\n            }\n\n            // Apply default color\n            this.setColor(opt.default);\n            this._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                this._representation = opt.defaultRepresentation;\n                this.setColorRepresentation(this._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                this.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            this._initializingActive = false;\n            this._emit('init');\n        }).bind(this));\n    }\n\n    u;\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const {parentElement} = opt.el;\n\n            if (parentElement.lastChild === opt.el) {\n                parentElement.appendChild(root.app);\n            } else {\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const comp = this.options.components;\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    if (!comp.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Calculate saturation based on the position\n                    _color.s = (x / this.wrapper.offsetWidth) * 100;\n\n                    // Calculate the value\n                    _color.v = 100 - (y / this.wrapper.offsetHeight) * 100;\n\n                    // Prevent falling under zero\n                    _color.v < 0 ? _color.v = 0 : 0;\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent), \n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n                    }\n\n                    // If the user changes the color, remove the cleared icon\n                    _root.button.classList.remove('clear');\n                }\n            }),\n\n            hue: Moveable({\n                lockX: true,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(x, y) {\n                    if (!comp.hue || !comp.palette) return;\n\n                    // Calculate hue\n                    inst._color.h = (y / this.wrapper.offsetHeight) * 360;\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lockX: true,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(x, y) {\n                    if (!comp.opacity || !comp.palette) return;\n\n                    // Calculate opacity\n                    inst._color.a = Math.round(((y / this.wrapper.offsetHeight)) * 1e2) / 100;\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    inst.components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this.components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on(_root.preview.lastColor, 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            _.adjustableInputNumbers(_root.interaction.result, false);\n        }\n\n        if (!options.inline) {\n            let updateTimeout;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(_.on(window, ['scroll', 'resize'], () => {\n                if (this.isOpen()) {\n                    this.hide();\n\n                    if (updateTimeout) {\n                        clearTimeout(updateTimeout);\n                    }\n\n                    updateTimeout = setTimeout(() => this.show(), 250);\n                }\n            }));\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker = (() => {\n        const padding = 8;\n        let left, top;\n\n        return () => {\n\n            // No repositioning needed if inline\n            if (this.options.inline) {\n                return;\n            }\n\n            const {app, button} = this._root;\n            const {innerWidth, innerHeight} = window;\n            const bb = button.getBoundingClientRect();\n            const ab = app.getBoundingClientRect();\n\n            // Check if picker is cuttet of from the top & bottom\n            if (innerHeight - (bb.bottom + ab.height + padding) < 0) {\n                top = bb.top - ab.height - padding;\n            } else {\n                top = bb.bottom + padding;\n            }\n\n            // Positioning picker on the x-axis\n            const pos = {\n                left: bb.left + bb.width - ab.width,\n                middle: (-ab.width / 2) + (bb.left + bb.width / 2),\n                right: bb.left\n            };\n\n            const wantedLeft = pos[this.options.position];\n            if (left + wantedLeft > innerWidth) {\n                left = pos['left'];\n            } else if (wantedLeft < 0) {\n                left = pos['right'];\n            } else {\n                left = wantedLeft;\n            }\n\n            Object.assign(app.style, {\n                left: `${left}px`,\n                top: `${top}px`\n            });\n        };\n    })();\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor() {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = Color.parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"></button>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n\n        // Validate index\n        if (typeof index === 'number') {\n            const swatchColor = this._swatchColors[index];\n\n            // Check swatch data\n            if (swatchColor) {\n                const {element} = swatchColor;\n\n                // Remove HTML child and swatch data\n                this._root.swatches.removeChild(element);\n                this._swatchColors.splice(index, 1);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n        Object.keys(this.components).forEach(key => this.components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n\n        // Remove element\n        const root = this._root.root;\n        root.parentElement.removeChild(root);\n\n        // remove .pcr-app\n        const app = this._root.app;\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        const pickr = this;\n        Object.keys(pickr).forEach(key => pickr[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Short names\n        const {hue, opacity, palette} = this.components;\n\n        // Calculate y position of hue slider\n        const hueWrapper = hue.options.wrapper;\n        const hueY = hueWrapper.offsetHeight * (h / 360);\n        hue.update(0, hueY);\n\n        // Calculate y position of opacity slider\n        const opacityWrapper = opacity.options.wrapper;\n        const opacityY = opacityWrapper.offsetHeight * a;\n        opacity.update(0, opacityY);\n\n        // Calculate y and x position of color palette\n        const pickerWrapper = palette.options.wrapper;\n        const pickerX = pickerWrapper.offsetWidth * (s / 100);\n        const pickerY = pickerWrapper.offsetHeight * (1 - (v / 100));\n        palette.update(pickerX, pickerY);\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n        this._recalc = recalc; // Restore old state\n\n        // Update output if recalculation is enabled\n        if (this._recalc) {\n            this._updateOutput();\n        }\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor();\n            return true;\n        }\n\n        const {values, type} = Color.parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options.find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Static methods\nPickr.utils = {\n    once: _.once,\n    on: _.on,\n    off: _.off,\n    eventPath: _.eventPath,\n    createElementFromString: _.createElementFromString,\n    adjustableInputNumbers: _.adjustableInputNumbers,\n    removeAttribute: _.removeAttribute,\n    createFromTemplate: _.createFromTemplate\n};\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Export\nPickr.version = '0.5.1';\nexport default Pickr;\n","import * as _ from './lib/utils';\n\nexport default ({components: c, strings: s, useAsButton, inline, appClass}) => {\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n\n    const root = _.createFromTemplate(`\n      <div data-key=\"root\" class=\"pickr\">\n\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\n\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" ${inline ? 'style=\"position: unset\"' : ''}>\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\n            </div>\n\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\n            </div>\n\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\n            </div>\n\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\n            </div>\n          </div>\n\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \n\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\n\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\n\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\n          </div>\n        </div>\n      </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n"],"sourceRoot":""}